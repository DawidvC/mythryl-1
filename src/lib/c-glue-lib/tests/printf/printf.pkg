package Sfprintf {
    sfprintf = F_printf::f
    fun printf_int_int (f, i1, i2) = let
	f' = ZString::dupML' f
    in
	c::Cvt::ml_sint (c::call' T_printf_int_int::type
			       (c::U.fcast (c::Light::fptr (F_printf::fptr ())),
				(f', c::Cvt::c_sint i1, c::Cvt::c_sint i2)))
	before c::free' f'
    end
    fun printf_int_double (f, i, d) = let
	f' = ZString::dupML' f
    in
	c::Cvt::ml_sint (c::call' T_printf_int_double::type
			       (c::U.fcast (c::Light::fptr (F_printf::fptr ())),
				(f', c::Cvt::c_sint i, c::Cvt::c_double d)))
	before c::free' f'
    end
    fun printf_int_string_pointer (f, i, s, p) = let
	f' = ZString::dupML' f
	s' = ZString::dupML' s
    in
	c::Cvt::ml_sint (c::call' T_printf_int_string_pointer::type
			       (c::U.fcast (c::Light::fptr (F_printf::fptr ())),
				(f', c::Cvt::c_sint i, s', c::Ptr::inject' p)))
	before (c::free' f'; c::free' s')
    end
}
