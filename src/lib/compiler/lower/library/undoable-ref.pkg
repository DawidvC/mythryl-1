#
#  A reference that allows undo.
#
#  -- Allen Leung


api UNDOABLE_REF =
api
   eqtype uref  X
   my uref:  X -> uref( X )
   my !   : uref( X ) -> X
   my :=  : uref( X ) * X -> Void
end

generic package UndoableRef (Log:  TRANSACTION_LOG) : UNDOABLE_REF =
pkg

   type uref( X ) = Ref( X ) * Ref( Log::version )

   fun uref a
       =
       (REF a, REF *Log::version)

   fun !! (r, _) = *r

   fun commit (x, v) = fn ver => v := ver

   fun rollback (x, v) = 
   let x' = *x
   in  fn ver => (x := x'; v := ver)
   end

   fun ::= (r as (x, v), y) = 
   let ver = *Log::version
   in  if *v != ver then (Log::add_chunk { rollback = rollback r,
					 commit   = commit r
					}; 
			  v := ver)
       
       x := y
   end

   my !  = !!
   my op := = ::=
end

