# This is the main makefile for the Lib7 runtime system
#

SHELL =		/bin/sh
CC =		@CC@
CPP =		@CPP@
LD_LIBS2 =	$(LD_LIBS) @LIBS@
AS =		as
AR =		ar
ARFLAGS =	rcv
RANLIB =	@RANLIB@

#
# Dummy version
#
VERSION =	v-dummy

#
# target executable
#
RUNTIME =	interactive-runtime7

#
# source directories
#
RUNTIME_DIR =	..
OBJS_DIR =	$(RUNTIME_DIR)/o
GC_DIR =	$(RUNTIME_DIR)/gc
INC_DIR =	$(RUNTIME_DIR)/include
MAIN_DIR =	$(RUNTIME_DIR)/main
MACH_DIR =	$(RUNTIME_DIR)/machine-dependent
MEM_DIR =	$(RUNTIME_DIR)/memory
MP_DIR =	$(RUNTIME_DIR)/mp
BC_DIR =	$(RUNTIME_DIR)/bytecode
CLIB_DIR =	$(RUNTIME_DIR)/c-libs
CONFIG_DIR =	$(RUNTIME_DIR)/config
GTK_DIR =	$(RUNTIME_DIR)/gtk

CFLAGS =	-O

INCLUDES =	-I$(OBJS_DIR) -I$(INC_DIR)
GC_INCLUDES =	$(INCLUDES) -I$(GC_DIR)
GEN_INCLUDES =	-I$(CONFIG_DIR) $(INCLUDES)

OBJS =		c-libraries.o unix-raise-syserr.o runtime-options.o \
		load-o7-files.o \
		load-and-run-heap-image.o run-runtime.o globals.o runtime-state.o \
		error.o timers.o unix-timers.o \
		swap-bytes.o \
		unix-fault.o signal-util.o unix-signal.o unix-prof.o prim.o \
		$(XOBJS)

#
# Libraries of Lib7-callable C functions
#
CLIBS =		$(XCLIBS) \
		$(CLIB_DIR)/posix-os/libposix-os.a \
		$(CLIB_DIR)/lib7-runtime/liblib7-runtime.a \
		$(CLIB_DIR)/lib7-signals/liblib7-signals.a \
		$(CLIB_DIR)/lib7-prof/liblib7-prof.a \
		$(CLIB_DIR)/lib7-socket/liblib7-socket.a \
		$(CLIB_DIR)/lib7-time/liblib7-time.a \
		$(CLIB_DIR)/lib7-date/liblib7-date.a \
		$(CLIB_DIR)/lib7-math/liblib7-math.a \
		$(CLIB_DIR)/lib7-gtk/liblib7-gtk.a \
		$(CLIB_DIR)/lib7-ncurses/liblib7-ncurses.a \
		$(CLIB_DIR)/lib7-opencv/liblib7-opencv.a \
		$(CLIB_DIR)/posix-process/libposix-process.a \
		$(CLIB_DIR)/posix-procenv/libposix-procenv.a \
		$(CLIB_DIR)/posix-filesys/libposix-filesys.a \
		$(CLIB_DIR)/posix-io/libposix-io.a \
		$(CLIB_DIR)/posix-sysdb/libposix-sysdb.a \
		$(CLIB_DIR)/posix-signal/libposix-signal.a \
		$(CLIB_DIR)/posix-tty/libposix-tty.a \
		$(CLIB_DIR)/posix-error/libposix-error.a

#
# The mmap version is the default memory subsystem
#
LIBMEM_OBJS =	'OBJS=$$(MMAP_OBJS)'

#
# The SGI version is the default MP library
#
LIBMP_OBJS =	'OBJS=$$(SGI_OBJS)'

#
# the default GC library
#
GC_LIB =	libgc.a

#
# The various libraries; note that the order matters, since the C functions
# Call GC library routines, and the GC library uses the memory library.
#
LIB7_LIBS =	$(GC_DIR)/$(GC_LIB) \
		$(MEM_DIR)/libmem.a

DEP_LIBS =	$(LIB7_LIBS) $(XLIBS)

ALL_LIBS =	$(CLIBS) $(DEP_LIBS)

clean:
	@rm -f 	\
		*.o			\
		bc-instruction-def.h	\
		gen-bc-instruction-def	\
		gen-offsets		\
		gen-sizes		\
		gen-unix-signals	\
		gen-unix-sigtbl		\
		interactive-runtime7	\
		lib7state-offsets.h	\
		mythryl			\
		passthrough		\
		mythryl-gtk-slave	\
		prim.s			\
		primops.s		\
		run.*			\
		runtime-sizes.h		\
		system-signals.h	\
		unix-sigtbl.c		\
		v-*
	@(cd $(MEM_DIR);  $(MAKE) MAKE="$(MAKE)" clean)
	@(cd $(CLIB_DIR); $(MAKE) MAKE="$(MAKE)" clean)
	@(cd $(GC_DIR);   $(MAKE) MAKE="$(MAKE)" clean)
	@(cd $(MP_DIR);   $(MAKE) MAKE="$(MAKE)" clean)


$(RUNTIME):	$(VERSION) main.o $(OBJS) $(ALL_LIBS)
	echo "src/runtime/o/Makefile building $(RUNTIME):"
	$(CC) -o $(RUNTIME) $(CFLAGS) $(LDFLAGS) main.o $(OBJS) $(ALL_LIBS) $(LD_LIBS2) `pkg-config --libs gtk+-2.0`

$(VERSION):
		echo "$(VERSION)" > $(VERSION)

#
# Sizes
#
runtime-sizes.h:	gen-sizes
	@echo "src/runtime/o/Makefile running 'gen-sizes' to generate runtime-sizes.h:"
	./gen-sizes

#
# main .o7 files
#
main.o:		$(MAIN_DIR)/main.c runtime-sizes.h $(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-options.h $(INC_DIR)/runtime-limits.h $(INC_DIR)/runtime-heap.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/main.c

runtime-options.o:	$(MAIN_DIR)/error.c $(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-options.h runtime-sizes.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/runtime-options.c

error.o:	$(MAIN_DIR)/error.c $(INC_DIR)/runtime-base.h runtime-sizes.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/error.c

dummy-main.o:	$(MAIN_DIR)/dummy-main.c runtime-sizes.h $(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-limits.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/dummy-main.c

load-o7-files.o:		$(MAIN_DIR)/load-o7-files.c \
		$(INC_DIR)/runtime-osdep.h $(INC_DIR)/cache-flush.h \
		runtime-sizes.h $(INC_DIR)/runtime-base.h $(INC_DIR)/o7-file.h \
		$(INC_DIR)/runtime-heap.h $(INC_DIR)/runtime-globals.h $(INC_DIR)/gc.h \
		$(INC_DIR)/runtime-limits.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/load-o7-files.c

load-and-run-heap-image.o:	$(MAIN_DIR)/load-and-run-heap-image.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-roots.h $(INC_DIR)/runtime-state.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/load-and-run-heap-image.c

run-runtime.o:	$(MAIN_DIR)/run-runtime.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-values.h \
		$(INC_DIR)/vproc-state.h $(INC_DIR)/runtime-roots.h \
		$(INC_DIR)/runtime-state.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/run-runtime.c

globals.o:	$(MAIN_DIR)/globals.c \
		runtime-sizes.h $(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-values.h $(INC_DIR)/runtime-limits.h \
		$(INC_DIR)/c-globals-table.h $(INC_DIR)/machine-id.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/globals.c

runtime-state.o:	$(MAIN_DIR)/runtime-state.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/tags.h \
		$(INC_DIR)/runtime-values.h $(INC_DIR)/runtime-roots.h \
		$(INC_DIR)/runtime-state.h  $(INC_DIR)/vproc-state.h \
		$(INC_DIR)/runtime-globals.h $(INC_DIR)/runtime-timer.h $(INC_DIR)/gc.h \
		$(INC_DIR)/runtime-limits.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/runtime-state.c

timers.o:	$(MAIN_DIR)/timers.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/vproc-state.h \
		$(INC_DIR)/runtime-timer.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/timers.c

unix-timers.o:	$(MAIN_DIR)/unix-timers.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-unixdep.h \
		$(INC_DIR)/vproc-state.h $(INC_DIR)/runtime-timer.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/unix-timers.c

swap-bytes.o:	$(MAIN_DIR)/swap-bytes.c \
		runtime-sizes.h $(INC_DIR)/runtime-base.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MAIN_DIR)/swap-bytes.c


#
# C libraries
#
c-libraries.o:	$(CLIB_DIR)/c-libraries.c \
		runtime-sizes.h $(INC_DIR)/runtime-base.h \
		$(CLIB_DIR)/clib-list.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) -I$(CLIB_DIR) $(CLIB_DIR)/c-libraries.c

unix-raise-syserr.o:	$(CLIB_DIR)/unix-raise-syserr.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-roots.h $(INC_DIR)/runtime-state.h \
		$(INC_DIR)/runtime-heap.h $(INC_DIR)/runtime-globals.h \
		$(INC_DIR)/runtime-unixdep.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(CLIB_DIR)/unix-raise-syserr.c

#
# Machine dependent .o7 files
#
unix-fault.o:	$(MACH_DIR)/unix-fault.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-unixdep.h \
		$(INC_DIR)/vproc-state.h $(INC_DIR)/runtime-roots.h \
		$(INC_DIR)/runtime-state.h $(INC_DIR)/runtime-globals.h \
		$(MACH_DIR)/signal-sysdep.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MACH_DIR)/unix-fault.c

signal-util.o:	$(MACH_DIR)/signal-util.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-signals.h \
		$(INC_DIR)/vproc-state.h $(INC_DIR)/runtime-roots.h $(INC_DIR)/runtime-state.h \
		$(INC_DIR)/runtime-limits.h $(INC_DIR)/runtime-heap.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MACH_DIR)/signal-util.c

unix-signal.o:	$(MACH_DIR)/unix-signal.c \
		runtime-sizes.h unix-sigtbl.c system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-unixdep.h \
		$(INC_DIR)/runtime-signals.h $(INC_DIR)/vproc-state.h $(INC_DIR)/runtime-roots.h $(INC_DIR)/runtime-state.h \
		$(INC_DIR)/runtime-limits.h $(INC_DIR)/runtime-heap.h \
		$(INC_DIR)/runtime-globals.h \
		$(MACH_DIR)/signal-sysdep.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MACH_DIR)/unix-signal.c

unix-prof.o:	$(MACH_DIR)/unix-prof.c \
		runtime-sizes.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-unixdep.h \
		$(INC_DIR)/runtime-signals.h $(INC_DIR)/runtime-globals.h \
		$(MACH_DIR)/signal-sysdep.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(MACH_DIR)/unix-prof.c

system-signals.h:	gen-unix-signals
	@echo "src/runtime/o/Makefile: Generating system-signals.h by running gen-unix-signals:"
	./gen-unix-signals

unix-sigtbl.c:	gen-unix-sigtbl
	@echo "src/runtime/o/Makefile: Generating unix-sigtbl.c by running gen-unix-sigtbl:"
	./gen-unix-sigtbl

prim.o:		$(MACH_DIR)/$(TARGET).prim.asm \
		runtime-sizes.h $(INC_DIR)/runtime-base.h $(INC_DIR)/tags.h \
		$(INC_DIR)/asm-base.h \
		lib7state-offsets.h
	$(CPP) -D_ASM_ $(DEFS) -I$(BC_DIR) $(INCLUDES) $(MACH_DIR)/$(TARGET).prim.asm > prim.s
	$(AS) -o prim.o prim.s

$(MACH_DIR)/BYTECODE.prim.asm: bc-instruction-def.h $(BC_DIR)/bc-instrs.h $(BC_DIR)/bc.h


#
#

lib7state-offsets.h:	gen-offsets runtime-sizes.h system-signals.h $(INC_DIR)/runtime-base.h $(INC_DIR)/vproc-state.h $(INC_DIR)/runtime-roots.h $(INC_DIR)/runtime-state.h
	@echo "src/runtime/o/Makefile: Generating lib7state-offsets.h by running gen-offsets:"
	./gen-offsets


#
# Bytecode interpreter
#
interp.o:	$(BC_DIR)/interp.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-values.h \
		$(INC_DIR)/runtime-roots.h $(INC_DIR)/runtime-state.h \
		$(INC_DIR)/tags.h $(INC_DIR)/bibop.h \
		$(GC_DIR)/arena-id.h \
		$(BC_DIR)/bc.h $(BC_DIR)/bc-trace.h $(BC_DIR)/memory-trace.h
	$(CC) -c $(CFLAGS) $(DEFS) $(GC_INCLUDES) $(BC_DIR)/interp.c

print-bc.o:	$(BC_DIR)/print-bc.c \
		runtime-sizes.h $(INC_DIR)/runtime-base.h \
		$(BC_DIR)/bc.h $(BC_DIR)/bc-trace.h $(BC_DIR)/print-bc.h
	$(CC) -c $(CFLAGS) $(DEFS) $(INCLUDES) $(BC_DIR)/print-bc.c

memory-trace.o:	$(BC_DIR)/memory-trace.c \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/runtime-roots.h $(INC_DIR)/runtime-state.h $(INC_DIR)/cntr.h \
		$(INC_DIR)/bibop.h \
		$(GC_DIR)/heap.h $(GC_DIR)/arena-id.h \
		$(BC_DIR)/memory-trace.h
	$(CC) -c $(CFLAGS) $(DEFS) $(GC_INCLUDES) $(BC_DIR)/memory-trace.c

primops.o:	$(BC_DIR)/primops.asm \
		$(INC_DIR)/asm-base.h
	$(CPP) -D_ASM_ $(DEFS) $(INCLUDES) $(BC_DIR)/primops.asm > primops.s
	$(AS) -o primops.o primops.s

bc-instruction-def.h:	gen-bc-instruction-def $(BC_DIR)/bc.h $(BC_DIR)/print-bc.h
	@echo "src/runtime/o/Makefile: Generating bc-instruction-def.h by running gen-bc-instruction-def:"
	./gen-bc-instruction-def


#
# Arguments to recursive make
#
MK_ARGS =		VERSION="$(VERSION)" \
			CC="$(CC)" CFLAGS="$(CFLAGS)" DEFS="$(DEFS)" \
			AR="$(AR)" ARFLAGS="$(ARFLAGS)" \
			RANLIB="$(RANLIB)" \
			INCLUDES="$(GC_INCLUDES) -I../bytecode"

#
# memory management library
#
$(MEM_DIR)/libmem.a: runtime-sizes.h
	(cd $(MEM_DIR); $(MAKE)  $(LIBMEM_OBJS) $(MK_ARGS) libmem.a)

#
# C functions library
#
$(CLIB_DIR)/libcfuns.a: runtime-sizes.h
	(cd $(CLIB_DIR); $(MAKE)  $(MK_ARGS) libcfuns.a)


#
# GC and heap I/O library
#
$(GC_DIR)/$(GC_LIB): runtime-sizes.h system-signals.h
	(cd $(GC_DIR); $(MAKE)  CHECK_HEAP="$(CHECK_HEAP)" $(MK_ARGS) $(GC_LIB))


#
# multiprocessor library (optional)
#
$(MP_DIR)/libmp.a: runtime-sizes.h
	(cd $(MP_DIR); $(MAKE)  $(LIBMP_OBJS) $(MK_ARGS) libmp.a)




#
# Wrappers to invoke compiler executable proper
#


mythryl:	mythryl.c
	@echo "src/runtime/o/Makefile: Compiling mythryl ..."
	$(CC) -Wall $(CFLAGS) $(DEFS) -o mythryl mythryl.c
	@echo "src/runtime/o/Makefile: Installing ROOT/bin/mythryl:"
	cp mythryl ../../../bin
	chmod 755 ../../../bin/mythryl
	rm mythryl

#
# Miscellaneous tiny support programss:
#
passthrough:	passthrough.c
	@echo "src/runtime/o/Makefile: Compiling passthrough ..."
	$(CC) -Wall $(CFLAGS) $(DEFS) -o passthrough passthrough.c
	@echo "src/runtime/o/Makefile: Installing ROOT/bin/passthrough:"
	cp passthrough ../../../bin
	chmod 755 ../../../bin/passthrough
	rm passthrough


set_heapdump_shebang:	set-heapdump-shebang.c runtime-sizes.h
	@echo "src/runtime/o/Makefile: Compiling set-heapdump-shebang ..."
	$(CC) -Wall $(CFLAGS) $(DEFS) -I../include -I../gc -I../o -o set-heapdump-shebang set-heapdump-shebang.c
	@echo "src/runtime/o/Makefile: Installing ROOT/bin/set-heapdump-shebang:"
	cp set-heapdump-shebang ../../../bin
	chmod 755 ../../../bin/set-heapdump-shebang
	rm set-heapdump-shebang

# According to
#     /usr/share/doc/libgtkgl2.0-dev/README.Debian
# "To link an application you would generally use the following flags:
#      $(pkg-config --libs gtkgl-2.0) -lGL -lGLU
# GtkGlarea home page:
#     http://www.student.oulu.fi/~jlof/gtkglarea/

mythryl-gtk-slave:	$(GTK_DIR)/mythryl-gtk-slave.c
	@echo "src/runtime/o/Makefile: Compiling mythryl-gtk-slave ..."
	$(CC) -Wall $(CFLAGS) $(DEFS) `pkg-config --cflags gtk+-2.0` `pkg-config --libs gtk+-2.0` -o mythryl-gtk-slave $(GTK_DIR)/mythryl-gtk-slave.c
	@echo "src/runtime/o/Makefile: Installing ROOT/bin/mythryl-gtk-slave"
	cp mythryl-gtk-slave ../../../bin
	chmod 755 ../../../bin/mythryl-gtk-slave
	rm mythryl-gtk-slave


#
# Configuration tools
#
gen-sizes:	$(CONFIG_DIR)/gen-sizes.c gen-common.o $(CONFIG_DIR)/gen.h $(INC_DIR)/runtime-base.h
	$(CC) $(CFLAGS) $(DEFS) $(GEN_INCLUDES) -o gen-sizes $(CONFIG_DIR)/gen-sizes.c gen-common.o

gen-regmask:	$(CONFIG_DIR)/gen-regmask.c gen-common.o $(CONFIG_DIR)/gen.h
	$(CC) $(CFLAGS) $(DEFS) $(GEN_INCLUDES) -o gen-regmask $(CONFIG_DIR)/gen-regmask.c gen-common.o

# The "mythryl" "passthrough", "set_heapdump_shebang" and "mythryl-gtk-slave" dependencies here are totally bogus,
# just a quick and (very!) dirty hack to get them compiled and installed:        XXX BUGGO FIXME

gen-offsets:	$(CONFIG_DIR)/gen-offsets.c gen-common.o $(CONFIG_DIR)/gen.h \
		mythryl passthrough set_heapdump_shebang mythryl-gtk-slave \
		runtime-sizes.h system-signals.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/vproc-state.h \
		$(INC_DIR)/runtime-roots.h $(INC_DIR)/runtime-state.h
	$(CC) $(CFLAGS) $(DEFS) $(GEN_INCLUDES) -o gen-offsets $(CONFIG_DIR)/gen-offsets.c gen-common.o

gen-bc-instruction-def:	$(CONFIG_DIR)/gen-bc-instruction-def.c \
		gen-common.o $(CONFIG_DIR)/gen.h \
		$(BC_DIR)/bc.h $(BC_DIR)/print-bc.h
	$(CC) $(CFLAGS) $(GEN_INCLUDES) -I$(BC_DIR) -o gen-bc-instruction-def $(CONFIG_DIR)/gen-bc-instruction-def.c gen-common.o

gen-unix-signals:	$(CONFIG_DIR)/gen-unix-signals.c \
		unix-signals.o gen-common.o \
		$(CONFIG_DIR)/gen.h $(CONFIG_DIR)/gen-unix-signals.h
	$(CC) $(CFLAGS) $(GEN_INCLUDES) $(DEFS) -o gen-unix-signals $(CONFIG_DIR)/gen-unix-signals.c unix-signals.o gen-common.o

gen-unix-sigtbl:	$(CONFIG_DIR)/gen-unix-sigtbl.c \
		gen-common.o unix-signals.o \
		$(CONFIG_DIR)/gen.h $(CONFIG_DIR)/gen-unix-signals.h
	$(CC) $(CFLAGS) $(GEN_INCLUDES) $(DEFS) -o gen-unix-sigtbl $(CONFIG_DIR)/gen-unix-sigtbl.c unix-signals.o gen-common.o

gen-common.o:	$(CONFIG_DIR)/gen-common.c $(CONFIG_DIR)/gen.h
	$(CC) -c $(CFLAGS) $(GEN_INCLUDES) $(CONFIG_DIR)/gen-common.c

unix-signals.o:	$(CONFIG_DIR)/unix-signals.c $(CONFIG_DIR)/gen.h
	$(CC) -c $(CFLAGS) $(GEN_INCLUDES) $(DEFS) $(CONFIG_DIR)/unix-signals.c


#
# Make rules for the C libraries
#

# include directories for the library sub-directories
#
LIB_OBJS_DIR =	../../o
LIB_INC_DIR =	../../include
LIB_INCLUDES =	-I$(LIB_OBJS_DIR) -I$(LIB_INC_DIR) -I..

#
# Arguments to recursive make:
#
LIB_MK_ARGS =		VERSION="$(VERSION)" \
			CC="$(CC)" CFLAGS="$(CFLAGS)" DEFS="$(DEFS)" \
			AR="$(AR)" ARFLAGS="$(ARFLAGS)" \
			RANLIB="$(RANLIB)" \
			INCLUDES="$(LIB_INCLUDES)"

$(CLIB_DIR)/posix-os/libposix-os.a: runtime-sizes.h
	(cd $(CLIB_DIR)/posix-os; $(MAKE)  $(LIB_MK_ARGS) libposix-os.a)

$(CLIB_DIR)/lib7-runtime/liblib7-runtime.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-runtime; $(MAKE)  $(LIB_MK_ARGS) liblib7-runtime.a)

$(CLIB_DIR)/lib7-signals/liblib7-signals.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-signals; $(MAKE)  $(LIB_MK_ARGS) liblib7-signals.a)

$(CLIB_DIR)/lib7-prof/liblib7-prof.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-prof; $(MAKE)  $(LIB_MK_ARGS) liblib7-prof.a)

$(CLIB_DIR)/lib7-socket/liblib7-socket.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-socket; $(MAKE)  $(LIB_MK_ARGS) liblib7-socket.a)

$(CLIB_DIR)/lib7-time/liblib7-time.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-time; $(MAKE)  $(LIB_MK_ARGS) liblib7-time.a)

$(CLIB_DIR)/lib7-date/liblib7-date.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-date; $(MAKE)  $(LIB_MK_ARGS) liblib7-date.a)

$(CLIB_DIR)/lib7-math/liblib7-math.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-math; $(MAKE)  $(LIB_MK_ARGS) liblib7-math.a)

$(CLIB_DIR)/lib7-mp/liblib7-mp.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-mp; $(MAKE)  $(LIB_MK_ARGS) liblib7-mp.a)

$(CLIB_DIR)/posix-process/libposix-process.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/posix-process; $(MAKE)  $(LIB_MK_ARGS) libposix-process.a)

$(CLIB_DIR)/posix-procenv/libposix-procenv.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/posix-procenv; $(MAKE)  $(LIB_MK_ARGS) libposix-procenv.a)

$(CLIB_DIR)/posix-filesys/libposix-filesys.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/posix-filesys; $(MAKE)  $(LIB_MK_ARGS) libposix-filesys.a)

$(CLIB_DIR)/posix-io/libposix-io.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/posix-io; $(MAKE)  $(LIB_MK_ARGS) libposix-io.a)

$(CLIB_DIR)/posix-sysdb/libposix-sysdb.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/posix-sysdb; $(MAKE)  $(LIB_MK_ARGS) libposix-sysdb.a)

$(CLIB_DIR)/posix-signal/libposix-signal.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/posix-signal; $(MAKE)  $(LIB_MK_ARGS) libposix-signal.a)

$(CLIB_DIR)/posix-tty/libposix-tty.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/posix-tty; $(MAKE)  $(LIB_MK_ARGS) libposix-tty.a)

$(CLIB_DIR)/posix-error/libposix-error.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/posix-error; $(MAKE)  $(LIB_MK_ARGS) libposix-error.a)

$(CLIB_DIR)/lib7-ncurses/liblib7-ncurses.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-ncurses; $(MAKE)  $(LIB_MK_ARGS) liblib7-ncurses.a)

$(CLIB_DIR)/lib7-gtk/liblib7-gtk.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-gtk; $(MAKE)  $(LIB_MK_ARGS) liblib7-gtk.a)

$(CLIB_DIR)/lib7-opencv/liblib7-opencv.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-opencv; $(MAKE)  $(LIB_MK_ARGS) liblib7-opencv.a)

$(CLIB_DIR)/dl/libunix-dynload.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/dl; $(MAKE)  $(LIB_MK_ARGS) libunix-dynload.a)

$(CLIB_DIR)/lib7-ccalls/liblib7-ccalls.a:  runtime-sizes.h system-signals.h
	(cd $(CLIB_DIR)/lib7-ccalls; $(MAKE)  $(LIB_MK_ARGS) liblib7-ccalls.a)


## COPYRIGHT(c) 1994 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
