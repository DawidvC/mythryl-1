=============================================================
                     AN_IO.OVERVIEW
=============================================================
2007-10-06 CrT

The Mythryl I/O subsystem design is based
on a four-layer stack:

   Imperative I/O  Conventional (side-effect-based) I/O with unix-style redirection.
   Stream     I/O  Input via lazy functional streams;  Conventional buffered output.
   Winix      I/O  Cross-platform standard interface covering the Host I/O layer.
   Host       I/O: Direct host-OS-level I/O.  E.g., calls to Unix open()/read()/write()/close().

User code may call into any of the four levels,
although it is recommended that only the top
two levels be used as a matter of habit:

  +----------------------------------------------------------------------------+
  | User code                                                                  |
  +----------------+                                                           |
  | Imperative I/O |                                                           |
  +----------------+-------------------+                                       |
  | Stream     I/O                     |                                       |
  +------------------------------------+-------------------+                   |
  | Winix      I/O                                         |                   |
  +--------------------------------------------------------+-------------------+
  | Host       I/O                                                             |
  +----------------------------------------------------------------------------+


NB: For concreteness and clarity, the following describe
    the unix implementation.  The Windows implementation
    follows much the same pattern, with obvious substitutions.



=============================================================
Major APIs:

----------Imperative I/O Layer--------
    Binary_Io						src/lib/std/src/io/binary-io.api
        Includes:
	    Imperative_Io				src/lib/std/src/io/imperative-io.api

    Imperative_Io					src/lib/std/src/io/imperative-io.api
	Defines:
	    Input_Stream, Output_Stream, ...
	    read, write, ...
	    subpackage pure_io: Pure_Io
        Included by:
	    Binary_Io					src/lib/std/src/io/binary-io.api

----------Stream I/O Layer--------
    Text_Io						src/lib/std/src/io/text-io.api
        Uses:
	    Text_Pure_Io				src/lib/std/src/io/text-pure-io.api
        Defines:
            Input_Stream, Output_Stream
            open_for_read, open, open_for_append
            stdin, stdout, stderr

    Text_Pure_Io					src/lib/std/src/io/text-pure-io.api
        Includes:
	    Pure_Io					src/lib/std/src/io/pure-io.api
        Adds read_line, write_substring

    Pure_Io						src/lib/std/src/io/pure-io.api
        Defines:
            (Input|Output)_Stream
            read/write
        Included by:
	    Text_Pure_Io				src/lib/std/src/io/text-pure-io.api

----------Winix I/O Layer--------
    Winix							src/lib/std/src/os/winix.api
	Sub-apis:
	    file_system:  Winix_File			src/lib/std/src/os/winix-file.api
	    path:  	  Winix_Path			src/lib/std/src/os/winix-path.api
	    process:      Winix_Process			src/lib/std/src/os/winix-process.api
	    io:  	  Winix_Io				src/lib/std/src/os/winix-io.api

    Winix_Primitive_Io					src/lib/std/src/io/winix-primitive-io.api
	Uses:
	    Primitive_Io				src/lib/std/src/io/primitive-io.api

    Primitive_Io					src/lib/std/src/io/primitive-io.api
        Small
        Self-contained except for winix::io::Io_Descriptor
	Defines:
	    Reader, Writer.
	Used by:
	    Winix_Primitive_Io				src/lib/std/src/io/winix-primitive-io.api

----------Host I/O Layer--------

These mostly appear not to have explicit API files at present?

=============================================================
Major Packages and Package Macros:

----------Imperative I/O Layer--------
    binary_io				Binary_Io		ssrc/lib/std/src/unix/posix-binary-io.pkg
	   "The implementation of the
	    binary_io stack on Posix
	    systems."
	Defined by:
	    binary_io_g
	Passes:
	    posix_binary_primitive_io				src/lib/std/src/unix/posix-binary-primitive-io.pkg

    binary_io_g			Binary_Io		src/lib/std/src/io/binary-io-g.pkg
	Invoked by:
	    binary_io			Binary_Io		src/lib/std/src/unix/posix-binary-io.pkg
	Passed:
	    posix_binary_primitive_io	Winix_Primitive_Io		src/lib/std/src/unix/posix-binary-primitive-io.pkg
	Uses:
	    binary_primitive_io
	    
----------Stream I/O Layer--------
    file 				Text_Io    	        src/lib/std/src/unix/file.pkg
	   "The implementation of the
	    file stack on Posix
	    systems."
	Defined by:
	    text_io_g 			Text_Io    	        src/lib/std/src/io/text-io-g.pkg
	Uses:
	    posix_text_primitive_io	Winix_Primitive_Io+	src/lib/std/src/unix/posix-text-primitive-io.pkg

    text_io_g 				Text_Io    	        src/lib/std/src/io/text-io-g.pkg
	Gets passed:
	    posix_text_primitive_io	Winix_Primitive_Io+	src/lib/std/src/unix/posix-text-primitive-io.pkg

----------Winix I/O Layer--------
    winix = winix_guts				src/lib/std/exports/winix.pkg

    winix_guts		Winix			src/lib/std/src/unix/winix-guts.pkg
        Subpackages:
	    file_system
                =
                winix_file 		Winix_File		src/lib/std/src/unix/os-filesys.pkg
	    path       = winix_path	Winix_Path		src/lib/std/src/unix/os-path.pkg
	    process    = winix_process	Winix_Process		src/lib/std/src/unix/os-process.pkg
	    io         = winix_io	Winix_Io		src/lib/std/src/unix/os-io.pkg

    winix_file				Winix_File		src/lib/std/src/unix/os-filesys.pkg
	Uses:
	    posix						src/lib/std/src/posix/posix-file.pkg

    winix_path							src/lib/std/src/unix/os-path.pkg
	Defined by:
	    winix_path_g		Winix_Path		src/lib/std/src/os/winix-path-g.pkg

    winix_process			Winix_Process		src/lib/std/src/unix/os-process.pkg
	Uses:
	    posix::process					src/lib/std/src/posix/posix-process.pkg

----------System I/O Layer--------

    posix_text_primitive_io		Winix_Primitive_Io+	src/lib/std/src/unix/posix-text-primitive-io.pkg
	Argument to text_io_g.
	Also used in spawn.pkg
        Uses:
	    posix::file						src/lib/std/src/posix/posix-file.pkg
            posix::io						src/lib/std/src/posix/posix-io.pkg
            posix_binary_primitive_io	Winix_Primitive_Io	src/lib/std/src/unix/posix-binary-primitive-io.pkg
            text_primitive_io					src/lib/std/src/io/text-primitive-io.pkg
	Used-by:
	    unix			Unix			
	    text_io_g (as arg)		Text_Io    	        src/lib/std/src/io/text-io-g.pkg

    posix_binary_primitive_io		Winix_Primitive_Io		src/lib/std/src/unix/posix-binary-primitive-io.pkg
        Uses:
	    posix::file						src/lib/std/src/posix/posix-file.pkg
            posix::io						src/lib/std/src/posix/posix-io.pkg
	    binary_primitive_io					src/lib/std/src/io/binary-primitive-io.pkg
            file_position_guts					src/lib/std/src/bind-position-31.pkg
	Passed to:
	    binary_io_g		Binary_Io		src/lib/std/src/io/binary-io-g.pkg
	Passed by:
	    binary_io			Binary_Io		ssrc/lib/std/src/unix/posix-binary-io.pkg


    posix::process						src/lib/std/src/posix/posix-process.pkg
	Uses:
	    posix_signal					src/lib/std/src/posix/posix-signal.pkg
	    cfun "fork"						src/runtime/c-libs/posix-process/fork.c
	    cfun "exec"						src/runtime/c-libs/posix-process/exec.c
                 ...                                                                             ...

    posix::io							src/lib/std/src/posix/posix-io.pkg
	Uses:
	    posix::file						src/lib/std/src/posix/posix-file.pkg
            cfun "read"						src/runtime/c-libs/posix-io/read.c
	    cfun "close"					src/runtime/c-libs/posix-io/close.c
                 ...									    ...

    posix::file							src/lib/std/src/posix/posix-file.pkg
	Uses:
    	    cfun "opendir"					src/runtime/c-libs/posix-filesys/opendir.c
            cfun "readdir"					src/runtime/c-libs/posix-filesys/readdir.c
                 ...                                                                             ...


	  

    text_primitive_io						src/lib/std/src/io/text-primitive-io.pkg
    binary_primitive_io						src/lib/std/src/io/binary-primitive-io.pkg
	Both defined by:
	    primitive_io_g					src/lib/std/src/io/primitive-io-g.pkg

    primitive_io_g			Primitive_Io		src/lib/std/src/io/primitive-io-g.pkg
	Self-contained.
	Defines Reader/Writer.



=============================================================
