This is a placeholder directory for a planned GUI/app
toolkit based directly upon OpenGL as the graphics
layer, and upon the state-kit as the state management
toolkit.

I currently envision the externally visible interface
of leaf widgets as consisting essentially of

   o A function which accepts an OpenGL
     drawing context together with a time, and then
     draws itself via arbitrary OpenGL drawing commands.
     (The time argument is to allow easy animation of
     spinning widgets, crawling text and perimeters &tc.
     It probably won't correspond in any simple way to
     wallclock time, in general.)

   o Some or all of the the state-kit output latches
     'owned' by this widget.

   o An 'init' function which registers with the
     AFP scheduler both all output latches owned by
     the widget -- public or private -- and also the
     state-update code nodes associated with those
     latches (which will implicitly register with
     the AFP scheduler their input latches.)

I currently envision composite (non-leaf) widgets as
basically following the x-kit model, but with state-kit
latches and code nodes replacing the x-kit CML stuff.

If that sounds vague, it perfectly describes my
current understanding. :)

