## liveness.api  -- Computing live variables.

# Compiled by:
#     src/lib/compiler/lower/make7/lowcode.make6

api Liveness {

    package control_flow_graph:  Control_Flow_Graph;				# Control_Flow_Graph	is from   src/lib/compiler/lower/flowgraph/control-flow-graph.api

    Liveness_Table
      = 
      int_hash_table::Hash_Table( cells_basis::sorted_cells::Sorted_Cells );

    Du = (List( cells_basis::Cell ), List( cells_basis::Cell ));		# "du" == "definition/use"

    # One def/use step (given def/use function, take du after instruction
    # to du before instruction
    #
    du_step:  (control_flow_graph::instruction_set::Instruction -> Du) ->
	      (control_flow_graph::instruction_set::Instruction,   Du) -> Du;

    # One step for liveness (on a per-instruction basis)
    #
    live_step:  (control_flow_graph::instruction_set::Instruction -> Du) ->
	        (control_flow_graph::instruction_set::Instruction, cells_basis::sorted_cells::Sorted_Cells) ->
		  cells_basis::sorted_cells::Sorted_Cells;

    liveness:  { def_use:  	control_flow_graph::instruction_set::Instruction -> Du,
		 get_cell:	cells_basis::cell_set::Cellset -> List( cells_basis::Cell )
	       }
               ->
               control_flow_graph::Control_Flow_Graph 
               ->
	       { live_in:	Liveness_Table,
		 live_out:	Liveness_Table
	       };

};


