## interactive.pkg




# interactive tactic tree manager. 



generic package InteractiveTT (package TTS:  TTREE_SUPPORT) : INTERACTIVE_TT =
pkg

package TTS = TTS
package TTM = TTreeManager (package s = TTS)


fun error_handler event = 
    let err_msg = threadkit::sync event
    in
	(case err_msg
	    of TTM::TacticApplicationError m => CIO::print "Tactic Application Error \n"
	     | TTM::TacticParseError => CIO::print "Tactic Parse Error \n"
             | _ => CIO::print "unknown exception \n");
	error_handler event 
    end

fun layout ttree menu server = let
	root = widget::mkRoot server
        tw =  TTM::mkTTreeWidget (ttree, menu, root) 
	event = TTM::evtOf tw
	shell = shell::mkShell 
	              (TTM::widgetOf tw, 
		       NULL, 
		       { window_name = THE "Tactic Tree", 
			icon_name = THE "Tactic Tree"} )
	in
	  threadkit::make_thread "interactive layout" (fn () => error_handler event); shell::init shell
	end
	  except xgripe::XERROR str =>
	    Xtracing::trace (Xtracing::errorTM, fn () => ["main: XERROR " + str + "\n"])


fun create (goal, server, tactic_menu_extension) =
      let ttree = TTM::mkTTreeState goal
      in
        RunTHREADKIT::do_it (fn () => layout ttree tactic_menu_extension server, THE 10);
        ttree
      end

fun view (ttree, server, tactic_menu_extension) = ( 
       RunTHREADKIT::do_it (fn () => layout ttree tactic_menu_extension server, THE 10);
       ttree)

extract_event = TTM::extract_event
extract_tactic_text = TTM::extract_tactic_text
extract_text = TTM::extract_text

end





## COPYRIGHT (c) 1992 by AT&T Bell Laboratories.  See COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
