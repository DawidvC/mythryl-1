## ppc-comp-instruction-ext.pkg
## All rights reserved.

# Compiled by:
#     src/lib/compiler/lower/make7/ppc.make6



# emit code for extensions to the ppc instruction set.



###             "An extraordinary amount of arrogance is present in any
###              claim of having been the first in inventing something."
###
###                                       -- Benoit Mandelbrot



api Ppccomp_Instr_Ext {

    package instruction_set:  Instruction_Set_Ppc;		# Instruction_Set_Ppc	is from   src/lib/compiler/lower/ppc/instruction/instruction-set-ppc.api

    package ts:  Codetree_Stream				# Codetree_Stream	is from   src/lib/compiler/lower/codetree/codetree-stream.api
    where codetree == instruction_set::codetree;

    package control_flow_graph:  Control_Flow_Graph		# Control_Flow_Graph	is from   src/lib/compiler/lower/flowgraph/control-flow-graph.api
    where instruction_set == instruction_set
	  also pseudo_op == ts::instruction_stream::pseudo_op;

    Reducer
	= 
	ts::Reducer( instruction_set::Instruction, instruction_set::cells::Cellset, instruction_set::Operand, instruction_set::Addressing_Mode, control_flow_graph::Control_Flow_Graph );

    compile_sext
	:
	Reducer 
	->
        { statement:   ppcinstr_ext::Sext (instruction_set::codetree::Statement, instruction_set::codetree::Int_Expression, instruction_set::codetree::Float_Expression, instruction_set::codetree::Bool_Expression), 
	  notes: List( instruction_set::codetree::Note )
        } 
	->
	Void;
};

# We are nowhere invoked.

generic package ppc_compiler_instructionset_extension_g (

    package instruction_set:  Instruction_Set_Ppc;				# Instruction_Set_Ppc	is from   src/lib/compiler/lower/ppc/instruction/instruction-set-ppc.api

    package ts
	:
        Codetree_Stream						# Codetree_Stream	is from   src/lib/compiler/lower/codetree/codetree-stream.api
        where codetree == instruction_set::codetree;

    package control_flow_graph:  Control_Flow_Graph		# Control_Flow_Graph	is from   src/lib/compiler/lower/flowgraph/control-flow-graph.api
      where
           pseudo_op
           ==
           ts::instruction_stream::pseudo_op
      also
           instruction_set == instruction_set;

)

: (weak) Ppccomp_Instr_Ext					# Ppccomp_Instr_Ext	is from   src/lib/compiler/lower/ppc/instruction/ppc-comp-instruction-ext.pkg

{
    package control_flow_graph =  control_flow_graph;
    package instruction_set    =  instruction_set;
    package cells              =  instruction_set::cells;
    package codetree           =  ts::codetree;
    package ts                 = ts;

    package g  = control_flow_graph;
    package t  = codetree;
    package i  = instruction_set;
    package c  = cells;
    package x  = ppcinstr_ext;					# ppcinstr_ext		is from   src/lib/compiler/lower/ppc/instruction/ppc-instruction-ext.pkg

    Statement
        =
        x::Sext(
          t::Statement,
          t::Int_Expression,
          t::Float_Expression,
          t::Bool_Expression
        );

    Reducer
        = 
        ts::Reducer (
          i::Instruction,
          c::Cellset,
          i::Operand,
          i::Addressing_Mode,
          g::Control_Flow_Graph
        );

    fun error msg = lowcode_error_message::error("ppc_compiler_instructionset_extension_g", msg);

    fun compile_sext (reducer:  Reducer) { statement:  Statement, notes:  List( t::Note ) }
         =
         {   my ts::REDUCER {
		     reduce_int_expression, operand, emit, instruction_stream, address_of, ...
		   } = reducer;

	     instruction_stream
                 ->
	         ts::instruction_stream::STREAM { emit => emit_i, ... };

	     fun emit' inst
		 =
		 emit (i::BASE_INSTRUCTION inst, notes);

	       case statement
		   x::STWU { src, ea } => {
		     my (base, disp) = address_of ea;

		       emit' (i::ST {
			   st => i::STWU,
			   rs => reduce_int_expression src,
			   ra => base,
			   d => disp,
			   mem => t::region::memory
			 } );
		     };
	       esac;
	  };
};


## COPYRIGHT (c) 2004 John Reppy (http://www.cs.uchicago.edu/~jhr)
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
