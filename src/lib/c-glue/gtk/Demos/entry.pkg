#  example-start entry entry.c 


local

   use C Gtk gtk_enums gtk_macros

   fun enter_callback entry widget =
   let entry_text = gtk_entry_get_text::f entry
   in  print("Entry contents: "$entry_text$"\n")
   end

   fun entry_toggle_editable entry checkbutton =
       gtk_entry_set_editable::f (entry, 
           GtkToggleButton::get'active checkbutton)

   fun entry_toggle_visibility entry checkbutton = 
       gtk_entry_set_visibility::f (entry, 
           GtkToggleButton::get'active checkbutton)

in 
   fun main (prog, argv) = 
   let gtk_init::f (prog . argv)

       #  Create a new window 
       window = gtk_window_new::f GTK_WINDOW_TOPLEVEL
       gtk_widget_set_usize::f (window, 200, 100)
       gtk_window_set_title::f (window, "GTK Entry")
       gtk_event_connect::f (window, "delete_event",
                                        fn _ => (gtk_main_quit::f(); FALSE))

       vbox   = gtk_vbox_new::f (FALSE, 0)
       gtk_container_add::f (window, vbox)
       gtk_widget_show::f (vbox)

       entry  = gtk_entry_new_with_max_length::f 0w50
       gtk_signal_connect::f (entry, "activate",
                                         enter_callback entry)
       gtk_entry_set_text::f (entry, "hello")
       gtk_entry_append_text::f (entry, " world")
       gtk_entry_select_region::f (entry, 0, 
                         unt32::toLargeInt (GtkEntry::get'text_length entry))
       gtk_box_pack_start::f (vbox, entry, TRUE, TRUE, 0w0)
       gtk_widget_show::f entry

       hbox   = gtk_hbox_new::f (FALSE, 0)
       gtk_container_add::f (vbox, hbox)
       gtk_widget_show::f hbox
                                  
       check  = gtk_check_button_new_with_label::f "Editable"
       gtk_box_pack_start::f (hbox, check, TRUE, TRUE, 0w0)
       gtk_signal_connect::f (check, "toggled",
                         entry_toggle_editable entry)
       gtk_toggle_button_set_active::f (check, TRUE)
       gtk_widget_show::f check
    
       check  = gtk_check_button_new_with_label::f "Visible"
       gtk_box_pack_start::f (hbox, check, TRUE, TRUE, 0w0)
       gtk_signal_connect::f (check, "toggled",
                         entry_toggle_visibility entry)
       gtk_toggle_button_set_active::f (check, TRUE)
       gtk_widget_show::f check
                                   
       button = gtk_button_new_with_label::f ("Close")
       gtk_signal_connect::f (button, "clicked",
                                          fn _ => gtk_main_quit::f())
       gtk_box_pack_start::f (vbox, button, TRUE, TRUE, 0w0)
       gtk_widget_set_flags (button, GTK_CAN_DEFAULT)
       gtk_widget_grab_default::f button
       gtk_widget_show::f button
    
       gtk_widget_show::f window

   in  gtk_main::f();
       0
   end
end
#  example-end 
