## tell-dictionary.sml

# Compiled by:
#     src/lib/compiler/debugging-and-profiling/debugprof.make6

# This provides an abstract interface to the symbol tables for
# the profiler to use. 



###       "There has never been an unexpectedly
###        short debugging period in the history
###        of computers."
###
###                          -- Steven Levy


api Tell_Dictionary {

   Symbol;
   Dictionary = symbol_table::Symbol_Table;
   Naming;
   Some_Type;
   name:  Symbol -> String;
   components:  Dictionary -> List( (Symbol, Naming) );
   str_bind:  Naming -> Null_Or( Dictionary );
   val_bind:  Naming -> Null_Or( Some_Type );
   fun_type:  Some_Type -> Null_Or( (Some_Type, Some_Type) );
};

package tell_dictionary: Tell_Dictionary {		# Tell_Dictionary	is from   src/lib/compiler/debugging-and-profiling/profile/tell-env.pkg

    Symbol  = symbol::Symbol;
    Dictionary    = symbol_table::Symbol_Table;
    Naming = symbol_table_entry::Symbol_Table_Entry;
    Some_Type  = types::Type;

   name = symbol::name;

   fun components _ = [];
   fun str_bind _ = NULL;
   fun val_bind _ = NULL;
   fun fun_type _ = NULL;

 /*
   fun components e = 
    let namings = REF (NIL:  List( Symbol * naming ))
	fun get x = namings := x . *namings
     in Dictionary::apply get (Dictionary::consolidate e);
	*namings
    end

   fun strBind (module::NAMED_PACKAGE (module::STRvar { access, naming, ... } )) =
	       THE (module_stuff::makeDict (naming, access))
     | strBind _ = NULL

   fun valBind (module::VARbind (Variables::ORDINARY_VARIABLE { access=access::INLINE _, ... } )) = NULL
     | valBind (module::VARbind (Variables::ORDINARY_VARIABLE { type=REF type, ... } )) = THE type
     | valBind _ = NULL

   fun funType type =
     let type' = type_stuff::head_reduce_type type
      in if type_types::is_arrow_type type'
	  then THE (type_types::domain type', type_types::range type')
	  else NULL
     end
 */
};




## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
