#
# This module computes a topological sort of a graph
#
# -- Allen Leung

# Compiled by:
#     src/lib/graph/graphs.make6

package graph_topological_sort: (weak)  Graph_Topological_Sort		# Graph_Topological_Sort	is from   src/lib/graph/graph-topological-sort.api
{
    package g= graph;		# graph	is from   src/lib/graph/graph.pkg


    # Topological sort

    fun topological_sort (g::GRAPH graph) roots
	= 
	dfs''(roots,[])
	where 
	    visited = rw_unt8_vector::make_rw_vector (graph.capacity (), 0u0);

	    next    = graph.next;

	    fun dfs (n, list)
		=
		if  (rw_unt8_vector::get (visited, n) != 0u0)
		     list;
		else
		     rw_unt8_vector::set (visited, n, 0u1);
		     dfs'(n, next n, list);
		fi

	    also
	    fun dfs'(x,[],      list) =>   x ! list;
		dfs'(x, n ! ns, list) =>   dfs'(x, ns, dfs (n, list));
	    end 

	    also
	    fun dfs''([], list)     => list;
		dfs''(n ! ns, list) => dfs''(ns, dfs (n, list));
	    end;
	end;
};

