## bsearch-g.pkg

# Compiled by:
#     src/lib/src/lib7.make6

# Binary searching on sorted monomorphic arrays.


generic package binary_search_g (a:  Monomorphic_Rw_Vector )		# Monomorphic_Rw_Vector	is from   src/lib/std/src/monomorphic-rw-vector.api
: (weak)
api {

    package a:  Monomorphic_Rw_Vector; 				# Monomorphic_Rw_Vector	is from   src/lib/std/src/monomorphic-rw-vector.api

    bsearch
        :
        (((X, a::Element)) -> Order)
	->
        ((X, a::Rw_Vector))
        ->
        Null_Or( (Int, a::Element) );
	#
	# binary search on ordered monomorphic arrays. The comparison function
	# compare embeds a projection function from the element type to the key
	# type.


}
{
    package a = a;

    # binary search on ordered monomorphic arrays. The comparison function
    # compare embeds a projection function from the element type to the key
    # type.

    fun bsearch compare (key, arr)
        =
	get (0, a::length arr - 1)
        where
	    fun get (lo, hi)
                = 
                if   (hi >= lo)

		     m = lo + (hi - lo) / 2;
		     x = a::get (arr, m);
		  
		     case (compare (key, x))
                          LESS    =>  get (lo, m - 1);
		          EQUAL   =>  (THE (m, x));
		          GREATER =>  get (m+1, hi);
                     esac;
		  
                else
                     NULL;
                fi;
	  
	end;

}; #  BSearch 



## COPYRIGHT (c) 1994 by AT&T Bell Laboratories.  See COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
