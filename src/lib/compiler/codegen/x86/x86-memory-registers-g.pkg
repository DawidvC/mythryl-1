## x86-memory-registers-g.pkg

# Compiled by:
#     src/lib/compiler/backend-x86.make6



###               "Happiness is nothing more than
###                good health and a bad memory."
###
###                        -- Albert Schweitzer


# We are invoked from:
#
#     src/lib/compiler/codegen/x86/x86-codetree.pkg

generic package x86_memory_registers_g (

    instruction_set: Instruction_Set_X86				# Instruction_Set_X86	is from   src/lib/compiler/lower/x86/instruction/instruction-set-x86.api

)
{   package instruction_set = instruction_set;

    package i= instruction_set;
    package cb= cells_basis;						# cells_basis		is from   src/lib/compiler/lower/instruction/cells-basis.pkg

    fun error msg
        =
        lowcode_error_message::impossible ("x86_memory_registers_g." + msg);

    fun mem_reg { reg, base }
        =
        {   #  see X86::prim::asm stack layout 

	    fun fp_disp f
                =
                int32::from_int((cb::register_num f - 8) * 8 + x86runtime::v_fp_start);

	    fun gp_disp r
                =
                int32::from_int
			     (x86runtime::vreg_start +
			       unt::to_int_x(
				  unt::(<<) (unt::from_int (cb::register_num r - 8), 0u2)));


	    case reg   

		i::FDIRECT f
                    =>
                    i::DISPLACE { base, disp=>i::IMMED (fp_disp f), 
					   mem=>i::region::stack };

		i::MEM_REG r
                    =>
                    i::DISPLACE { base, disp=>i::IMMED (gp_disp r),
					  mem=>i::region::stack };
		_ => error "memReg";
            esac;
	};
};
