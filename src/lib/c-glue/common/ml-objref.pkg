
# Use this module to embed typed ML data structures inside C data structures.

package ml_obj_ref :> Ml_Object_Ref {


     package h = unt_hash_table
     package e = ephemeral_obj

     use mlrep

     #  This exception is raised if it is an illegal object reference 
     exception ML_OBJECT_REF 

     enum mlobj_db T =
	DB of { table:  h::Hash_Table( T ),
		id:     Ref( mlrep::unsigned::word )
	      } 
     type mlobj_store T = mlobj_db e::ephemeral( T )

     #  Create a new store for ml objects 
     fun new () =
	e::new (fn _ =>DB { table = h::makeTable (32, ML_OBJECT_REF), id = REF 0w0 } )

     fun new_id S
	 =
	 {   DB { id, ... } = e::get S;
	     n = *id;
	     id := n + 0w1;
	     n;
	 }

     fun insert (S, n, x)
	 =
	 {   my DB { table, ... }
                 =
                 e::get S;

	     n =   unt::from_int (mlrep::unsigned::toIntX n);

	     h::set table (n, x);
	 }

     fun lookup (S, n)
	 = 
	 {   my DB { table, ... }
                   =
                   e::get S;

	     n =   unt::from_int (mlrep::unsigned::toIntX n);

	     h::lookup table n;
	 }

}
