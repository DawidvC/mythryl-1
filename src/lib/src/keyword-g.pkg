## keyword-g.pkg

# Compiled by:
#     src/lib/src/lib7.make6

# This generic is meant to be used as part of a scanner, where identifiers
# and keywords are scanned using the same lexical rules and are then
# further analyzed.


###            "We want to make a machine
###             that will be proud of us."
###
###                    -- Danny Hillis


generic package keyword_g (kw:  api {
				 Token;
				 Source_Position;
				 ident:  ((quickstring::Quickstring, Source_Position, Source_Position)) -> Token;
				 keywords:   List( (String, (((Source_Position, Source_Position)) -> Token)) );
			      }
                        )
: (weak)
api {
    Token;
    Source_Position;
     keyword:  ((String, Source_Position, Source_Position)) -> Token;
}
{
    package q     = quickstring;		# quickstring			is from   src/lib/src/quickstring.pkg
    package table = quickstring_hash_table;	# quickstring_hash_table	is from   src/lib/src/quickstring-hash-table.pkg

    Token = kw::Token;
    Source_Position = kw::Source_Position;

    # The keyword hash table 
    #
    exception KEYWORD;

    my kw_table:   table::Hash_Table(((Source_Position, Source_Position)) -> Token)
              =	  table::make_table (list::length kw::keywords, KEYWORD);

    # Insert the reserved words into the keyword hash table 
    #
    my _ = {
	  set = table::set kw_table;
	  fun ins (s, item) = set (q::from_string s, item);
	  
	    apply ins kw::keywords;
	  };

    fun keyword (s, p1, p2)
        =
        {
	    name = q::from_string  s;
	  
	    case (table::find kw_table  name)
	      
                 THE tok_g =>  tok_g (p1, p2);
	         NULL            =>  kw::ident (name, p1, p2);
            esac;

	};
};
 


## COPYRIGHT (c) 1997 AT&T Labs Research.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
