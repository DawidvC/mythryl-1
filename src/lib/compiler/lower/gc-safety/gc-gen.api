
# This module is reponsible for generating garbage collection 
# code for all gc-points in the program.  That is, we delay the generation
# of garbage collection code until all optimizations have been performed.
# A callback is invoked at all GC safe-points with the appropriate type 
# information.  The callback is responsible for generating the appropriate
# code to save and restore all roots and call the garbage collector.

api GC_CALLBACK =
api
   package c:   Cells
   package gc:  Garbage_Collector_Type
   package t:   Codetree
   my callgcCallback:   
        { id:           Int,                        #  Basic block id 
          msg:          String,                     #  some auxiliary text 
          gcLabel:      label::label,                #  label of gc block 
          returnLabel:  label::label,                #  label of return block 
          roots:         List (c::cell * gc::gctype),  #  root set 
          stream:        t::stream  (t::statement,  List( t::lowcode ) )
                          #  Code generator 
        } -> Void
end
