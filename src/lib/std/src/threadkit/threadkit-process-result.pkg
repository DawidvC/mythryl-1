## threadkit-process-result.pkg

# Compiled by:
#     src/lib/std/stdlib.make6



###                   "My goal is always to create code
###                    that people will read for the
###                    sheer pleasure of appreciation --
###                    digital poetry for the hacker elite."
###
###                                   -- Joel White



# This is used only in process_manager:
#
#     src/lib/thread-kit/src/unix/process-manager.pkg

package threadkit_process_result :
api {

    Threadkit_Process_Result( X );

    make_threadkit_process_result:  Void -> Threadkit_Process_Result(X);

    put:            (Threadkit_Process_Result(X), X        )  -> Void;
    put_exception:  (Threadkit_Process_Result(X), Exception) -> Void;

    get:        Threadkit_Process_Result(X) -> X;
    get_mailop: Threadkit_Process_Result(X) -> mailop::Mailop(X);
}
{
								# maildrop	is from   src/lib/thread-kit/src/core-thread-kit/maildrop.pkg
    package md1 = oneshot_maildrop;

    Result_Val(X)
      #
      = EXCEPTION  Exception
      | RESULT     X
      ;

    Threadkit_Process_Result(X)
	=
	md1::Oneshot_Maildrop( Result_Val(X) );

    fun make_threadkit_process_result ()
	=
	md1::make_oneshot_maildrop ();


    fun put           (iv, v ) =  md1::set (iv, RESULT    v );
    fun put_exception (iv, ex) =  md1::set (iv, EXCEPTION ex);


    fun wrap (RESULT    v ) =>  v;
        wrap (EXCEPTION ex) =>  raise exception ex;
    end;


    fun get iv
	=
	wrap (md1::get iv);


    fun get_mailop  iv
	=
	mailop::wrap (md1::get' iv, wrap);

};



## COPYRIGHT (c) 1996 AT&T Research.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
