## control-util.pkg

# Compiled by:
#     src/lib/controls/controls-lib.make6


package control_utilities: (weak)  Control_Utilities		# Control_Utilities	is from   src/lib/controls/control-util.api
{

    # For each control type, itemize how to convert an
    # input string to the appropriate control value type,
    # and also how to convert the control's value type
    # to a string for display purposes: 

    package convert {

        int  = { type_name   => "Int",
		 from_string =>  int::from_string,
		 to_string   =>  int::to_string
               };

        bool = { type_name   => "Bool",
		 from_string =>  bool::from_string,
		 to_string   =>  bool::to_string
               };

        real = { type_name   => "Float",
		 from_string =>  float::from_string,
		 to_string   =>  float::to_string
               };

	string_list
	       =
	       { type_name   => "List(String)",
		 from_string => THE o string::fields (fn c =  c == ','),
		 to_string   => fn []     =>  "";
				   [x]    =>  x;
				    x ! r =>  cat			# Build a comma-separated string.
						  ( x
						    !
						    list::fold_right
							(fn (y, l) =  ", " ! y ! l)
							[]
							r
						  );
				end 

		 };

	my string:  control::Value_Converter( String )
            =
	    { type_name   =>  "String",
	      from_string =>  THE,
	      to_string   =>  fn x = x		# Converting strings to strings is easy! :)
            };
    };

    package dictionary_name {

	fun to_upper  prefix  string
            =
	    prefix				# Prepend prefix.
            +					# String concatenation.
            string::map
                fn '-' =>  '_';			# Dashes go to underlines.
                    c  =>  char::to_upper c;	# Alphabetics go to uppercase.
                end
                string;
    };
};



## COPYRIGHT (c) 2002 Bell Labs, Lucent Technologies
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
