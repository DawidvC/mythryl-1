#
# SML namings to MySQL (version 3.23)
#
# Because of current limits of SML/NJ and NLFFI, the following 
# features are not supported:
#  1. multithreading.
#  2. seeks.
#  3. deprecated calls.
#
# The following features are broken:
#  1. fetchFields
#
# Also, the size of the rows and columns are limited to approximately 2^30.
# Allen Leung (leunga@cs.nyu.edu, leunga@dorsai.org)

api My_Sql =
api
   include Lib7_Ffilib_Basis

   type mysql       #  A handle to the sql server.
   type Result      #  A result to an SQL query. 
   type row         #  A row of data. 

   enum field = #  A field type descriptor 
      FIELD of { name          :String,
                table         :Null_Or( String ), #  NULL means computed 
                default       :String,
                type           :fieldtype,
                length        :Int,
                max_length    :Int,
                null          :Bool,
                primary_key   :Bool,
                unique_key    :Bool,
                multiple_key  :Bool,
                unsigned      :Bool,
                zerofill      :Bool,
                autoincrement :Bool,
                decimals      :Int
               }
   and fieldtype = TINY | SHORT | LONG | INT25 | LONGLONG | DECIMAL
                 | FLOAT | DOUBLE | TIMESTAMP | DATE | TIME | DATETIME
                 | STRING | BLOB | SET | ENUM | NULLf
       
 
   exception SQLError 
      /* All functions in this library will raise the exception 
       *   io::Io { cause=SQLError, function=function name, name=name }
       * with an error mesage when something goes wrong.
       */

   my version:  String

   enum connectOptions =
     HOST        of String   #  host name; default to localhost 
   | USER        of String   #  user name (optional) 
   | PASSWD      of String   #  passwd (optional) 
   | DB          of String   #  Database name 
   | PORT        of Int      #  port; default to 3306 
   | UNIX_SOCKET of String   #  socket for talking with server (optional) 

   my connect:  List( connectOptions ) -> mysql
   my close:    mysql -> Void 
   my ping:     mysql -> Void
           #  Ping the connection and reconnect if necessary 

   my shutdown:  mysql -> Void     #  shutdown the server 

   my query:           mysql * String -> result #  send a query 
   my closeResult:     result -> Void #  free result storage 

   my affectedRows:    mysql -> Int  #  number of rows affected for updates 
   my numRows:         result -> Int #  number of rows in result 
   my numCols:         result -> Int #  number of columns in result 

   my fetchRow:        result ->  Null_Or( row ) #  fetch next row 
   my fetchColWidths:  result ->  List( Int ) #  fetch the column widths 
   my fetchFields:     result -> List( field )

   my getFields:       row -> List( String )
       #  get the data; NULL fields will be returned as "NULL" 

   my getFields'     : row -> List( Null_Or( String ) )
       #  get the data; NULL fields will be NULL 

       #  Iterators 
   my appRows:      (List( String ) -> X) -> result -> Void
   my appRows'    : (List( Null_Or( String ) ) -> X) -> result -> Void
   my mapRows:      (List( String ) -> X) -> result -> List( X )
   my mapRows'    : (List( Null_Or( String ) ) -> X) -> result -> List( X )
   my foldrRows:    (List( String ) * X -> X) -> X -> result -> X
   my foldrRows'  : (List( Null_Or( String ) ) * X -> X) -> X -> result -> X
   my foldlRows:    (List( String ) * X -> X) -> X -> result -> X
   my foldlRows'  : (List( Null_Or( String ) ) * X -> X) -> X -> result -> X
   my allRows:      result -> List( List( String ) )
   my allRows'    : result -> List( List( Null_Or( String ) ) )

   #  Various types of information 
   package info :
   api
       my stat:       mysql -> String #  Statistics of last query 
       my info:       mysql -> String 
       my charSet:    mysql -> String #  Current characeter set 
       my client:     Void -> String  #  Client version 
       my host:       mysql -> String #  host info 
       my proto:      mysql -> Int    #  protocol info 
       my server:     mysql -> String #  server info 
   end

   #  Get meta information 
   package list :
   api
       my dbs:        mysql * String -> result 
       my tables:     mysql * String -> result 
       my fields:     mysql * String * String -> result 
       my processes:  mysql -> result 
   end

end
