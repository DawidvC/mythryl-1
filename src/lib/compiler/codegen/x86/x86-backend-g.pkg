## x86-backend-g.pkg

# Compiled by:
#     src/lib/compiler/backend-x86.make6


# Machine-code generation for x86 architecture.
#
# The Linux ( / *bsd /...) and Win32 backends reference us in
#
#     src/lib/compiler/toplevel/backend/x86-unix-compiler-client-interface.pkg
#     src/lib/compiler/toplevel/backend/x86-win32-compiler-client-interface.pkg
#
# respectively.
#
# Our generic parameters serve to encapsulate the
# differences between the Linux / *bsd / ... an the Win32
# fn-call conventions and related platform-specific issues.
#
# "backend_g" is defined in
#
#     src/lib/compiler/upper/main/backend-g.pkg
#
# and does the "high-level" (machine-independent)
# code optimizations and transformations.
#
# "x86_codegen_g" is defined in
#
#     src/lib/compiler/codegen/x86/x86-codegen-g.pkg
#
# and does the "low-level" (machine-dependent)
# code optimizations and transformations.

# We are invoked from:
#
#     src/lib/compiler/toplevel/backend/x86-unix-compiler-client-interface.pkg

generic package  x86_backend_g (


    package ccall_params:  api {  frame_align:                Int;
			         return_small_structs_in_regs:  Bool;
			    };

    abi_variant:           Null_Or( String );
)
=
backend_g(							# backend_g			is from   src/lib/compiler/upper/main/backend-g.pkg

    package codegen
        =
        x86_codegen_g (					# x86_codegen_g		is from   src/lib/compiler/codegen/x86/x86-codegen-g.pkg
            package ccall_params = ccall_params;
            abi_variant = abi_variant;
        );

    fun collect epthunk
        =
        {    codegen::finish ();
	     code_string::get_code_string (epthunk ());
        };
);


## Copyright (c) 2006 by The Fellowship of SML/NJ
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
