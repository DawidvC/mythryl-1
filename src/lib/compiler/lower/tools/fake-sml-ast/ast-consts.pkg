
# Compiled by:
#     src/lib/compiler/lower/tools/sml-ast.make6


# Translation from one sort to another



###                   "We are probably nearing the limit
###                    of all we can know about astronomy."
###
###                                -- Simon Newcomb 



generic package mdl_raw_syntax_constants_g (raw_syntax:  Mdl_Ast)	# Mdl_Ast	is from   src/lib/compiler/lower/tools/fake-sml-ast/ast.api

: (weak) Mdl_Ast_Constants					# Mdl_Ast_Constants	is from   src/lib/compiler/lower/tools/fake-sml-ast/ast-consts.api

{
   package raw_syntax = raw_syntax;
   package a          = raw_syntax;

   fun id x
       =
       a::IDEXP (a::IDENT([], x));

   abstype Const_Table
       =
       TABLE  (Ref( List ((a::Id, a::Expression)) ), Ref( Int ))

   with fun new_const_table ()  = TABLE (REF [], REF  0);

        fun const (TABLE (entries, counter)) e
	    = 
	    lookup *entries
            where
	        fun lookup []
			=> 
			{   name = "TMP" +  int::to_string *counter;
			    counter := *counter + 1;
			    entries := (name, e) ! *entries;
			    id name;
			};

		    lookup((x, e') ! rest)
                        =>
                        if (e == e')   id x;
                        else           lookup rest;
                        fi;
                end;
            end;

        fun gen_consts (TABLE (entries, _))
            = 
            map
                (fn (x, e) =  a::VALDECL [a::NAMED_VARIABLE (a::IDPAT x, e)]) 
                (reverse *entries);

        fun with_consts f
	    =
	    {   table    = new_const_table();
		decl   = f (const table);
		consts = gen_consts table;

	        case consts
                  
		     [] => decl;
		     _  => a::LOCALDECL (consts,[decl]);
                esac;
	    };
   end; 

};
