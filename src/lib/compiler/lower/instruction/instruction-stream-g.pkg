## instruction-stream-g.pkg
#
# This is a generic instruction stream definition.
# Components such as assemblers, machine code emitters, instruction
# selection modules communicate with each via this interface.
#
# -- Allen Leung

# Compiled by:
#     src/lib/compiler/lower/make7/lowcode.make6

# We are invoked by:
#
#     src/lib/compiler/codegen/ppc/ppc-codetree.pkg
#     src/lib/compiler/codegen/sun/sparc-codetree.pkg
#     src/lib/compiler/codegen/x86/x86-codetree.pkg


generic package instruction_stream_g (

    pseudo_op:  Pseudo_Ops						# Pseudo_Ops		is from   src/lib/compiler/lower/flowgraph/pseudo-op.api
)
: (weak)  Instruction_Stream						# Instruction_Stream	is from   src/lib/compiler/lower/instruction/instruction-stream.api

{
    package pseudo_op =  pseudo_op;

    Stream (X,Y,Z,W)
        =
	STREAM {

	  begin_cluster:        Int -> Void,				# Start new compilation unit. 
	  end_cluster:          Y -> W,					# End compilation unit. 

	  emit:                 X -> Void,				# Emit instruction. 
	  emit_pseudo_op:       pseudo_op::Pseudo_Op -> Void,		# Emit a pseudo op. 

	  define_local_label:   label::Label -> Void,			# Define a local label. 
	  define_global_label:  label::Label -> Void,			# Define an external label. 

	  emit_comment:         String -> Void,				# Emit comment. 

	  add_note:             note::Note -> Void,			# Add annotation. 
	  get_notes:            Void -> Ref( note::Notes ),		# Get annotations.

	  end_procedure:        Z -> Void              			# Mark the end of a procedure. 
	};

};
