## bounce-dm.pkg

# Compiled by:
#     src/lib/x-kit/tut/bounce/bounce.make6

stipulate
    include threadkit;						# threadkit	is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package xd =  xdraw;					# xdraw		is from   src/lib/x-kit/xclient/xdraw.pkg
    package xc =  xcore;					# xdraw		is from   src/lib/x-kit/xclient/xcore.pkg
    package xg =  xgeometry;					# xgeometry	is from   src/lib/x-kit/xclient/xgeometry.pkg
    package xx =  xwindow;					# xwindow	is from   src/lib/x-kit/xclient/xwindow.pkg
herein

    package bounce_dm {


	Dm_Msg
	  = DRAW_BALL   (Int, xc::Ro_Pixmap, xg::Point)
	  | ERASE_BALL  (Int, xc::Ro_Pixmap, xg::Point)
	  | REDRAW  Int
	  ;

	# The bounce DM is actually responsible for drawing the heads 
	#
	fun bounce_dm window
	    =
	    {   draw_slot = make_mailslot ();

    #	    xsession = xsession_of_window  window;		# 2010-01-10 CrT: Commented out -- unused.

		pen = xd::make_pen
			  [
			    xd::FUNCTION xd::OP_XOR,
			    xd::FOREGROUND (xc::rgb8_from_int 1),
			    xd::BACKGROUND (xc::rgb8_from_int 0)
			  ];

		drawable = xd::drawable_of_window  window;

		fun redraw ()
		    =
		    xd::clear_drawable  drawable;

		fun draw (icon, pt)
		    =
		    {   (xc::shape_of_ro_pixmap  icon)
			    ->
			    { upperleft =>  xg::POINT { col, row },
			      size      =>  xg::SIZE { wide, high },
			      ...
			    };

			xd::texture_blt drawable pen
			  #
			  { from   => icon,
			    to_pos => pt
			  };
		    };

		fun loop1 seqn
		    =
		    case (nonblocking_take  draw_slot)
			#
			NULL =>
			    loop2 seqn;

			THE (DRAW_BALL (n, pm, pt))
			    =>
			    {   if (n == seqn)    draw (pm, pt);   fi;
				loop1 seqn;
			    };

			THE (ERASE_BALL (n, pm, pt))
			    =>
			    {   if (n == seqn)    draw (pm, pt);   fi;
				loop1 seqn;
			    };

			THE (REDRAW n)
			    =>
			    {   redraw ();
				loop1 n;
			    };
		    esac

		also
		fun loop2 seqn
		    =
		    case (take  draw_slot)
			#
			DRAW_BALL (n, pm, pt)
			    =>
			    if (n == seqn)
				#
				draw (pm, pt);
				loop1 seqn;
			    else
				loop2 seqn;
			    fi;

			ERASE_BALL (n, pm, pt)
			    =>
			    if (n == seqn)
				#
				draw (pm, pt);
				loop1 seqn;
			    else
				loop2 seqn;
			    fi;

			REDRAW n
			    =>
			    {   redraw ();
				loop2 n;
			    };
		    esac;

		xtracing::xspawn("bounce_dm", fn () = loop2 0);

		draw_slot;
	    };

    };

end;

## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
