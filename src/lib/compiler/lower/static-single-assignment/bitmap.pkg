   package bm =
   pkg
      package w8a = rw_unt8_vector
      package W8  = Word8
      package w   = Unt
      fun create N = w8a::rw_vector (w::toIntX (W.>>(w::from_int (N + 7), 0w3)), 0w0) 
      fun markAndTest (bitmap, i) = 
      let byte = w::toIntX (W.>>(w::from_int i, 0w3))
          mask = W8.<<(0w1, w::bitwise_and (w::from_int i, 0w7))
          n    = w8a::sub (bitmap, byte)
      in  W8::bitwise_and (n, mask) != 0w0 or
          (w8a::update (bitmap, byte, W8::bitwise_or (n, mask)); FALSE)
      end
      fun contains (bitmap, i) = 
      let byte = w::toIntX (W.>>(w::from_int i, 0w3))
          mask = W8.<<(0w1, w::bitwise_and (w::from_int i, 0w7))
      in  W8::bitwise_and (w8a::sub (bitmap, byte), mask) != 0w0 end
   end
