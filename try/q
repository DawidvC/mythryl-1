#!/usr/bin/mythryl

# A simple example of spawning a subprocess
# and communicating with it via pipes.

stipulate

    include when;

herein

    lines_to_do   = 1;

    lines_written = REF 0;
    lines_read    = REF 0;

    fun run_subprocess ()
	= 
	{
	    my { from_stream, to_stream, ... }
		=
		spawn::spawn ("/bin/sh", []);				# spawn	is from   src/lib/std/src/unix/spawn.pkg

            read_request
                =
                [   stream_is_read_ready   from_stream  .{
printf "run_subprocess / read_ready /TOP\n";
		    }
                ];

	    write_request
                =
		[   stream_is_write_ready  to_stream  .{ 

print "run_subprocess / write_ready /TOP\n";
			file::write (to_stream, "echo 'xyzzy'\n");			# file	is from   src/lib/std/src/unix/file.pkg
			file::flush to_stream;
		    }
		];

	    io_request
		=
	        [ TIMEOUT_SECS 1.0 ]
                @ read_request
                @ write_request
                ;

	    when io_request;


    #	printf "Read from subprocess: '%s'\n" (string::chomp (the (file::read_line  from_stream) ) );
	    printf "Read from subprocess: '%s'\n" (file::read  from_stream);
	    printf "Read from subprocess: '%s'\n" (file::read  from_stream);

	    exit 0;
	};

    run_subprocess ();
end;
