## label.api

# Compiled by:
#     src/lib/compiler/lower/make7/lowcode.make6




# An abstract interface to lowcode labels.
#
# Labels come in three flavors:
#
#   o Global labels have fixed names and are imported/exported
#     from the current compilation unit;
#
#   o Local labels have names generated from some given prefix;
#
#   o Anonymous labels have internally generated names that
#     are not in the compilation unit's symbol table.



###           "As we look to the horizon of a decade hence,
###            we see no silver bullet. There is no single
###            development, in either technology or in
###            management technique, that by itself promises
###            even one order-of-magnitude improvement in
###            productivity, in reliability, in simplicity."
###
###                            -- Frederick P Brooks, 1986 


api Label {

    Label;

    make_global_label:  String -> Label;		    # Make a global label. 

    # Make a label generator.
    # Note that if the prefix string is "",
    # then the standard prefix "L" will be used:
    #
    make_label_generator:  String -> Void -> Label;

    # Make an anonymous label:
    #
    make_anonymous_label:  Void -> Label;

    # Label equality, comparisons, and hashing:
    #
    same:      (Label, Label) -> Bool;
    compare:   (Label, Label) -> Order;
    hash:       Label -> Unt;

    # Label addresses:
    exception GLOBAL_LABEL;
    set_addr:  ((Label, Int)) -> Void;
    addr_of:  Label -> Int;

    # Return a string representation of the label.
    #
    # This function is meant for debugging --
    # use the fmt function for assembly output.
    #
    to_string:  Label -> String;


    # Format a label for assembly output.
    #
    # 'g_prefix': the target ABI's prefix
    #            for global symbols
    #            (e.g., "_" or "")
    #
    # 'a_prefix': the target assembler's prefix
    #             for anonymous labels.
    #
    # Local labels are emitted using
    # their specified prefix:
    #
    format_for_asm:  { g_prefix:  String, a_prefix:  String } -> Label -> String;

    # Reset the internal counter used
    # to generate unique IDs for labels.
    # This function should never be called
    # when there are label values still in use.
    #
    reset:  Void -> Void;

};



## COPYRIGHT (c) 2001 Bell Labs, Lucent Technologies
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
