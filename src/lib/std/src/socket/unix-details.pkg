## unix-details.pkg
## Author: Matthias Blume (blume@tti-c.org)

# Compiled by:
#     src/lib/std/src/stdlib-core.make6


#   Check for would-block error condition on Unix sockets.

package opsys_details
: (weak)
api {
     make_io_descriptor:  Int -> pre_os::io::Io_Descriptor;
     wrap_nb_o:  (X -> Y  ) -> (X -> Null_Or( Y ) );
     wrap_nb_b:  (X -> Void) -> (X -> Bool);
}
{
    make_io_descriptor = pre_os::io::int_to_iod;

    # The following is essentially lifted from the threadkit implementation's
    # handling of non-blocking socket I/O.  I am not sure whether
    # conflating EINPROGRESS, EAGAIN, and EWOULDBLOCK is exactly
    # the right thing, though...		XXX BUGGO FIXME
    #
    block_errors
        =
	case (posix::error::syserror "wouldblock")
          
	     THE e => [e, posix::error::again, posix::error::inprogress];
	     NULL  => [   posix::error::again, posix::error::inprogress];
        esac;

    fun block_err (winix_guts::SYSTEM_ERROR(_, THE err))
	    =>
	    list::exists  (fn err' =  err == err')  block_errors;

        block_err _
	    =>
	    FALSE;
    end;

    fun wrap_nb_o f x
        =
        THE (f x)
	except ex
            =
            if   (block_err ex   )   NULL;
                                else   raise exception ex;  fi;

    fun wrap_nb_b f x
        =
        {   f x;
            TRUE;
        }
	except ex
            =
            if (block_err ex   ) FALSE;
                              else raise exception ex;   fi;
};


## Copyright (c) 2003 by The Fellowship of SML/NJ
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
