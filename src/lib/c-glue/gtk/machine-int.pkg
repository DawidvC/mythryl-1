local
   package i = mlrep::SInt
   package w = mlrep::UInt
in
package machine_int:  Machine_Int {

   use I

   local
      to   = w::from_large_int
      from = w::toLargeIntX
   in

   fun ++(x, y)    = from (W.+(to x, to y))
   fun --(x, y)    = from (W.-(to x, to y))
   fun **(x, y)    = from (W.*(to x, to y))
   fun udiv (x, y)  = from (w::div (to x, to y))
   fun umod (x, y)  = from (w::mod (to x, to y))
   fun bitwise_and (x, y)  = from (w::bitwise_and (to x, to y))
   fun bitwise_or (x, y)   = from (w::bitwise_or (to x, to y))
   fun bitwise_xor (x, y)  = from (w::bitwise_xor (to x, to y))
   fun bitwise_not x     = from (w::bitwise_not (to x))

   fun umax (x, y)  = from (w::max (to x, to y))
   fun umin (x, y)  = from (w::min (to x, to y))

   fun <<(x, y)    = from (W.<<(to x, y))
   fun >>(x, y)    = from (W.>>(to x, y))
   fun >>>(x, y)   = from (W.>>>(to x, y))

   fun ulg (x, y)   = W.<(to x, to y)
   fun ule (x, y)   = W.<=(to x, to y)
   fun ugt (x, y)   = W.>(to x, to y)
   fun uge (x, y)   = W.>=(to x, to y)
   fun ucompare (x, y) = w::compare (to x, to y)

   end

}

end
