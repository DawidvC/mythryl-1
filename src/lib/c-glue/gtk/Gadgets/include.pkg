/*
 * This file specifies extra stuff to be included to each class
 * during the make process
 */

package Image:  
api
   my set:  GdkImage::t * GdkWindow::t ->  message( GtkImage( X ) )
end =
pkg
   set = gtk_image_set::m
end

package Window :
api
   #  Create a top level window 
   my toplevel:  maker'(  GtkWindow(  base ) ) 
end =
pkg
   toplevel = new gtk_enums::GTK_WINDOW_TOPLEVEL
end

package Menu :
api
   my append:  GtkWidget( X ) ->  message( GtkMenu( Y ) )
   my popdown:  message(  GtkMenu(  Y ) )
   my submenu:  List( message( GtkMenu( base ) ) ) ->  message( GtkMenuItem( Y ) )
   my add_item:  
        String ->  List( message( GtkMenuItem( base ) ) ) ->  message( GtkMenu( X ) )
end =
pkg
   append = gtk_menu_append::m
   popdown = gtk_menu_popdown::m
   fun submenu messages = 
       gtk_menu_item_set_submenu::m (new messages)
   fun add_item text messages = append (MenuItem::label text messages)
end

package MenuBar :
api
   my append:  GtkWidget( X ) -> message( GtkMenuBar( Y ) )
   my add_item:  
        String ->  List( message( GtkMenuItem( base ) ) ) ->  message( GtkMenuBar( X ) )
end =
pkg
   append = gtk_menu_bar_append::m
   fun add_item text messages = append (MenuItem::label text messages)
end


package label :
api
   my get:  GtkLabel( X ) -> String
end =
pkg
   get = gtk_label_get::f 
end

package MenuItem :
api
   my set_submenu:    GtkWidget( X )               ->  message( GtkMenuItem( Y ) )
   my set_placement:  gtk_enums::GtkSubmenuPlacement ->  message( GtkMenuItem( X ) )
   my right_justify:  message(  GtkMenuItem(  X ) )
end =
pkg
   set_submenu = gtk_menu_item_set_submenu::m
   set_placement = gtk_menu_item_set_placement::m
   right_justify = gtk_menu_item_right_justify::m
end
