## unsafe-chunk.api

# Compiled by:
#     src/lib/std/src/Base-imp.make6



api Unsafe_Chunk {

    Chunk;

    # Information about the memory representation of a chunk.
    # NOTE: some of these are not supported yet, but will be once the new
    # rw_vector representation is available.

    # XXX BUGGO FIXME This uses the SML/NJ convention
    #  of "vector" => read-only
    #     "array"  => read-write.
    # Should change to Mythryl convention
    # of explicit "rw_"/"RW_" prefix for read-write chunks:
    # POLY_VECTOR (read-only) vs RW_POLY_VECTOR &tc.

    Representation
	= UNBOXED
	| WORD32
	| REAL
	| PAIR
	| RECORD
	| REF
	| POLY_VECTOR
	| POLY_ARRAY	#  includes REF 
	| BYTE_VECTOR	#  includes unt8_vector::Vector and char_vector::Vector 
	| BYTE_ARRAY	#  includes rw_unt8_vector::rw_vector and rw_char_vector::rw_vector 
#       | float_vector	use PolyVector for now 
	| FLOAT_ARRAY
	| SUSP
	| WEAK_PTR;

    to_chunk:  X -> Chunk;

    make_tuple:  List( Chunk ) -> Chunk;

    boxed:    Chunk -> Bool;
    unboxed:  Chunk -> Bool;
    rep:      Chunk -> Representation;

    length:   Chunk -> Int;
	# Returns length part of descriptor (untagged pairs return 2).
	# Raises Representation on unboxed values.


    exception REPRESENTATION;

    to_tuple:       Chunk -> List( Chunk );
    to_string:      Chunk -> String;
    to_ref:         Chunk -> Ref( Chunk );
    to_array:       Chunk -> Rw_Vector( Chunk );
    to_real_array:  Chunk -> rw_float64_vector::Rw_Vector;
    to_byte_array:  Chunk -> rw_unt8_vector::Rw_Vector;
    to_vector:      Chunk -> Vector( Chunk );
    to_byte_vector: Chunk -> unt8_vector::Vector;
    to_exn:         Chunk -> Exception;
    to_float:        Chunk -> Float;
    to_int:         Chunk -> Int;
    to_int32:       Chunk -> int32::Int;
    to_word:        Chunk -> unt::Unt;
    to_word8:       Chunk -> unt8::Unt;
    to_word32:      Chunk -> unt32::Unt;

    # Fetch nth element of tuple 
    nth:	  ((Chunk, Int)) -> Chunk;

};




## COPYRIGHT (c) 1997 Bell Labs, Lucent Technologies.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
