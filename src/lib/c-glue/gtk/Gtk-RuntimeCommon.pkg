


###                          SURFING
###
###               "In one place we came upon a large company of bare natives,
###                of both sexes and all ages, amusing themselves with the national
###                pastime of surf-bathing. Each heathen would paddle three or four
###                hundred yards out to sea (taking a short board with him), then face
###                the shore and wait for a particularly prodigious billow to come along;
###                at the right moment he would fling his board upon its foamy crest and
###                himself upon the board, and here he would come whizzing by like a bombshell!
###
###                It did not seem that a lightning express-train could shoot along at a more
###                hair-lifting speed. I tried surf-bathing once, subsequently, but made a
###                failure of it. I got the board placed right, and at the right moment, too;
###                but missed the connection myself. The board struck the shore in three-quarters
###                of a second, without any cargo, and I struck the bottom about the same time,
###                with a couple of barrels of water in me.
###
###                None but natives ever master the art of surf-bathing thoroughly."
###
###                                                      -- Mark Twain,
###                                                         Roughing It 



package gtk_runtime_common:  Gtk_Runtime_Common {

    use C Gtk

    package h = int_hash_table

    enum GtkCallback X =
      SIGNAL_CALLBACK of GtkObject( X ) -> Void
    | EVENT_CALLBACK  of GtkObject( X ) * GdkEvent::t -> Bool

    NoCallback = FAIL "No callback"
    callbacks = h::makeTable (32, NoCallback) : h::Hash_Table (String * GtkCallback( base ) )

    idCounter = REF 0
    fun initAll() = (idCounter := 0; h::clear callbacks)


    # This initialization function takes care of initializing
    # the stupid argc, argv stuff for you.

    fun init args
	=
	{   my (argc, argv)
		=
		c_argv::c_argv args;

	    initAll();
	    gtk_init::f(& argc, & argv);
	    c_argv::ml_argv (argc, argv);
	}

    fun addCallback (object, name, callback, cfun)
	=
	{   id =   *idCounter;
	    cid =   Cvt::c_ulong (mlrep::unsigned::from_int id);
	    idCounter := id + 1;
	    h::set callbacks (id, (name, unsafe::cast callback));
	    gtk_signal_connect::f (object, name, cfun, u::i2p cid);
	    id;
	}

    fun isEvent s
	=
	{   n =   size s;

	    n >= 5
	    and
	    string::substring (s, n - 5, 5) = "event";
	}

    fun addSignalCallback (object, name, callback, cfun)
	= 
	if   isEvent name
	then 
	     raise exception FAIL("Use gtk_event_connect::f for event '"$name$"'")
	else 
	     addCallback (object, name, SIGNAL_CALLBACK callback, cfun);

    fun addEventCallback (object, name, callback, cfun)
	= 
	if   isEvent name
	then 
	     addCallback (object, name, EVENT_CALLBACK callback, cfun)
	else 
	     raise exception FAIL("Use gtk_signal_connect::f for signal '"$name$"'");

    lookupCallback = h::find callbacks;
};


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################
