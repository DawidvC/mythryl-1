## typechecking-control.pkg
## (C) 2001 Lucent Technologies, Bell Labs

# Compiled by:
#     src/lib/compiler/front/typechecker/typecheck.make6



# Flags controlling the elaborator.



package typechecking_control {

    stipulate

	priority = [10, 10, 7];
	clear = 2;
	obscure = 6;
	prefix = "typechecker";

	registry = control_index::make { help => "typechecker flags" };
										my _ =
        basic_control::note_subindex (prefix, registry, priority);

	convert_boolean = control_utilities::convert::bool;

	nextpri = REF 0;

	fun make ob (n, h, d)
            =
            {   r = REF d;
		p = *nextpri;

		control = control::control { name => n,
					      pri => [p],
					      obscurity => ob,
					      help => h,
					      control => r };

		nextpri := p + 1;

		control_index::note_control
		    registry
		    { control         =>  control::string_control convert_boolean control,
		      dictionary_name =>  THE (control_utilities::dictionary_name::to_upper "ELAB_" n)
                    };
		r;
	    };

	c_new =  make clear;
	o_new =  make obscure;

    herein

	typecheck_type_debugging                      =  o_new ("typecheck_type_debugging",                      "?", FALSE);
	typecheck_api_debugging                       =  o_new ("typecheck_api_debugging",                       "?", FALSE);
	generics_expansion_stuff_debugging            =  o_new ("generics_expansion_stuff_debugging",            "?", FALSE);

	api_match_debugging                           =  o_new ("api_match_debugging",                           "?", FALSE);
	typecheck_package_language_debugging          =  o_new ("typecheck_package_language_debugging",          "?", FALSE);
	typecheck_stuff_debugging                     =  o_new ("typecheck_stuff_debugging",                     "?", FALSE);
	unify_and_generalize_types_g_debugging	      =  o_new ("unify_and_generalize_types_g_debugging",        "?", FALSE);
	generalize_mutually_recursive_functions	      =  o_new ("generalize_mutually_recursive_functions",       "?", FALSE);
	expand_oop_syntax_debugging                   =  o_new ("expand_oop_syntax_debugging",                   "?", FALSE);

	unify_types_debugging                         =  o_new ("unify_types_debugging",                         "?", FALSE);
	internals                                     =  o_new ("internals",                                     "?", FALSE);

	mark_deep_syntax_tree                         =  o_new ("mark_deep_syntax_tree",                         "?", TRUE);
	boxedconstconreps                             =  o_new ("boxedconstreps",                                "?", FALSE);


	mult_def_warn                  = c_new ("mult_def_warn",   "?", FALSE);
	share_def_error                = c_new ("share_def_error", "?", TRUE);

	value_restriction_local_warn   = c_new ("value_restriction_local_warn", "?", FALSE);
	value_restriction_top_warn     = c_new ("value_restriction_top_warn",   "?", FALSE);		# Setting this TRUE results in every "exit 0" producing an ugly "stdin:1.1-1.7 Warning: type vars not generalized because of value restriction are macro expanded to dummy types (X1, X2, ...)"

	macro_expand_sigs = o_new ("macro_expand_sigs", "?", TRUE);

    end;
};
