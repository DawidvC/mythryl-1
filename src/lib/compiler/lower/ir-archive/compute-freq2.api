
# This module computes frequencies when given branch probabilities
# It has been generalized from the old static branch predication 
# so that it can be applied to other graph based reprensentations. 
#
# -- Allen Leung



###            "Those people who think they know everything
###             are a great annoyance to those of us who do."
###
###                                 -- Isaac Asimov


api COMPUTE_FREQUENCIES2 =
api

   package derived:  Derived_Graph
   package w:        FREQ

   my compute_frequencies:  
       { cfg:             graph::graph (N,E,G),
         derived:          Derived::derived_graph (N,E),

         # multiplier for each loop nesting
         loopMultiplier:  Int,
         nodeFreq:        N -> Ref( w::freq ), #  frequency of a node 
         edgeFreq:        E -> Ref( w::freq ), #  frequency of an edge 
         branchProb:      N -> Int,        #  Branch probability of a node 

         #  is the edge a taken branch edge? 
         isTakenBranch:   graph::edge( E ) -> Bool 
       } -> Void

end
