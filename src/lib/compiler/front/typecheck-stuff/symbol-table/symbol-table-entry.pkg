## symbol-table-entry.pkg
## (C) 2001 Lucent Technologies, Bell Labs

# Compiled by:
#     src/lib/compiler/front/typecheck-stuff/typecheckdata.make6



# The eight kinds of values which the symbol table
# can bind for a symbol, one for each namespace.
#
# For more information, see the OVERVIEW section in:
#
#  src/lib/compiler/front/typecheck-stuff/symbol-table/symbol-table.pkg


package symbol_table_entry

: (weak)  Symbol_Table_Entry					# Symbol_Table_Entry		is from   src/lib/compiler/front/typecheck-stuff/symbol-table/symbol-table-entry.api

{
    stipulate

        package s=  symbol;					# symbol			is from   src/lib/compiler/front/basics/mlcomp/symbol.pkg
	package t=  types;					# types				is from   src/lib/compiler/front/typecheck-stuff/types/types.pkg
	package v=  variables_and_constructors;			# variables_and_constructors	is from   src/lib/compiler/front/typecheck-stuff/deep-syntax/variables-and-constructors.pkg
	package m=  module;					# module			is from   src/lib/compiler/front/typecheck-stuff/modules/module.pkg

    herein

	fun err s
            =
            error_message::impossible ("Namings: " + s);

	Symbol_Table_Entry
            = NAMED_VARIABLE     v::Variable
	    | NAMED_CONSTRUCTOR  v::Constructor

	    | NAMED_TYPE         t::Type_Constructor

	    | NAMED_API          m::Api
	    | NAMED_PACKAGE      m::Package
	    | NAMED_GENERIC_API  m::Generic_Api
	    | NAMED_GENERIC      m::Generic

	    | NAMED_FIXITY       fixity::Fixity;



	#  binder_gt is used for symbol table sorting in symbol-table.pkg

	fun binder_gt ((s1, rb1), (s2, rb2))
	    =
	    {   # I hope the following gets optimized
		# into an identity function on tags:

		fun bnum (NAMED_VARIABLE     _) => 0;
		    bnum (NAMED_CONSTRUCTOR  _) => 1;
		    bnum (NAMED_TYPE         _) => 2;
		    bnum (NAMED_API          _) => 3;
		    bnum (NAMED_PACKAGE      _) => 4;
		    bnum (NAMED_GENERIC_API  _) => 5;
		    bnum (NAMED_GENERIC      _) => 6;
		    bnum (NAMED_FIXITY       _) => 7;
                end;
	    
		case (int::compare (bnum rb1, bnum rb2))
		  
                     EQUAL   =>  s::symbol_gt (s1, s2);
		     GREATER =>  TRUE;
		     LESS    =>  FALSE;
                esac;
	    };

    end;			# stipulate
};				# package symbol_table_entry 


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################
