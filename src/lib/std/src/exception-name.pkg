## exception-name.pkg

# Compiled by:
#     src/lib/std/src/Base-imp.make6

# Eventually, this should move to PreBasis so that we don't need the PreGeneral
# package anymore.



###                 "When I like people immensely,
###                  I never tell their names to any one.
###                  It is like surrendering a part of them."
###                                 -- Oscar Wilde



###                 "I never made a mistake in my life;
###                  At least, never one that I couldn't
###                  explain away afterwards."
###
###                                 -- Rudyard Kipling



stipulate

    package winix =  winix_guts;			# winix_guts	is from   src/lib/std/src/unix/winix-guts.pkg

herein

    package exception_name
    : (weak)
    api {
	exception_name:     Exception -> String;
	exception_message:  Exception -> String;
    }
    {
	my exception_name:  Exception -> String
	   =
	   exception_info_hook::exception_name;          #  inline_t::cast (fn (REF s, _, _) => s) 



	fun exception_message (winix::SYSTEM_ERROR (s, NULL))
		=>
		"SYSTEM_ERROR: " + s;


	    exception_message (winix::SYSTEM_ERROR (s, THE e))
		=>
		cat ["SYSTEM_ERROR: ", s, " [", winix::error_name e, "]"];


	    exception_message (io_exceptions::IO { cause, function, name } )
		 =>
		 {   cause_message
			 =
			 case cause
			   
			      winix::SYSTEM_ERROR (s, _)            => [", ", s];
			      io_exceptions::BLOCKING_IO_NOT_SUPPORTED      => [", blocking I/O not supported"];
			      io_exceptions::NONBLOCKING_IO_NOT_SUPPORTED   => [", non-blocking I/O not supported"];
			      io_exceptions::RANDOM_ACCESS_IO_NOT_SUPPORTED => [", random access not supported"];
			      io_exceptions::TERMINATED_INPUT_STREAM        => [", terminated input stream"];
			      io_exceptions::CLOSED_IO_STREAM               => [", closed stream"];
			      _                                  => [" with exception ", exception_message cause];
			esac;

		     cat ("Io: " ! function ! " failed on \"" ! name ! "\"" ! cause_message);
		 };

	    exception_message (FAIL s)            => "FAIL: " + s;
	    exception_message BIND                => "nonexhaustive naming failure";     # NOTE: we should probably include line/file info for MATCH and BIND  XXX BUGGO FIXME
	    exception_message MATCH               => "nonexhaustive match failure";
	    exception_message SUBSCRIPT           => "subscript out of bounds";
	    exception_message INDEX_OUT_OF_BOUNDS => "index out of bounds";
	    exception_message SIZE                => "size";
	    exception_message OVERFLOW            => "overflow";
	    exception_message DIVIDE_BY_ZERO      => "divide by zero";
	    exception_message DOMAIN              => "domain error";
	    exception_message e                   => exception_name e;
	end;

											      my _ = 
	exception_info_hook::exception_message_hook
            :=
            exception_message;
    };
end;



## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
