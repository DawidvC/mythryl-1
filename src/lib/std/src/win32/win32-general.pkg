## win32-general.pkg


# General Win32 stuff.



package win32_general:  Win32_General {

	package unt = Word32Imp
	type word = unt::word

	type hndl = word
	type system_time = { year: Int,
			    month: Int,
			    dayOfWeek: Int,
			    day: Int,
			    hour: Int,
			    minute: Int,
			    second: Int,
			    milliSeconds: Int }
	
	arcSepChar = '\\'

	local
	    fun cfun' lib name = c_interface::c_function lib name
	    my sayDebug' : String -> Void = cfun' "WIN32" "debug"
	in
	    sayDebug = /* sayDebug' */ fn _ => ()

	    my log:   Ref( List( String ) ) = REF []

	    fun logMsg s = (log := s . *log;
			    sayDebug s)

	    fun cfun lib name = 
		(logMsg ("naming C function <"$lib$":"$name$">...");
		 cfun' lib name
		   before
		 logMsg "bound\n")
	end

	my getConst' : (String * String) -> word = 
	    cfun "WIN32" "get_const"
	fun getConst kind name = getConst'(kind, name)

	my getLastError:  Void -> word = cfun "WIN32" "get_last_error"

	INVALID_HANDLE_VALUE = getConst "GENERAL" "INVALID_HANDLE_VALUE"
	fun isValidHandle (h:  word) = h != INVALID_HANDLE_VALUE

}



## COPYRIGHT (c) 1996 Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
