## c-calls.api



# Api for an interface for calling user C functions
# from high-level compiled code.


api Ansi_C_Calls
= 
api
    #  An abstract pointer type 
    eqtype caddr
    my NULL:  caddr
    my free:  caddr -> Void
    my index:  (caddr * Int) -> caddr
    my difference:  (caddr * caddr) -> unt32::word

    type ctype
      = CaddrT
      | CarrayT of (Int * ctype)
      | CcharT
      | CdoubleT
      | CfloatT
      | CfunctionT of (List ctype * ctype)
      | CintT 
      | ClongT
      | CptrT of ctype
      | CshortT
      | CstringT                    #  C's null-terminated "char *" 
      | CstructT of List ctype
      | CunionT of List ctype
      | CvectorT of (Int * ctype)
      | CvoidT

    type cdata
      = Caddr of caddr
      | Carray of rw_vector::Rw_Vector( cdata )
      | Cchar of char                            
      | Cdouble of real
      | Cfloat of real
      | Cfunction of List( cdata ) -> cdata
      | Cint of unt32::word
      | Clong of unt32::word
      | Cptr of cdata
      | Cshort of unt32::word
      | Cstring of String           #  C's null-terminated "char *" 
      | Cstruct of List( cdata )
      | Cunion of cdata
      | Cvector of vector::Vector( cdata )
      | Cvoid

    my datumMLtoC:  ctype -> cdata -> (caddr * List( caddr ) )
    my datumCtoLib7:  ctype -> caddr -> cdata

    #  number of bytes ctype uses in the C heap 
    #  size does not include pointed-to substructure (e.g. Cstring, Cptr) 
    my sizeof:  ctype -> Int

    #  total number of bytes the datum will occupy on the C heap 
    #  unlike sizeof, this includes all pointed-to substructure 
    my sizeofDatum:  cdata -> Int

    my has_type:  cdata -> ctype

    exception EmptyAggregate
    exception AggregateTooBig
    exception BadReturnType of ctype
    exception BadArgumentType of ctype
    exception NotAPtr of ctype
    exception UnimplementedForType

    my registerCFn:  (String * List( ctype ) * ctype) -> 
		      (cdata List -> (cdata * List( caddr )))

    my registerAutoFreeCFn:  (String * List( ctype ) * ctype) -> 
			      (List( cdata ) -> cdata)
end #  api Ansi_C_Calls 


## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
