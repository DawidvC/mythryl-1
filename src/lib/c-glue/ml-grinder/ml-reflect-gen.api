
# This module is responsible for generating reflection code given
# a set of enum definitions.

api Lib7_Reflect_Gen =
api 
    package g:  Ml_Grinder 
    my reflect:  
        { prefix:     String, #  generated functions have this prefix 
                       #  Create the argument of a function 
         makeArg:      g::Ast::pat -> List( g::Ast::pat ),
         makeConsPat:  g::Ast::id *  Null_Or( g::Ast::pat ) -> g::Ast::pat, 
         makeCons:     g::Ast::id *  Null_Or( g::Ast::exp ) -> g::Ast::exp
        } ->
        { idty:      g::Ast::ident -> g::Ast::exp, #  how to deal with specific types 
         appty:     g::Ast::ident * List( g::Ast::exp ) -> g::Ast::exp,
         funty:     g::Ast::exp * g::Ast::exp -> g::Ast::exp,
         tuplety:   List( g::Ast::exp ) -> g::Ast::exp,
         recordty:   List( g::Ast::id * g::Ast::exp ) -> g::Ast::exp
        } -> g::Ast::decl #  enum definitions
          -> g::Ast::decl #  generate code 
end
