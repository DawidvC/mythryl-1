# 
# The basis seems to be missing a string (out)stream type.
# This is it.
#
# -- Allen Leung.

# Compiled by:
#     src/lib/compiler/lower/make7/lib.make6


###              "Then anyone who leaves behind him a written manual,
###               and likewise anyone who receives it, in the belief
###               that such writing will be clear and certain,
###               must be exceedingly simple-minded."
###
###                                            -- Plato


package string_out_stream
:
String_Outstream					# String_Outstream	is from   src/lib/compiler/lower/library/string-out-stream.api

{

    package file      =  file;				# file			is from   src/lib/std/src/unix/posix-file.pkg
    package text_primitive_io =  text_primitive_io;	# text_primitive_io	is from   src/lib/std/src/io/text-primitive-io.pkg

    Streambuf = Ref( List( String ) );


    fun make_stream_buf ()
        =
        REF [] : Streambuf;


    fun get_string (REF s)
        =
        string::cat  (list::reverse  s);


    fun set_string (r, s)
        =
        r :=  [s];     


    fun open_string_out  buffer
	=
	output_stream
        where 
	    fun write_vector sl
                =
		{   buffer :=  char_vector_slice::to_vector sl ! *buffer;
		    char_vector_slice::length sl;
                };

	    fun write_rw_vector sl
                =
		{   buffer := rw_char_vector_slice::to_vector sl ! *buffer;
		    rw_char_vector_slice::length sl;
                };

	    writer
                =
		text_primitive_io::WRITER 
		    { name       => "string stream",
		      chunk_size  => 512,
		      write_vector   => THE write_vector,
		      write_rw_vector   => THE write_rw_vector,
		      write_vector_nonblocking => THE (THE o write_vector),
		      write_rw_vector_nonblocking => THE (THE o write_rw_vector),
		      block      => NULL,
		      can_output  => NULL,
		      get_position     => NULL,
		      set_position     => NULL,
		      end_position     => NULL,
		      verify_position  => NULL,
		      close      => fn () => (); end ,
		      io_descriptor     => NULL
		    };

	    output_stream
                =
                file::make_outstream 
		   (file::pure_io::make_outstream (writer, io_exceptions::NO_BUFFERING));
	end;
};

