## host-info.pkg

# Compiled by:
#     src/lib/std/src/stdlib-core.make6


# Get information about the underlying hardware and OS.

package host_info: (weak)  Host_Info {		# Host_Info	is from   src/lib/std/src/nj/host-info.api

    exception UNKNOWN;

    fun get_info_string NULL    =>  raise exception UNKNOWN;
        get_info_string (THE s) =>  s;
    end;

    Os_Kind
      = UNIX	#  One of the many flavours of UNIX (incl Mach and NeXTStep) 
      | WIN32	#  Wind32 API (incl. Windows95 and WindowsNT) 
      | MACOS	#  Macintosh OS 
      | OS2	#  IBM's OS/2 
      | BEOS;	#  BeOS from Be 

    fun sys_info (s: String): Null_Or( String )
        =
	c_interface::c_function "Lib7-Runtime" "sysInfo" s;

    fun get_flag flag
        =
        case (get_info_string (sys_info flag))
	  
             "NO" =>  FALSE;
	      _   =>  TRUE;
        esac;

    fun get_os_name ()
        =
        get_info_string (sys_info "OS_NAME");

    fun get_os_kind ()
        =
        case (get_os_name ())
	  
             ("SunOS"  | "Solaris" | "Irix"  | "OSF/1" | "AIX"   | "SVR4" | "NeXTStep" |
	       "Ultrix" | "HPUX"    | "Linux" | "BSD"   | "PLAN9" | "MACH" | "Darwin"   | "Cygwin"
	     ) => UNIX;

	     "OS/2"  =>  OS2;
	     "Win32" =>  WIN32;
	     _       =>  raise exception FAIL "unknown OS";
        esac;


    fun get_os_version          () =  get_info_string (sys_info "OS_VERSION");
    fun get_host_architecture   () =  get_info_string (sys_info "HOST_ARCH");
    fun get_target_architecture () =  get_info_string (sys_info "TARGET_ARCH");

    fun has_software_polling () = get_flag "HAS_SOFT_POLL";
    fun has_multiprocessing () = get_flag "HAS_MP";

  };




## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
