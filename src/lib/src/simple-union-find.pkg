# simple-union-find.pkg
#
# UNIONFIND DATA STRUCTURE WITH PATH COMPRESSION
#
# Author:
#    Fritz Henglein
#    DIKU, University of Copenhagen
#    henglein@diku.dk

# Compiled by:
#     src/lib/src/lib7.make6


package simple_union_find: (weak)  Union_Find {		# Union_Find	is from   src/lib/src/union-find.api

    exception UNION_FIND  String;

    Union_Find_C X
      = ECR  X
      | PTR  Union_Find( X )

    withtype
    Union_Find X = Ref( Union_Find_C( X ) );

    fun find (p as REF (ECR _))
            =>
            p;

        find (p as REF (PTR p'))
            =>
            {   p'' = find p';
          
	        p := PTR p''; p'';
            };
    end;

    fun u_ref x
        =
        REF (ECR x);

    fun !! p
        =
        case *(find p)
	  
             ECR x =>  x;
	     _     =>  raise exception MATCH;
        esac;
      
    fun equal (p, p')
        =
        find p == find p';

    fun set (p, x)
        =
        {   p' = find p;
	  
	    p' := ECR x;
	};

    fun link (p, q)
        =
        {   p' = find p;
            q' = find q;
	  
	    if   (p' == q'   )     FALSE;
            else   p' := PTR q';   TRUE;   fi;
	};
 
    union = link;

    fun unify f (p, q)
        =
        {   v =  f(!!p, !!q);
	  
	    union (p, q)
            before
                set (q, v);
	};

};	#  SimpleUnion_Find 

