
# A generic lexer generator.  
#
# Currently it supports the following features:
#
# 1. The meta characters ^ and $
# 2. lookahead
# 3. contexts
# 4. wider characters than 8 bit (for future unicode support)


api LEXER_GENERATOR =
api
   package r:      Abstract_Regular_Expression
   package lexer:  LEXER_TABLES

     #  A user defined start states; these most be numbered from 1 
   type context = Int 

   enum rule = #  A matching rule 
      RULE of
      { contexts:   List( context ),     #  user defined contexts 
        regexp:     r::syntax,         #  the regular expression 
        lookahead:  Null_Or( r::syntax )   #  lookahead (not implemented yet) 
      }

   #  Create a lexer 
   my compile:  List( r::syntax ) -> Lexer::lexer

   my compile' : 
       { matchtrees:   Bool, #  generate tables to keep track of matchtrees?
         numContexts:  Int   #  number of special contexts 
       } -> List( rule ) -> Lexer::lexer
end
