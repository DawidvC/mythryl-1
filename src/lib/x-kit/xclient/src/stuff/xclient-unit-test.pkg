## xclient-unit-test.pkg

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.make6

# NB: We must compile this locally via
#         xclient-internals.make6
#     instead of globally via
#         src/lib/test/unit-tests.make6
#     like most unit tests, in order to have
#     access to required library internals.

# Run by:
#     src/lib/test/all-unit-tests.pkg

stipulate
    include unit_test;
    include make7::scripting_globals;
    #
    package ctl =  thread_scheduler_control;			# thread_scheduler_control	is from   src/lib/thread-kit/src/unix/thread-scheduler-control.pkg
    package tr  =  tracing;					# tracing			is from   src/lib/src/lib/thread-kit/src/lib/tracing.pkg
    package xtr =  xtracing;					# xtracing			is from   src/lib/x-kit/xclient/src/stuff/xtracing.pkg
    package dy  =  display;					# display			is from   src/lib/x-kit/xclient/src/wire/display.pkg
    tracefile   =  "xclient-unit-test-trace.log";
herein

    package xclient_unit_test {

	my name = "src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg";

	trace =  xtr::print_if  xtr::io_tracing;		# Conditionally write strings to tracing.log or whatever.

	default_time_quantum					# Copied from src/lib/x-kit/widget/lib/run-xkit.pkg
	    =
	    time::from_milliseconds 20;

	fun run ()
	    =
	    {   printf "\nDoing %s:\n" name;   

		# Remove any old version of the tracefile:
		#
		if (isfile tracefile)
		    #
		    unlink tracefile;
		fi;

		{   include tracing;				# tracing			is from   src/lib/src/lib/thread-kit/src/lib/tracing.pkg
		    log_trace_messages  (TO_FILE tracefile);
		    enable all_tracing;				# Gross overkill.
#		    enable xtr::xkit_tracing;			# Lesser overkill.
#		    enable xtr::io_tracing;			# Saner yet.	
		};

	        ctl::start_up_thread_scheduler'
		    default_time_quantum
		   .{
			assert  (ctl::thread_scheduler_is_running ());

			case (posix::getenv "DISPLAY")
			    #
			    NULL =>
				{    fprintf file::stderr "xclient-unit-test.pkg: DISPLAY environment variable not set, skipping unit tests.\n";
				     assert FALSE;	# To alert anyone just looking at the final run statistics.
				};

			    THE display_name
				=>
				{
                                    trace .{ sprintf "xclient-unit-test.pkg: DISPLAY variable is set to '%s'" display_name; };

				    xdisplay
					=	
				        dy::open_xdisplay { display_name, authentication => NULL };

				    ();

#                                   do_it (make_root_window NULL);
				};
			esac;

			ctl::shut_down_thread_scheduler  winix::process::success;
		    };

		assert TRUE;

		summarize_unit_tests  name;
	    };
    };

end;