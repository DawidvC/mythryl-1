# x11-authentication.api
#
# Support for X11 authentication.

# Compiled by:
#     src/lib/x-kit/draw/xkit-draw.make6

###         "The right word may be effective,
###          but no word was ever as effective
###          as a rightly timed pause."
###
###                -- Mark Twain's Speeches


stipulate
    package xc =  xcore;								# xcore		is from   src/lib/x-kit/xclient/src/api/xkit-lib-external-interface.pkg
herein

    api X11_Authentication {

	# The different network protocol families:
	#
	family_internet:  Int;
	family_decnet:    Int;
	family_chaos:     Int;
	family_local:     Int;
	family_wild:      Int;

	get_xauthority_filename:  Void -> String;
	    #
	    # Return the default name of the authentication file (either
	    # specified by the XAUTHORITY dictionary variable, or the
	    # file $HOME/.Xauthority.  If neither XAUTHORITY or HOME 
	    # are defined, then ".Xauthority" is returned.


	get_xauthority_file_entry_by_address
	    :
	    { family:   Int,
	      address:  String,
	      display:  String
	    }
	    ->
	    Null_Or( xc::Authentication );
	    #
	    # Search the default xauthority file for the first entry that
	    # matches the family, network address and display number.  If no
	    # such match is found, then NULL is returned.  The * value family_wild
	    # matches anything, as do the empty strings when given for address or display.


	get_best_xauthority_file_entry_by_address
	    :
	    { family:      Int,
	      address:     String,
	      display:     String,
	      # 	
	      acceptable_authentication_methods:  List( String )
	    }
	    ->
	    Null_Or( xc::Authentication );
	    #
	    # This is like get_xauthority_file_entry_by_address
            # except that a list of acceptable authentication methods is
            # specified by the list acceptable_authentication_methods.
	    #
	    # We return the authentication info that matches the earliest
	    # name on the list, or NULL if no match is found.


	get_selected_xauthority_file_entries
	    :
	    (xc::Authentication -> Bool)
	    ->
	    String
	    ->
	    List( xc::Authentication );
	    #
	    # Read the specified authentication file
	    # (usually ~/.Xauthority) and return a list
	    # of the entries that satisfy the given predicate.
    };

end;