/*
 * How to represent a predicate so that various logical operations can
 * be performed.
 *
 * -- Allen Leung (leunga@cs.nyu.edu)
 */



###              ""Never put off until run time what you can do at compile time."
###
###                                        -- David Gries, in "Compiler Construction
###                                           for Digital Computers", circa 1969.



api SSA_PREDICATE =
api
   package t:  Codetree

   enum expr = FALSE | TRUE | IF of t::Type * t::Basis::cond * expr * expr

   my to_string:    expr -> String

   my And:         expr * expr -> expr
   my Or:          expr * expr -> expr
   my Not:         expr -> expr

   my isDisjoint:  expr * expr -> Bool
   my implies:     expr * expr -> Bool

end
