# apps-to-build
#
# This file controls which applications will be built by "make init"

# The following is a list of the applications (in addition to mythryld) that
# this shell script can build.  Comment out those that you do not
# want.  Note that multiprog-lib requires multiprog.

#
# The build script will move all libraries out of the source tree
# and into the $LIBDIR directory.  Thus, you can later delete the
# entire source tree without losing functionality.
# (Notice that the old "dont_move_libraries" directive broke a while ago
# and has been removed.)
#

# The base system consisting of runtime, compiler, and basic libraries
# will always be built.

# build Mythryl-Yacc
#
request mythryl-yacc

# Always: build the pre-compiled Mythryl-Yacc Library; this is necessary
# to use parsers produced by Mythryl-Yacc, but also to bootstrap the system
# in the first place.


#
# Build experimental Mythryl-Lex:
# request lexgen

#
# Build production Mythryl-Lex:
request mythryl-lex

# Always: build the pre-compiled Lib7 Library (necessary to bootstrap).


#
# Build ML-Burg:
# request ml-burg

#
# Build the remaining components of the Lib7 library
# -- everything except lib7.make7, aka Util, itself:
# request lib7

#
# Build the Make7 "portable graph" utility library:
# request pgraph-util

#
# Build multiprog (nee' Concurrent ML), a library
# for message-passing concurrency:
# request multiprog

#
# Build the multiprog library, which
# provides some useful modules:
# request multiprog-lib

#
# Build x-kit, which is a library for
# X-Windows programming. x-kit requires multiprog
# request x-kit

#
# Build (certain) parts of lowcode that are not
# already part of the compiler itself:
# request lowcode

#
# Build the C-Kit, which is a
# library for parsing and type-checking C programs:
# request c-kit

#
# Build the C-GLUE-LIB library, which is the core of
# a new foreign function interface (where "foreign" functions are
# "no longer foreign")
# This library is necessary to compile and/or run programs that use
# the new FFI.
# This preview release currently works under X86/Linux, Sparc/Solaris,
# PPC/MacOSX, and X86/Win32.
# request c-glue-lib

#
# Build C-GLUE-MAKER, a program generator tool used in conjunction with
# the new "C-GLUE" foreign function interface.  The tool generates Mythryl
# glue code from C source code:
# (Requires c-kit!)
# This preview release currently works under X86/Linux, Sparc/Solaris,
# PPC/MacOSX, and X86/Win32.
# request c-glue-maker

#
# Build the lowcode Tools library.
# This library is for parsing and pretty printing source code.
# It is used by various lowcode code generator generator:
# request lowcode-tools

#
# Build the 'nowhere' program translator.
# This tool translates programs with conditional patterns (where clauses) 
# into legal source code.  See lowcode/tools/doc/nowhere.tex for its
# (bad) documentation.
# (Requires the lowcode-tools library!)
# request nowhere

#
# Build 'heap2asm' - an experimental component of
# a new facility for producing true stand-alone executables.
# request heap2asm

# Note: autoloading is always enabled.
#   In order to customize what is being pre-registered for autoloading
#   edit file "preloads".  You should make sure that it contains at least
#   "$ROOT/src/lib/core/make7/make7.make7".
#  Also, it is a good idea to have "$ROOT/src/lib/std/stdlib.make7" pre-loaded.
