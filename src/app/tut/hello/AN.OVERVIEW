A simple hello-world example of building a library.

One way to 'make' this library is to do

    linux$ my

in this directory and then
at the mythryl interactive

    eval:

prompt do

    make "hello.make6";

This will load your library after first
doing any needed re/compilations.  If you then do

    show_all ();

you will see "pkg hello" and "api Hello" defined.

If you then do

    hello::hello ();

you will see

    Hello, world!

print out.


When you're done debugging and want to generate
a .a7 freezefile for your library, you can do

    freeze "hello.make6";;

This will generate a

    hello.make6.a7

freezefile containing all the .o7 object code
files for your library.  The next time you do

    make "hello.make6";;

Mythryl will load your  hello.make6.a7  file without
even looking at any of your .pkg .api .o7 or .make6
files -- they do not even need to still exist at
that point.

Removing the   hello.make6.a7   file will return
your library to "thawed" (development mode), where
doing

    make "hello.make6";

automatically recompiles any .pkg or .api files
which have been changed since the matching .o7
was last compiled.
