#!/bin/sh

# This script is run by 'make fixpoint'
# from the root install directory.
#
# It tests the Mythryl compiler
# by compiling it with itself until it
# gets the same result two times running.
#
# This provides a simple but effective
# measure for rebuilding confidence in
# the compiler after hacking it:  If it
# compiles itself ok, it can't be too
# badly broken, but if it CANNOT compile
# itself, you're in deep doo-doo and had
# best back out the changes and try again.


##-           "When you look into your coffee,
##-            the coffee looks back at you."


# We compile the compiler until
# we get the same answer twice,
# or reach this limit:
#
MAX_COMPILE_ROUNDS=3

if [ -d rm-rf-me ]
then
    echo "                            sh/make-fixpoint:   Removing pre-existing rm-rf-me/ directory..."
    rm -rf rm-rf-me
fi

echo "                            sh/make-fixpoint:   Creating temporary rm-rf-me/ working directory..."
mkdir rm-rf-me

echo "                            sh/make-fixpoint:   Duplicating distribution in rm-rf-me..."

top=`pwd`				# Remember directory we started in, say ~/src/mythryl7.110.58
base=`echo $top | sed 's|^.*/||'`	# Peel off the 'mythryl7.110.58' suffix.

# cd to our parent directory and tar up a complete image:
#
cd ..
if [ -f rm-me.tar ]
then
    echo "                            sh/make-fixpoint:   Removing pre-existing ../rm-me.tar file..."
    rm -f rm-me.tar
fi
tar -cf rm-me.tar  $base


# Move the tarfile to our working directory
# then cd to the working directory:
#
mv rm-me.tar $top/rm-rf-me
echo "                            sh/make-fixpoint:   Entering $top/rm-rf-me"
cd $top/rm-rf-me
rm_rf_me_dir=`pwd`

# Unpack the tarfile and enter the
# resulting duplicate dirtree:
#
tar -xf rm-me.tar

# Repatch the shebang lines in our crucial 'executables'
# (bin/mythryld bin/mythryl-lex bin/mythryl-yacc) to point to the
# bin/runtime in this new dirtree:
#
cd $base
echo "                            sh/make-fixpoint:   Entering `pwd`"
sh/patch-shebangs

# Remove all .o7 and .a7 files to force recompilation:
#
echo "                            sh/make-fixpoint:   Removing .o7 files in rm-rf-me/$base dirtree..."
find . -name '*\.o7' -exec rm {} \;
echo "                            sh/make-fixpoint:   Removing .a7 files in rm-rf-me/$base dirtree..."
find . -name '*\.a7' -exec rm {} \;

# Also remove any backup copy of the compiler,
# so that we can detect a successful compile
# via the recreation of this file:
#
if [ -f bin/mythryld.old ]; then
    rm bin/mythryld.old
fi

# Save the state of the resulting temporary dirtree:
#
cd $rm_rf_me_dir
echo "                            sh/make-fixpoint:   Returning to `pwd`"
rm rm-me.tar
tar -cf rm-me.tar $base

compile_round=0

echo "                            sh/make-fixpoint:   Doing initial compile of the compiler..."
cd $base
echo "                            sh/make-fixpoint:   Entering `pwd`"
make compiler
if [ ! -f bin/mythryld.old ]; then
    echo "                            sh/make-fixpoint:   Failed to compile compiler, aborting"
    exit 1
fi
cd $rm_rf_me_dir
echo "                            sh/make-fixpoint:   Returning to `pwd`"

while [ $compile_round -lt $MAX_COMPILE_ROUNDS ]; do

    compile_round=`expr $compile_round + 1`

    # Now use the new compiler image to do the
    # same thing all over again in a new copy
    # of the dirtree:
    #
    echo "                            sh/make-fixpoint:   Doing round $compile_round recompile of the compiler..."
    mv $base $base-$compile_round
    tar -xf rm-me.tar
    cp  $base-$compile_round/bin/mythryld  $base/bin/mythryld
    cd  $base
    echo "                            sh/make-fixpoint:   Entering `pwd`"
    make compiler
    if [ ! -f bin/mythryld.old ] ; then
	echo "                            sh/make-fixpoint:   Failed to compile compiler, aborting"
	exit 1
    fi
    cd $rm_rf_me_dir
    echo "                            sh/make-fixpoint:   Returning to `pwd`"
    ls -ld

    # Done if the old and new sourcetrees match:
    #
    echo "                            sh/make-fixpoint:   Doing diff -r $base/src $base-$compile_round/src  >/dev/null 2>&1"
    #
    diff -r  $base/src  $base-$compile_round/src
    if [ $? -eq 0 ]; then

	echo "                            sh/make-fixpoint: Removing temporary working directory 'rm-rf-me'"
	cd $top
	rm -rf rm-rf-me &

	echo "                            sh/make-fixpoint:   Fixpoint reached in round $compile_round"
	exit 0
    fi

    echo "                         sh/make-fixpoint:   Differences found between rm-rf-me/mythryl7.110.58/src and rm-rf-me/mythryl7.110.58-1/src"
done

echo "                         sh/make-fixpoint:   No fixpoint reached after $compile_round rounds"
exit 1
