## copy-ast.api

local 
  type aidctx = Tables::aidtab

  type copier( X )   = aidctx -> X -> X

  type extCopier( X )
      =
      (copier (raw_syntax::expression) * copier (raw_syntax::statement)  * copier (raw_syntax::externalDecl) ) -> copier(X)

  type expExt
      =
      RawSyntaxTreeExt::expressionExt  (raw_syntax::expression, raw_syntax::statement, raw_syntax::binop, raw_syntax::unop) 

  type stmtExt
      =
      RawSyntaxTreeExt::statementExt (raw_syntax::expression, raw_syntax::statement, raw_syntax::binop, raw_syntax::unop)

  type extDeclExt
      =
      RawSyntaxTreeExt::externalDeclExt (raw_syntax::expression, raw_syntax::statement, raw_syntax::binop, raw_syntax::unop) 
in

api COPYASTEXT = api
  my copyExprExt:     extCopier(  expExt )
  my copyStmtExt:      extCopier(  stmtExt )
  my copyExtDeclExt:   extCopier(  extDeclExt )
end

api COPYAST = api
  my copyAid:          copier(  Aid::uid )
  my copyRawSyntaxTree:          copier(  raw_syntax::Raw_Syntax_Tree )
  my copyExtDecl:      copier(  raw_syntax::externalDecl )
  my copyCoreExtDecl:  copier(  raw_syntax::coreExternalDecl )
  my copyDecl:         copier(  raw_syntax::declaration )
  my copyStmt:         copier(  raw_syntax::statement )
  my copyCoreStmt:     copier(  raw_syntax::coreStatement )
  my copyExpr:         copier(  raw_syntax::expression )
  my copyCoreExpr:     copier(  raw_syntax::coreExpression )
  my copyInitExpr:     copier(  raw_syntax::initExpression )
end

end


## Copyright (c) 1998 by Lucent Technologies 
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
