#
# This combinator allows you to get a cached copy of a graph.
#
# -- Allen Leung

# Compiled by:
#     src/lib/graph/graphs.make6

api Graph_Snapshot {

    snapshot:  graph::Graph( N, E, G ) 
                -> 
		{ picture:  graph::Graph( N, E, G ), 
		  button:  Void -> Void
		};
};

#
# This is a naive implementation.
#
generic package graph_snap_shot (gi:  Graph_Guts)		# Graph_Guts	is from   src/lib/graph/graph-guts.api
: (weak)
Graph_Snapshot						# Graph_Snapshot	is from   src/lib/graph/snap-shot.pkg
{
    package g= graph;					# graph	is from   src/lib/graph/graph.pkg

    fun snapshot (g::GRAPH graph)
	=
	{ picture, button }
	where
	    my picture as g::GRAPH graph'
		=
		gi::graph (graph.name, graph.graph_info, graph.capacity ());

	    fun clear ()
		=
		graph'.forall_nodes (fn (n, _) => graph'.remove_node n; end );

	    fun copy ()
		=
		{   graph.forall_nodes  graph'.add_node;
		    graph.forall_edges  graph'.add_edge;
		    graph'.set_entries (graph.entries ());
		    graph'.set_exits   (graph.exits   ());
		};

	    fun button ()
		=
		{   clear ();
		    copy  ();
		};

	    copy();
	end;
};

