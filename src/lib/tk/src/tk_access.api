api Access =
  api

   my init:      Void -> Int
   # Clears EventCmd-Buffer, Creates instance of TclInterpreter and 
   # makes the setup for its communication with SML

   my reset:     Void -> Void
   #  Destroy's instance of interpreter (if any) 

   my eval:   String -> Void
   # sends string to instance of TclInterpreter and forces its evaluation 
   # via Tcl_Eval. May produce EventCmd's in EventCmd-Buffer

   my do_one_event:  Void -> Int
   #  Processes one Event in Tk via calling Tk_DoOneEvent (0). This
   #  may produce EventCmd's in EventCmd-Buffer. If no event occured in
   #  the interface, do_one_event will wait until the first non-empty event. 
   #  Postcond: EventCmd is nonempty.

   my do_one_event_without_waiting:  Void -> Int 
   #  Processes one Event in Tk via calling Tk_DoOneEvent (TCL_DONT_WAIT). This
   #  may produce EventCmd's in EventCmd-Buffer. If no event occured in the
   #  interface, do_one_event_without_waiting will return. 
   #  do_one_event_without_waiting may return because no event occured (return value 0)
   #  or because an empty-event occured (return value 1, EventCmd-Buffer 
   #  unchanged.

   my get_event:  Void -> String
   #  reads one Entry from EventCmd-Buffer. Produces "" if empty. 


  end;
