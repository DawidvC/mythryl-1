
# Bag enum that uses hashing
# 
# -- Allen Leung


api HASH_BAG =
api

   type bag( X )

   my create:  { order:  X * X -> order,
                  hash:   X -> Int,
                  exn:    exn
                } -> Int -> bag( X )

   my size:        bag( X ) -> Int
   my bucketSize:  bag( X ) -> Int
   my is_empty:    bag( X ) -> Bool
   my insert:      bag( X ) -> X -> Void
   my insertN:     bag( X ) -> X * Int -> Void
   my remove:      bag( X ) -> X -> Void
   my removeN:     bag( X ) -> X * Int -> Void
   my removeAll:   bag( X ) -> X -> Void
   my toList:      bag( X ) -> List( X * Int )
   my toDupList:   bag( X ) -> List( X )
   my clear:       bag( X ) -> Void
   my contains:    bag( X ) -> X -> Bool
   my count:       bag( X ) -> X -> Int
   my apply:       (X * Int -> Void) -> bag( X ) -> Void
   my dupApp:      (X -> Void) -> bag( X ) -> Void
   my fold:        ((X * Int) * Y -> Y) -> Y -> bag( X ) -> Y
   my dupFold:     (X * Y -> Y) -> Y -> bag( X ) -> Y
   my to_string:   (X -> String) -> bag( X ) -> String

end

