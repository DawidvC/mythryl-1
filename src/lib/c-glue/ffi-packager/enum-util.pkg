package enum_util
:>
api
   my toC:   (X -> mlrep::signed::Int) -> List( X ) -> mlrep::signed::Int
   my toML:  (mlrep::signed::Int -> X) -> mlrep::signed::Int -> List( X )
end
{
   package w = mlrep::UInt

   fun unsigned x
       =
       mlrep::unsigned::from_large_int (mlrep::signed::toLarge x)

   fun signed   x
       =
       mlrep::signed::fromLarge (mlrep::unsigned::toLargeIntX x) 

   fun toC f
       =
       {   fun loop ([], w)    = signed w
	     | loop (x . xs, w) = loop (xs, w::bitwise_or (unsigned (f x), w));

           fn xs => loop (xs, 0w0);
       }

   fun toML f
       = 
       {   fun loop (0w0, mask, l) = l 
	     | loop (w, mask, l)
		   = 
		   {   i =   signed (w::bitwise_and (mask, w));
		       x =   f i;

		       loop (w, W.<<(mask, 0w1), x . l);
		   };

           fn w => loop (unsigned w, 0w1,[]);
       }

};
