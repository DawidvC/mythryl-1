/* ***************************************************************************
   PolyML root file. (Known to run with MoscowML 2.00.)
   Author: cxl
   (C) 2001, Universitaet Freiburg
  ************************************************************************** */

#  First load all required packages ("units") 

load "Int";
load "substring";
load "string";
load "unix";
load "os";
load "process";
load "paired_lists";
load "io";
load "date";
load "time";
load "bool";
load "command_line";
load "timer";
load "float";

#  load "posix"; can't find that-- hence this: 

package posix {

	package process {  fun sleep x = x };
        package process_environment {
               fun getlogin () = "unknown";
	       fun getuid() = -1;
        };
	package system_db {
	   fun getpwuid _ = "unknown"
               package password = pkg fun name _ = "unknown"
            end
        };
    };

#  winix::file::read_directory_entry has a different type in MoscowML's basis, hence this: 
package os {
        use os
        package file_system {

                use file_system
                read_directory_entry= fn ds=> null_or::the_else (read_directory_entry ds, "")
            };
    }; 




#  use Moscow-ML specific file 
run "sys_dep.api";
run "mosml.pkg";

#  Then run CM-produced root file 
run "root.pkg";



/* Here's how to produce root.pkg from inside SML/NJ: 

cm::mkusefile "root.pkg";

Of course, in there we need to delete njml.pkg 
and sys_dep.api.
*/
