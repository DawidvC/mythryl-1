# This file contains information read by
#
#     $ROOT/src/lib/src/make-gtk-glue
#


# Putting the following declarations here avoids
# duplicating them between gtk.api and gtk-g.pkg,
# simplifying maintainance:

declare: mythryl-type
type   :
type   :    Event_Mask
type   :        = EXPOSURE_MASK
type   :        | POINTER_MOTION_MASK
type   :        | POINTER_MOTION_HINT_MASK
type   :        | BUTTON_MOTION_MASK
type   :        | BUTTON1_MOTION_MASK
type   :        | BUTTON2_MOTION_MASK
type   :        | BUTTON3_MOTION_MASK
type   :        | BUTTON_PRESS_MASK
type   :        | BUTTON_RELEASE_MASK
type   :        | KEY_PRESS_MASK
type   :        | KEY_RELEASE_MASK
type   :        | ENTER_NOTIFY_MASK
type   :        | LEAVE_NOTIFY_MASK
type   :        | FOCUS_CHANGE_MASK
type   :        | STRUCTURE_MASK
type   :        | PROPERTY_CHANGE_MASK
type   :        | PROXIMITY_IN_MASK
type   :        | PROXIMITY_OUT_MASK
type   :        ;
type   :
type   :    Void_Callback            =  Void                       ->  Void;
type   :    Bool_Callback            =  Bool                       ->  Void;
type   :    Float_Callback           =  Float                      ->  Void;
type   :    Button_Event_Callback    =  gtk_event::Button_Event    ->  Void;                                             #                                                               # http://library.gnome.org/devel/gdk/stable/gdk-Event-Structures.html#GdkEventButton
type   :    Key_Event_Callback       =  gtk_event::Key_Event       ->  Void;                                             #                                                               # http://library.gnome.org/devel/gdk/stable/gdk-Event-Structures.html#GdkEventKey
type   :    Expose_Event_Callback    =  gtk_event::Expose_Event    ->  Void;                                             #                                                               # http://library.gnome.org/devel/gdk/stable/gdk-Event-Structures.html#GdkEventExpose    
type   :    Motion_Event_Callback    =  gtk_event::Motion_Event    ->  Void;                                             #                                                               # http://library.gnome.org/devel/gdk/stable/gdk-Event-Structures.html#GdkEventMotion
type   :    Configure_Event_Callback =  gtk_event::Configure_Event ->  Void;                                             #                                                               # http://library.gnome.org/devel/gdk/stable/gdk-Event-Structures.html#GdkEventConfigure
type   :
type   :    Pack_From
type   :        =
type   :        FROM_START | FROM_END;
type   :
type   :	Arrow_Direction
type   :	    = ARROW_UP
type   :	    | ARROW_DOWN
type   :	    | ARROW_LEFT
type   :	    | ARROW_RIGHT;
type   :
type   :	Shadow_Style
type   :	    = SHADOW_NONE
type   :	    | SHADOW_IN
type   :	    | SHADOW_OUT
type   :	    | SHADOW_ETCHED_IN
type   :	    | SHADOW_ETCHED_OUT;
type   :
type   :	Metric = PIXELS | INCHES | CENTIMETERS;
type   :
type   :	Scrollbar_Policy
type   :	    = POLICY_AUTOMATIC
type   :	    | POLICY_ALWAYS;
type   :
type   :	Justification
type   :	    = JUSTIFY_LEFT
type   :	    | JUSTIFY_RIGHT
type   :	    | JUSTIFY_CENTER
type   :	    | JUSTIFY_FILL;
type   :
type   :    Position_Type
type   :	=
type   :        POSITION_LEFT   |
type   :        POSITION_RIGHT  |
type   :        POSITION_TOP    |
type   :        POSITION_BOTTOM ;
type   :
type   :	Update_Policy
type   :	    =
type   :	    CONTINUOUS_UPDATES    |
type   :	    DISCONTINUOUS_UPDATES |
type   :	    DELAYED_UPDATES       ;
type   :
type   :	Table_Attach_Option
type   :	    =
type   :	    TABLE_FILL | TABLE_SHRINK | TABLE_EXPAND;
type   :


declare: mythryl-code
code   :
code   :        #
code   :        fun pack_to_int  pack
code   :            =
code   :            case pack
code   :              
code   :                 FROM_START => 0;
code   :                 FROM_END   => 1;
code   :            esac;
code   :
code   :        #
code   :        fun null_or_widget_to_int  NULL        =>  0;
code   :            null_or_widget_to_int (THE widget) =>  widget;
code   :        end;
code   :
code   :        #
code   :        fun metric_to_int metric
code   :            =
code   :            case metric
code   :
code   :                 PIXELS      => 0;
code   :                 INCHES      => 1;
code   :                 CENTIMETERS => 2;
code   :            esac;
code   :
code   :        #
code   :        fun scrollbar_policy_to_int  scrollbar_policy
code   :            =
code   :            case scrollbar_policy
code   :
code   :                 POLICY_AUTOMATIC => 0;
code   :                 POLICY_ALWAYS    => 1;
code   :            esac;
code   :
code   :        #
code   :        fun justification_to_int JUSTIFY_LEFT     => 0;
code   :            justification_to_int JUSTIFY_RIGHT    => 1;
code   :            justification_to_int JUSTIFY_CENTER   => 2;
code   :            justification_to_int JUSTIFY_FILL     => 3;
code   :        end;
code   :
code   :        #
code   :        fun arrow_direction_to_int  ARROW_UP    => 0;
code   :            arrow_direction_to_int  ARROW_DOWN  => 1;
code   :            arrow_direction_to_int  ARROW_LEFT  => 2;
code   :            arrow_direction_to_int  ARROW_RIGHT => 3;
code   :        end;
code   :
code   :        #
code   :        fun shadow_style_to_int  SHADOW_NONE       => 0;
code   :            shadow_style_to_int  SHADOW_IN         => 1;
code   :            shadow_style_to_int  SHADOW_OUT        => 2;
code   :            shadow_style_to_int  SHADOW_ETCHED_IN  => 3;
code   :            shadow_style_to_int  SHADOW_ETCHED_OUT => 4;
code   :        end;
code   :
code   :        #
code   :        fun position_to_int  POSITION_LEFT       => 0;
code   :            position_to_int      POSITION_RIGHT  => 1;
code   :            position_to_int      POSITION_TOP    => 2;
code   :            position_to_int      POSITION_BOTTOM => 3;
code   :        end;
code   :
code   :        #
code   :        fun bool_to_string bool
code   :            =
code   :            case bool
code   :              
code   :                 TRUE  => "TRUE";
code   :                 FALSE => "FALSE";
code   :            esac;
code   :
code   :
code   :
code   :        stipulate
code   :
code   :            exposure            =  1 <<  0;
code   :            pointer_motion      =  1 <<  1;
code   :            pointer_motion_hint =  1 <<  2;
code   :            button_motion       =  1 <<  3;
code   :            button1_motion      =  1 <<  4;
code   :            button2_motion      =  1 <<  5;
code   :            button3_motion      =  1 <<  6;
code   :            button_press        =  1 <<  7;
code   :            button_release      =  1 <<  8;
code   :            key_press           =  1 <<  9;
code   :            key_release         =  1 << 10;
code   :            enter_notify        =  1 << 11;
code   :            leave_notify        =  1 << 12;
code   :            focus_change        =  1 << 13;
code   :            structure           =  1 << 14;
code   :            property_change     =  1 << 15;
code   :            proximity_in        =  1 << 16;
code   :            proximity_out       =  1 << 17;
code   :            #
code   :
code   :        herein
code   :
code   :            #
code   :            fun events_to_int events
code   :                =
code   :                events_to_int' (events, 0)
code   :                where
code   :                    fun events_to_int' ([], result)
code   :                            =>
code   :                            result;
code   :
code   :                        events_to_int' (event ! events, result)
code   :                            =>
code   :                            case event
code   :
code   :                                 EXPOSURE_MASK            =>  events_to_int' (events, result | exposure            );
code   :                                 POINTER_MOTION_MASK      =>  events_to_int' (events, result | pointer_motion      );
code   :                                 POINTER_MOTION_HINT_MASK =>  events_to_int' (events, result | pointer_motion_hint );
code   :                                 BUTTON_MOTION_MASK       =>  events_to_int' (events, result | button_motion       );
code   :                                 BUTTON1_MOTION_MASK      =>  events_to_int' (events, result | button1_motion      );
code   :                                 BUTTON2_MOTION_MASK      =>  events_to_int' (events, result | button2_motion      );
code   :                                 BUTTON3_MOTION_MASK      =>  events_to_int' (events, result | button3_motion      );
code   :                                 BUTTON_PRESS_MASK        =>  events_to_int' (events, result | button_press        );
code   :                                 BUTTON_RELEASE_MASK      =>  events_to_int' (events, result | button_release      );
code   :                                 KEY_PRESS_MASK           =>  events_to_int' (events, result | key_press           );
code   :                                 KEY_RELEASE_MASK         =>  events_to_int' (events, result | key_release         );
code   :                                 ENTER_NOTIFY_MASK        =>  events_to_int' (events, result | enter_notify        );
code   :                                 LEAVE_NOTIFY_MASK        =>  events_to_int' (events, result | leave_notify        );
code   :                                 FOCUS_CHANGE_MASK        =>  events_to_int' (events, result | focus_change        );
code   :                                 STRUCTURE_MASK           =>  events_to_int' (events, result | structure           );
code   :                                 PROPERTY_CHANGE_MASK     =>  events_to_int' (events, result | property_change     );
code   :                                 PROXIMITY_IN_MASK        =>  events_to_int' (events, result | proximity_in        );
code   :                                 PROXIMITY_OUT_MASK       =>  events_to_int' (events, result | proximity_out       );
code   :                            esac;
code   :                    end; 
code   :                end; 
code   :        end;
code   :
code   :        #
code   :        fun update_policy_to_int  CONTINUOUS_UPDATES    =>  0;
code   :            update_policy_to_int  DISCONTINUOUS_UPDATES =>  1;
code   :            update_policy_to_int  DELAYED_UPDATES       =>  2;
code   :        end;
code   :




fn-name: set_widget_tree
fn-type: (Session, Widget) -> Void
declare: fn-doc

fn-name: make_session
fn-type: List( String ) -> Session
declare: fn-doc
url    : http://library.gnome.org/devel/gtk/stable/gtk-General.html#gtk-init

fn-name: main
fn-type: Session -> Void
declare: fn-doc
url    : http://library.gnome.org/devel/gtk/stable/gtk-General.html#gtk-main

fn-name: exit_main
fn-type: Session -> Void
declare: fn-doc
url    : http://library.gnome.org/devel/gtk/stable/gtk-General.html#gtk-exit

fn-name: make_dialog
fn-type: Session -> { dialog: Widget, vbox: Widget, action_area:  Widget }
declare: fn-doc
url    : http://library.gnome.org/devel/gtk/stable/GtkDialog.html#gtk-dialog-new

fn-name: set_easy_id
fn-type: (Session, String, Widget) -> Void
declare: fn-doc

fn-name: get_by_easy_id
fn-type: (Session, String) -> Widget
declare: fn-doc

fn-name: drop_easy_id
fn-type: (Session, String) -> Void
declare: fn-doc

fn-name: unref_object
fn-type: (Session, Widget) -> Void
declare: fn-doc
url    : http://library.gnome.org/devel/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref

fn-name: get_widget_allocation
fn-type: (Session, Widget) -> Allocation
declare: fn-doc

fn-name: get_window_pointer
fn-type: (Session, Widget) -> { x: Int, y: Int, modifiers:  List(Modifier) }
declare: fn-doc
url    : http://library.gnome.org/devel/gdk/unstable/gdk-Windows.html#gdk-window-get-pointer

fn-name: run_eventloop_once
fn-type: { session: Session, block_until_event: Bool } -> Bool
declare: fn-doc
url    : http://www.gtk.org/api/2.6/gtk/gtk-General.html#gtk-main-iteration-do

fn-name: run_eventloop_indefinitely
fn-type: Session -> Void
declare: fn-doc
url    : http://www.gtk.org/api/2.6/gtk/gtk-General.html#gtk-main

fn-name: quit_eventloop
fn-type: Session -> Void
declare: fn-doc
url    : http://www.gtk.org/api/2.6/gtk/gtk-General.html#gtk-main-quit






fn-name: make_window
lowcode: gtk_window_new( GTK_WINDOW_TOPLEVEL )
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkWindow.html#gtk-window-new    

fn-name: make_label
lowcode: gtk_label_new( /*label*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkLabel.html#gtk-label-new

fn-name: make_status_bar_context_id
lowcode: gtk_statusbar_get_context_id( GTK_STATUSBAR(/*status_bar*/w0), /*description*/s1)
fn-type: (Session, Widget, String) -> Int
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkStatusbar.html#gtk-statusbar-get-context-id

fn-name: make_menu
lowcode: gtk_menu_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkMenu.html#gtk-menu-new

# XXX BUGGO FIXME option menus are listed as deprecated
# in favor of combo boxes -- -- but the scrollbar example
# uses option menus.  Once I understand this stuff well
# enough to rewrite the example, should presumably phase
# out option menus.

fn-name: make_option_menu
lowcode: gtk_option_menu_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkOptionMenu.html#gtk-option-menu-new

fn-name: make_menu_bar
lowcode: gtk_menu_bar_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkMenuBar.html#gtk-menu-bar-new

fn-name: make_combo_box
lowcode: gtk_combo_box_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkComboBox.html

fn-name: make_text_combo_box
lowcode: gtk_combo_box_new_text ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkComboBox.html#gtk-combo-box-new-text

fn-name: make_frame
lowcode: gtk_frame_new (*/*label*/s0 ? /*label*/s0 : NULL)
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkFrame.html#gtk-frame-new

fn-name: make_button
lowcode: gtk_button_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#gtk-button-new

fn-name: make_button_with_label
lowcode: gtk_button_new_with_label( /*label*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#gtk-button-new-with-label

fn-name: make_button_with_mnemonic
lowcode: gtk_button_new_with_mnemonic( /*mnemonic_label*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#gtk-button-new-with-mnemonic

fn-name: make_toggle_button
lowcode: gtk_toggle_button_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkToggleButton.html#gtk-toggle-button-new

fn-name: make_toggle_button_with_label
lowcode: gtk_toggle_button_new_with_label( /*label*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkToggleButton.html#gtk-toggle-button-new-with-label

fn-name: make_toggle_button_with_mnemonic
lowcode: gtk_toggle_button_new_with_mnemonic( /*mnemonic_label*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkToggleButton.html#gtk-toggle-button-new-with-mnemonic

fn-name: make_check_button
lowcode: gtk_check_button_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkCheckButton.html#gtk-check-button-new

fn-name: make_check_button_with_label
lowcode: gtk_check_button_new_with_label ( /*label*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkCheckButton.html#gtk-check-button-new-with-label

fn-name: make_check_button_with_mnemonic
lowcode: gtk_check_button_new_with_mnemonic( /*mnemonic_label*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkCheckButton.html#gtk-check-button-new-with-mnemonic

fn-name: make_menu_item
lowcode: gtk_menu_item_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkMenuItem.html#gtk-menu-item-new

fn-name: make_menu_item_with_label
lowcode: gtk_menu_item_new_with_label( /*label*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkMenuItem.html#gtk-menu-item-new-with-label

fn-name: make_menu_item_with_mnemonic
lowcode: gtk_menu_item_new_with_mnemonic( /*mnemonic_label*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkMenuItem.html#gtk-menu-item-new-with-mnemonic

fn-name: make_first_radio_button
lowcode: gtk_radio_button_new (NULL)
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkRadioButton.html#gtk-radio-button-new

fn-name: make_next_radio_button
lowcode: gtk_radio_button_new_from_widget (GTK_RADIO_BUTTON(/*sib*/w0))
fn-type: (Session, Widget) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkRadioButton.html#gtk-radio-button-new-from-widget

fn-name: make_first_radio_button_with_label
lowcode: gtk_radio_button_new_with_label(NULL,/*label*/s0)
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkRadioButton.html#gtk-radio-button-new-with-label

fn-name: make_next_radio_button_with_label
lowcode: gtk_radio_button_new_with_label_from_widget ( GTK_RADIO_BUTTON(/*sib*/w0), /*label*/s1 )
fn-type: (Session, Widget, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkRadioButton.html#gtk-radio-button-new-with-label-from-widget

fn-name: make_first_radio_button_with_mnemonic
lowcode: gtk_radio_button_new_with_mnemonic(NULL,/*label*/s0)
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkRadioButton.html#gtk-radio-button-new-with-mnemonic

fn-name: make_next_radio_button_with_mnemonic
lowcode: gtk_radio_button_new_with_mnemonic_from_widget ( GTK_RADIO_BUTTON(/*sib*/w0), /*label*/s1 )
fn-type: (Session, Widget, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkRadioButton.html#gtk-radio-button-new-with-mnemonic-from-widget

fn-name: make_arrow
lowcode: gtk_arrow_new( int_to_arrow_direction(/*arrow_direction_to_int arrow_direction*/i0), int_to_shadow_style(/*shadow_style_to_int shadow_style*/i1) )
fn-type: (Session, Arrow_Direction, Shadow_Style) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkArrow.html#gtk-arrow-new
code   :
code   :         fun make_arrow (session: Session, arrow_direction, shadow_style)
code   :             =
code   :             d::make_arrow (session.subsession, arrow_direction_to_int arrow_direction, shadow_style_to_int shadow_style);

fn-name: set_arrow
lowcode: gtk_arrow_set( GTK_ARROW(/*arrow*/w0), int_to_arrow_direction(/*arrow_direction_to_int arrow_direction*/i1), int_to_shadow_style(/*shadow_style_to_int shadow_style*/i2) )
fn-type: (Session, Widget, Arrow_Direction, Shadow_Style) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkArrow.html#gtk-arrow-set
code   :
code   :        fun set_arrow (session: Session, arrow, arrow_direction, shadow_style)
code   :            =
code   :            d::set_arrow (session.subsession, arrow, arrow_direction_to_int arrow_direction, shadow_style_to_int shadow_style);


fn-name: make_horizontal_box
lowcode: gtk_hbox_new ( /*homogeneous*/b0, /*spacing*/i1 )
fn-type: (Session, Bool, Int)   ->   Widget 
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkHBox.html

fn-name: make_vertical_box
lowcode: gtk_vbox_new ( /*homogeneous*/b0, /*spacing*/i1 )
fn-type: (Session, Bool, Int)   ->   Widget 
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkVBox.html

fn-name: make_horizontal_button_box
lowcode: gtk_hbutton_box_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkHButtonBox.html#gtk-hbutton-box-new

fn-name: make_vertical_button_box
lowcode: gtk_vbutton_box_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkVButtonBox.html#gtk-vbutton-box-new

fn-name: make_table
lowcode: gtk_table_new ( /*rows*/i0, /*cols*/i1, /*homogeneous*/b2 )
fn-type: { session: Session,   rows: Int,   cols: Int,   homogeneous: Bool }   ->   Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/unstable/GtkTable.html#gtk-table-new

fn-name: make_event_box
lowcode: gtk_event_box_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkEventBox.html

fn-name: make_image_from_file
lowcode: gtk_image_new_from_file( /*filename*/s0 )
fn-type: (Session, String) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkImage.html

fn-name: make_horizontal_separator
lowcode: gtk_hseparator_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkHSeparator.html#gtk-hseparator-new

fn-name: make_vertical_separator
lowcode: gtk_vseparator_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkHSeparator.html#gtk-vseparator-new

fn-name: make_layout_container
lowcode: gtk_layout_new (NULL, NULL)
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkLayout.html

fn-name: layout_put
lowcode: gtk_layout_put( GTK_LAYOUT(/*layout*/w0), GTK_WIDGET(/*kid*/w1), /*x*/i2, /*y*/i3)
fn-type: { session: Session,  layout: Widget,  kid: Widget,  x: Int,  y: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkLayout.html#gtk-layout-put

fn-name: layout_move
lowcode: gtk_layout_move( GTK_LAYOUT(/*layout*/w0), GTK_WIDGET(/*kid*/w1), /*x*/i2, /*y*/i3)
fn-type: { session: Session, layout: Widget,  kid: Widget,  x: Int,  y: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkLayout.html#gtk-layout-move


fn-name: make_fixed_container
lowcode: gtk_fixed_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkFixed.html#gtk-fixed-new

fn-name: fixed_put
lowcode: gtk_fixed_put(   GTK_FIXED(/*layout*/w0), GTK_WIDGET(/*kid*/w1), /*x*/i2, /*y*/i3)
fn-type: { session: Session, layout: Widget,  kid: Widget,  x: Int,  y: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkFixed.html#gtk-fixed-put

fn-name: fixed_move
lowcode: gtk_fixed_move(  GTK_FIXED(/*layout*/w0), GTK_WIDGET(/*kid*/w1), /*x*/i2, /*y*/i3)
fn-type: { session: Session, layout: Widget,  kid: Widget,  x: Int,  y: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkFixed.html#gtk-fixed-move

 

fn-name: make_adjustment
lowcode: (GtkWidget*) gtk_adjustment_new ( /*value*/f0, /*lower*/f1, /*upper*/f2, /*step_increment*/f3, /*page_increment*/f4, /*page_size*/f5 )
doc-fn : gtk_adjustment_new
fn-type: { session: Session,   value: Float,   lower: Float,   upper: Float,   step_increment: Float,   page_increment: Float,   page_size: Float }   ->   Widget 
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html


fn-name: make_viewport
lowcode: gtk_viewport_new( GTK_ADJUSTMENT(/*null_or_widget_to_int horizontal_adjustment*/w0), GTK_ADJUSTMENT(/*null_or_widget_to_int vertical_adjustment*/w1) )
fn-type: { session: Session, horizontal_adjustment: Null_Or(Widget), vertical_adjustment: Null_Or(Widget) } -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkViewport.html#gtk-viewport-new

fn-name: make_scrolled_window
lowcode: gtk_scrolled_window_new( GTK_ADJUSTMENT(/*null_or_widget_to_int horizontal_adjustment*/w0), GTK_ADJUSTMENT(/*null_or_widget_to_int vertical_adjustment*/w1) )
fn-type: { session: Session, horizontal_adjustment: Null_Or(Widget), vertical_adjustment: Null_Or(Widget) } -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkScrolledWindow.html#gtk-scrolled-window-new


fn-name: make_horizontal_ruler
lowcode: gtk_hruler_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkHRuler.html#gtk-hruler-new

fn-name: make_vertical_ruler
lowcode: gtk_vruler_new ()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkVRuler.html#gtk-vruler-new

fn-name: make_vertical_scrollbar
lowcode: gtk_vscrollbar_new( GTK_ADJUSTMENT(/*null_or_widget_to_int adjustment*/w0) )
fn-type: (Session, Null_Or(Widget)) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkVScrollbar.html#gtk-vscrollbar-new

fn-name: make_horizontal_scrollbar
lowcode: gtk_hscrollbar_new( GTK_ADJUSTMENT(/*null_or_widget_to_int adjustment*/w0) )
fn-type: (Session, Null_Or(Widget)) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkVScrollbar.html#gtk-hscrollbar-new

fn-name: make_vertical_scale
lowcode: gtk_vscale_new( GTK_ADJUSTMENT(/*null_or_widget_to_int adjustment*/w0) )
fn-type: (Session, Null_Or(Widget)) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkVScale.html#gtk-vscale-new

fn-name: make_horizontal_scale
lowcode: gtk_hscale_new( GTK_ADJUSTMENT(/*null_or_widget_to_int adjustment*/w0) )
fn-type: (Session, Null_Or(Widget)) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkHScale.html#gtk-hscale-new


fn-name: make_vertical_scale_with_range
lowcode: gtk_vscale_new_with_range( /*min*/f0, /*max*/f1, /*step*/f2 )
fn-type: { session: Session, min: Float, max: Float, step: Float } -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkVScale.html#gtk-vscale-new-with-range

fn-name: make_horizontal_scale_with_range
lowcode: gtk_hscale_new_with_range( /*min*/f0, /*max*/f1, /*step*/f2 )
fn-type: { session: Session, min: Float, max: Float, step: Float } -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkHScale.html#gtk-hscale-new-with-range

fn-name: make_drawing_area
lowcode: gtk_drawing_area_new()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkDrawingArea.html#gtk-drawing-area-new

fn-name: make_pixmap
lowcode: (GtkWidget*) gdk_pixmap_new( GDK_DRAWABLE(/*window*/w0), /*wide*/i1, /*high*/i2, -1)
doc-fn : gdk_pixmap_new
fn-type: { session: Session, window: Widget, wide: Int, high: Int } -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkPixmap.html#gtk-pixmap-new

fn-name: make_status_bar
lowcode: gtk_statusbar_new()
fn-type: Session -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkStatusbar.html

fn-name: push_text_on_status_bar
lowcode: gtk_statusbar_push( GTK_STATUSBAR(/*status_bar*/w0), /*context*/i1, /*text*/s2)
fn-type: (Session, Widget, Int, String) -> Int
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkStatusbar.html#gtk-statusbar-push

fn-name: pop_text_off_status_bar
lowcode: gtk_statusbar_pop(GTK_STATUSBAR(/*status_bar*/w0), /*context*/i1)
fn-type: (Session, Widget, Int) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkStatusbar.html#gtk-statusbar-pop

fn-name: remove_text_from_status_bar
lowcode: gtk_statusbar_remove( GTK_STATUSBAR(/*status_bar*/w0), /*context*/i1, /*message*/i2)
fn-type: { session: Session,   status_bar: Widget,   context: Int,   message: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkStatusbar.html#gtk-statusbar-remove

fn-name: pack_box
lowcode: if (!/*pack_to_int pack*/i2)  gtk_box_pack_start(   GTK_BOX(/*box*/w0), GTK_WIDGET(/*kid*/w1), /*expand*/b3, /*fill*/b4, /*padding*/i5 ); else gtk_box_pack_end( GTK_BOX(/*box*/w0), GTK_WIDGET(/*kid*/w1), /*expand*/b3, /*fill*/b4, /*padding*/i5 )
doc-fn : gtk_box_pack_start
fn-type: { session: Session,   box: Widget,   kid: Widget,   pack: Pack_From,   expand: Bool,   fill: Bool,   padding: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkBox.html#gtk-box-pack-start

fn-name: menu_shell_append
lowcode: gtk_menu_shell_append( GTK_MENU_SHELL(/*menu*/w0), GTK_WIDGET(/*kid*/w1))
fn-type: { session: Session,   menu: Widget,   kid: Widget } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkMenuShell.html#gtk-menu-shell-append

fn-name: menu_bar_append
lowcode: gtk_menu_bar_append( GTK_MENU_SHELL(/*menu*/w0), GTK_WIDGET(/*kid*/w1))
fn-type: { session: Session,   menu: Widget,   kid: Widget } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkMenuBar.html#gtk-menu-bar-append

fn-name: append_text_to_combo_box
lowcode: gtk_combo_box_append_text( GTK_COMBO_BOX(/*combo_box*/w0), /*text*/s1)
fn-type: (Session, Widget, String) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/unstable/GtkComboBox.html#gtk-combo-box-append-text

fn-name: set_option_menu_menu
lowcode: gtk_option_menu_set_menu( GTK_OPTION_MENU(/*option_menu*/w0), GTK_WIDGET(/*menu*/w1) )
fn-type: { session: Session,   option_menu: Widget,   menu: Widget } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkOptionMenu.html#gtk-option-menu-set-menu

fn-name: set_text_tooltip_on_widget
lowcode: gtk_widget_set_tooltip_text( GTK_WIDGET(/*widget*/w0), /*text*/s1)
fn-type: (Session, Widget, String) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/2.11/GtkWidget.html#gtk-widget-set-tooltip-text

fn-name: set_ruler_metric
lowcode: gtk_ruler_set_metric( GTK_RULER(/*ruler*/w0), int_to_metric(/*metric_to_int metric*/i1))
fn-type: (Session, Widget, Metric) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkRuler.html#gtk-ruler-set-metric

fn-name: set_ruler_range
lowcode: gtk_ruler_set_range( GTK_RULER(/*ruler*/w0), /*lower*/f1, /*upper*/f2, /*position*/f3, /*max_size*/f4)
fn-type: { session: Session,   ruler: Widget,   lower: Float,   upper: Float,   position: Float,   max_size: Float } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkRuler.html#gtk-ruler-set-range

fn-name: set_scrollbar_policy
lowcode: gtk_scrolled_window_set_policy( GTK_SCROLLED_WINDOW(/*window*/w0), int_to_policy(/*scrollbar_policy_to_int horizontal_scrollbar*/i1), int_to_policy(/*scrollbar_policy_to_int vertical_scrollbar*/i2) )
fn-type: { session: Session,   window: Widget,   horizontal_scrollbar: Scrollbar_Policy,   vertical_scrollbar: Scrollbar_Policy } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkScrolledWindow.html#gtk-scrolled-window-set-policy

fn-name: draw_rectangle
lowcode: gdk_draw_rectangle(   GDK_DRAWABLE(/*drawable*/w0), GDK_GC(/*gcontext*/w1), /*filled*/b2, /*x*/i3, /*y*/i4, /*wide*/i5, /*high*/i6)
fn-type: { session: Session,   drawable: Widget,   gcontext: Widget,   filled:	Bool,   x: Int,   y: Int,   wide: Int,   high: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gdk/stable/gdk-Drawing-Primitives.html#gdk-draw-rectangle

fn-name: draw_drawable
lowcode: gdk_draw_drawable(   GDK_DRAWABLE(/*drawable*/w0), GDK_GC(/*gcontext*/w1), GDK_DRAWABLE(/*from*/w2), /*from_x*/i3, /*from_y*/i4, /*to_x*/i5, /*to_y*/i6, /*wide*/i7, /*high*/i8)
fn-type: { session: Session,   drawable: Widget,   gcontext: Widget,   from: Widget,   from_x:	Int,   from_y: Int,   to_x: Int,   to_y: Int,   wide: Int,   high: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gdk/stable/gdk-Drawing-Primitives.html#gdk-draw-drawable
	  
fn-name: queue_redraw
lowcode: gtk_widget_queue_draw_area( GTK_WIDGET(/*widget*/w0), /*x*/i1, /*y*/i2, /*wide*/i3, /*high*/i4)
fn-type: { session: Session,   widget:	Widget,   x: Int,   y: Int,   wide: Int,   high: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkWidget.html#gtk-widget-queue-draw-area


    # Respectively simulate
    # mouse button press,
    # release, click, or
    # cursor entering/leaving
    # widget:
    #
fn-name: press_button
lowcode: gtk_button_pressed(  GTK_BUTTON(/*widget*/w0) )
fn-type: (Session, Widget) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#gtk-button-pressed

fn-name: release_button
lowcode: gtk_button_released( GTK_BUTTON(/*widget*/w0) )
fn-type: (Session, Widget) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#gtk-button-released

fn-name: click_button
lowcode: gtk_button_clicked(  GTK_BUTTON(/*widget*/w0) )
fn-type: (Session, Widget) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#gtk-button-clicked

fn-name: enter_button
lowcode: gtk_button_enter(    GTK_BUTTON(/*widget*/w0) )
fn-type: (Session, Widget) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#gtk-button-enter

fn-name: leave_button
lowcode: gtk_button_leave(    GTK_BUTTON(/*widget*/w0) )
fn-type: (Session, Widget) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#gtk-button-leave 

fn-name: show_widget
lowcode: gtk_widget_show( /*widget*/w0 )
fn-type: (Session, Widget) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkWidget.html#gtk-widget-show

fn-name: show_widget_tree
lowcode: gtk_widget_show_all( /*widget*/w0 )
fn-type: (Session, Widget) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkWidget.html#gtk-widget-show-all

fn-name: destroy_widget
lowcode: gtk_widget_destroy( /*widget*/w0 )
fn-type: (Session, Widget) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkWidget.html#gtk-widget-destroy

#    destroy_widget_tree:          Session          -> Void;


fn-name: emit_changed_signal
lowcode: g_signal_emit_by_name( GTK_OBJECT(/*widget*/w0), "changed")
fn-type: (Session, Widget)   -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gobject/stable/gobject-Signals.html#g-signal-emit-by-name

# http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment-changed

fn-name: pop_up_combo_box
lowcode: gtk_combo_box_popup(   GTK_COMBO_BOX(/*widget*/w0))
fn-type: (Session, Widget)   -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/unstable/GtkComboBox.html#gtk-combo-box-popup

fn-name: pop_down_combo_box
lowcode: gtk_combo_box_popdown( GTK_COMBO_BOX(/*widget*/w0))
fn-type: (Session, Widget) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/unstable/GtkComboBox.html#gtk-combo-box-popdown

fn-name: set_combo_box_title
lowcode: gtk_combo_box_set_title( GTK_COMBO_BOX(/*widget*/w0), /*title*/s1)
fn-type: (Session, Widget, String)   -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkComboBox.html#gtk-combo-box-set-title

fn-name: set_window_title
lowcode: gtk_window_set_title( GTK_WINDOW(/*window*/w0), /*title*/s1)
fn-type: (Session, Widget, String) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkWindow.html#gtk-window-set-title

fn-name: set_window_default_size
lowcode: gtk_window_set_default_size( GTK_WINDOW(/*widget*/w0), /*wide*/i1, /*high*/i2)
fn-type: (Session, Widget, (Int,Int)) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkWindow.html#gtk-window-set-default-size
code   :        fun set_window_default_size (session: Session, widget, (wide, high))
code   :            =
code   :            d::set_window_default_size (session.subsession, widget, wide, high);

fn-name: set_minimum_widget_size
lowcode: gtk_widget_set_size_request( GTK_WIDGET(/*widget*/w0), /*wide*/i1, /*high*/i2)
fn-type: (Session, Widget, (Int,Int)) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkWidget.html#gtk-widget-set-size-request
code   :        fun set_minimum_widget_size (session: Session, widget, (wide, high))
code   :            =
code   :            d::set_minimum_widget_size (session.subsession, widget, wide, high);

fn-name: set_border_width
lowcode: gtk_container_set_border_width(GTK_CONTAINER(/*widget*/w0), /*width*/i1)
fn-type: (Session, Widget, Int) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkContainer.html#gtk-container-border-width

fn-name: set_event_box_visibility
lowcode: gtk_event_box_set_visible_window(GTK_EVENT_BOX(/*event_box*/w0),/*visibility*/b1)
fn-type: (Session, Widget, Bool) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkEventBox.html#gtk-event-box-set-visible-window

fn-name: set_widget_alignment
lowcode: gtk_misc_set_alignment(GTK_MISC(/*widget*/w0), /*x*/f1, /*y*/f2)
fn-type: { session: Session, widget: Widget, x: Float, y: Float } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkMisc.html#gtk-misc-set-alignment

fn-name: set_widget_events
lowcode: gtk_widget_set_events( GTK_WIDGET(/*widget*/w0), int_to_event_mask(/*events_to_int events*/i1))
fn-type: (Session, Widget, List( Event_Mask )) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkWidget.html#gtk-widget-set-events

fn-name: set_widget_name
lowcode: gtk_widget_set_name( GTK_WIDGET(/*widget*/w0), /*name*/s1)
fn-type: (Session, Widget, String) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/unstable/GtkWidget.html#gtk-widget-set-name

	
fn-name: set_label_justification
lowcode: gtk_label_set_justify( GTK_LABEL(/*label*/w0), int_to_justification(/*justification_to_int justification*/i1))
fn-type: (Session, Widget, Justification) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkLabel.html#gtk-label-set-justify

fn-name: set_label_line_wrapping
lowcode: gtk_label_set_line_wrap( GTK_LABEL(/*label*/w0), /*wrap_lines*/b1)
fn-type: (Session, Widget, Bool) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkLabel.html#gtk-label-set-line-wrap

fn-name: set_label_underlines
lowcode: gtk_label_set_pattern( GTK_LABEL(/*label*/w0), /*underlines*/s1)
fn-type: (Session, Widget, String) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkLabel.html#gtk-label-set-pattern

    # 2008-03-05 CrT: Underlining seems nonfunctional; At present I lack time or interest to track down why.


fn-name: set_scale_value_position
lowcode: gtk_scale_set_value_pos( GTK_SCALE(/*scale*/w0), int_to_position(/*position_to_int position*/i1))
fn-type: (Session, Widget, Position_Type) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/gtk-Standard-Enumerations.html#GtkPositionType

fn-name: set_draw_scale_value
lowcode: gtk_scale_set_draw_value( GTK_SCALE(/*scale*/w0), /*draw_value*/b1)
fn-type: (Session, Widget, Bool) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkScale.html#gtk-scale-set-draw-value

fn-name: get_scale_value_digits_shown
lowcode: gtk_scale_get_digits( GTK_SCALE(/*scale*/w0) )
fn-type: (Session, Widget) -> Int
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkScale.html#gtk-scale-get-digits

fn-name: set_scale_value_digits_shown
lowcode: gtk_scale_set_digits( GTK_SCALE(/*scale*/w0), /*digits*/i1)
fn-type: (Session, Widget, Int)  -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkScale.html#gtk-scale-set-digits

fn-name: set_range_update_policy
lowcode: gtk_range_set_update_policy( GTK_RANGE(/*scale*/w0), /*policy*/int_to_range_update_policy(/*update_policy_to_int policy*/i1))
fn-type: (Session, Widget, Update_Policy) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkRange.html#gtk-range-set-update-policy

fn-name: get_toggle_button_state
lowcode: gtk_toggle_button_get_active( GTK_TOGGLE_BUTTON(/*toggle_button*/w0) )
fn-type: (Session, Widget) -> Bool
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkToggleButton.html#gtk-toggle-button-get-active

fn-name: set_toggle_button_state
lowcode: gtk_toggle_button_set_active( GTK_TOGGLE_BUTTON(/*toggle_button*/w0), /*state*/b1 != 0 )
fn-type: (Session, Widget, Bool) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkToggleButton.html#gtk-toggle-button-set-active

fn-name: get_adjustment_value
lowcode: gtk_adjustment_get_value( GTK_ADJUSTMENT(/*adjustment*/w0) )
fn-type: (Session, Widget) -> Float
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#gtk-adjustment-get-value

fn-name: set_adjustment_value
lowcode: gtk_adjustment_set_value( GTK_ADJUSTMENT(/*adjustment*/w0), /*value*/f1)
fn-type: (Session, Widget, Float) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#gtk-adjustment-set-value

# 2009-12-08 CrT: The following eight functions are commented out
#                 because they are only supported on Gtk 2.14 or later
#                 and at the moment Debian stable is apparently only
#                 up to Gtk 2.12.  (Thanks to aurele for pointing this out.)

# fn-name: get_adjustment_lower
# lowcode: gtk_adjustment_get_lower( GTK_ADJUSTMENT(/*adjustment*/w0) )
# fn-type: (Session, Widget) -> Float
# declare: plain-fn
# url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment--lower

# fn-name: set_adjustment_lower
# lowcode: gtk_adjustment_set_lower( GTK_ADJUSTMENT(/*adjustment*/w0), /*lower*/f1 )
# fn-type: (Session, Widget, Float) -> Void
# declare: plain-fn
# url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment--lower

# fn-name: get_adjustment_upper
# lowcode: gtk_adjustment_get_upper( GTK_ADJUSTMENT(/*adjustment*/w0) )
# fn-type: (Session, Widget) -> Float
# declare: plain-fn
# url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment--upper

# fn-name: set_adjustment_upper
# lowcode: gtk_adjustment_set_upper( GTK_ADJUSTMENT(/*adjustment*/w0), /*upper*/f1 )
# fn-type: (Session, Widget, Float) -> Void
# declare: plain-fn
# url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment--upper

# fn-name: get_adjustment_page_size
# lowcode: gtk_adjustment_get_page_size( GTK_ADJUSTMENT(/*adjustment*/w0) )
# fn-type: (Session, Widget) -> Float
# declare: plain-fn
# url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment--page-size

# fn-name: get_adjustment_page_increment
# lowcode: gtk_adjustment_get_page_increment( GTK_ADJUSTMENT(/*adjustment*/w0) )
# fn-type: (Session, Widget) -> Float
# declare: plain-fn
# url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment--page-increment

# fn-name: set_adjustment_page_size
# lowcode: gtk_adjustment_set_page_size( GTK_ADJUSTMENT(/*adjustment*/w0), /*page_size*/f1 )
# fn-type: (Session, Widget, Float) -> Void
# declare: plain-fn
# url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment--page-size

# fn-name: set_adjustment_page_increment
# lowcode: gtk_adjustment_set_page_increment( GTK_ADJUSTMENT(/*adjustmeht*/w0), /*page_increment*/f1 )
# fn-type: (Session, Widget, Float) -> Void
# declare: plain-fn
# url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment--page-increment

fn-name: get_white_graphics_context
lowcode: /*widget*/w0->style->white_gc
doc-fn : gtk_widget->style->white_gc
fn-type: (Session, Widget) -> Widget
declare: plain-fn

fn-name: get_black_graphics_context
lowcode: /*widget*/w0->style->black_gc
doc-fn : gtk_widget->style->black_gc
fn-type: (Session, Widget) -> Widget
declare: plain-fn

fn-name: get_current_foreground_graphics_context
lowcode: w0->style->fg_gc[ GTK_WIDGET_STATE(/*widget*/w0) ]
doc-fn : gtk_widget->style->fg_gc[ GTK_WIDGET_STATE(gtk_widget) ]
fn-type: (Session, Widget) -> Widget
declare: plain-fn

fn-name: get_current_background_graphics_context
lowcode: w0->style->bg_gc[ GTK_WIDGET_STATE(/*widget*/w0) ]
doc-fn : gtk_widget->style->bg_gc[ GTK_WIDGET_STATE(gtk_widget) ]
fn-type: (Session, Widget) -> Widget
declare: plain-fn

fn-name: get_widget_window
lowcode: /*widget*/w0->window
doc-fn : gtk_widget->window
fn-type: (Session, Widget) -> Widget
declare: plain-fn

#    get_widget_allocation:			(Session, Widget) -> Allocation;

fn-name: add_kid
lowcode: gtk_container_add( GTK_CONTAINER(/*mom*/w0), GTK_WIDGET(/*kid*/w1))
fn-type: { session: Session,   mom: Widget,   kid: Widget } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkContainer.html#gtk-container-add

    # NB: To make non-scrolling widgets scroll, this
    # call implicitly inserts a Viewport.  That will
    # foul things up if the kid already has native 
    # scrolling capabilities: in that case, don't 
    # use this call, instead use the vanilla
    # 'add_kid' call:
    #
fn-name: add_scrolled_window_kid
lowcode: gtk_scrolled_window_add_with_viewport( GTK_SCROLLED_WINDOW(/*window*/w0), GTK_WIDGET(/*kid*/w1) )
fn-type: { session: Session,   window: Widget,   kid: Widget } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkScrolledWindow.html#gtk-scrolled-window-add-with-viewport


fn-name: add_table_kid
lowcode: gtk_table_attach_defaults( GTK_TABLE(/*table*/w0), GTK_WIDGET(/*kid*/w1), /*left*/i2, /*right*/i3, /*top*/i4, /*bottom*/i5 )
fn-type: { session: Session,   table: Widget,   kid: Widget,   left: Int,   right: Int,   top: Int,   bottom: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkTable.html#gtk-table-attach-defaults


fn-name: add_table_kid'
lowcode: gtk_table_attach( GTK_TABLE(/*table*/w0), GTK_WIDGET(/*kid*/w1), /*left*/i2, /*right*/i3, /*top*/i4, /*bottom*/i5, /*sum_table_attach_options xoptions*/i6, /*sum_table_attach_options yoptions*/i7, /*xpadding*/i8, /*ypadding*/i9 )
fn-type: { session: Session,   table: Widget,   kid: Widget,   left: Int,   right: Int,   top: Int,   bottom: Int,   xoptions: List( Table_Attach_Option ),   yoptions: List( Table_Attach_Option ),   xpadding: Int,   ypadding: Int }   ->   Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkTable.html#gtk-table-attach


fn-name: get_viewport_vertical_adjustment
lowcode: gtk_viewport_get_vadjustment( GTK_VIEWPORT(/*viewport*/w0) )
fn-type: (Session, Widget) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkViewport.html#gtk-viewport-get-vadjustment

fn-name: get_viewport_horizontal_adjustment
lowcode: gtk_viewport_get_hadjustment( GTK_VIEWPORT(/*viewport*/w0) )
fn-type: (Session, Widget) -> Widget
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkViewport.html#gtk-viewport-get-hadjustment

fn-name: set_table_row_spacing
lowcode: gtk_table_set_row_spacing( GTK_TABLE(/*table*/w0), /*row*/i1, /*spacing*/i2)
fn-type: { session: Session, table: Widget, row: Int, spacing: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkTable.html#gtk-table-set-row-spacing

fn-name: set_table_col_spacing
lowcode: gtk_table_set_col_spacing( GTK_TABLE(/*table*/w0), /*col*/i1, /*spacing*/i2)
fn-type: { session: Session, table: Widget, col: Int, spacing: Int } -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkTable.html#gtk-table-set-col-spacing


fn-name: set_table_row_spacings
lowcode: gtk_table_set_row_spacings( GTK_TABLE(/*table*/w0), /*spacing*/i1)
fn-type: (Session, Widget, Int) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkTable.html#gtk-table-set-row-spacings

fn-name: set_table_col_spacings
lowcode: gtk_table_set_col_spacings( GTK_TABLE(/*table*/w0), /*spacing*/i1)
fn-type: (Session, Widget, Int) -> Void
declare: plain-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkTable.html#gtk-table-set-col-spacings




declare: mythryl-code
code   :        #
code   :        fun note_void_callback (session: Session, callback, callback_id)
code   :            =
code   :            session.void_callback_map
code   :                :=
code   :                int_map::set (*session.void_callback_map, callback_id, callback);
code   :
code   :
code   :        #
code   :        fun note_bool_callback (session: Session, bool_callback, callback_id)
code   :            =
code   :            session.bool_callback_map
code   :                :=
code   :                int_map::set (*session.bool_callback_map, callback_id, bool_callback);
code   :
code   :
code   :        #
code   :        fun note_float_callback (session: Session, float_callback, callback_id)
code   :            =
code   :            session.float_callback_map
code   :                :=
code   :                int_map::set (*session.float_callback_map, callback_id, float_callback);
code   :
code   :
code   :        #
code   :        fun note_button_event_callback (session: Session, button_callback, callback_id)
code   :            =
code   :            session.button_event_callback_map
code   :                :=
code   :                int_map::set (*session.button_event_callback_map, callback_id, button_callback);
code   :
code   :
code   :        #
code   :        fun note_motion_event_callback (session: Session, motion_callback, callback_id)
code   :            =
code   :            session.motion_event_callback_map
code   :                :=
code   :                int_map::set (*session.motion_event_callback_map, callback_id, motion_callback);
code   :
code   :
code   :        #
code   :        fun note_key_event_callback (session: Session, key_callback, callback_id)
code   :            =
code   :            session.key_event_callback_map
code   :                :=
code   :                int_map::set (*session.key_event_callback_map, callback_id, key_callback);
code   :
code   :
code   :        #
code   :        fun note_expose_event_callback (session: Session, expose_callback, callback_id)
code   :            =
code   :            session.expose_event_callback_map
code   :                :=
code   :                int_map::set (*session.expose_event_callback_map, callback_id, expose_callback);
code   :
code   :
code   :        #
code   :        fun note_configure_event_callback (session: Session, configure_callback, callback_id)
code   :            =
code   :            session.configure_event_callback_map
code   :                :=
code   :                int_map::set (*session.configure_event_callback_map, callback_id, configure_callback);
code   :
code   :
code   : 
code   : 
code   :    # Respectively set handler
code   :    # for event "clicked",
code   :    # "pressed", "released",
code   :    # "enter", "leave",
code   :    # "activate", "toggled"
code   :    # or "value_changed" :
code   :    #
code   :    # Here "s w c" == "session widget callback":
code   :    #

fn-name: set_clicked_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#GtkButton-clicked

fn-name: set_pressed_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#GtkButton-pressed

fn-name: set_release_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#GtkButton-released

fn-name: set_enter_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#GtkButton-enter

fn-name: set_leave_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkButton.html#GtkButton-leave


fn-name: set_activate_callback
lowtype: GTK_MENU_ITEM
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkMenuItem.html#GtkMenuItem-activate



fn-name: set_destroy_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_realize_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn


declare: mythryl-code
code   : 
code   : 
code   :    # Handlers for X events :		http://library.gnome.org/devel/gtk-tutorial/stable/x182.html
code   :    #

fn-name: set_button_press_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Button_Event_Callback -> Void
declare: callback-fn

fn-name: set_button_release_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_scroll_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_motion_notify_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Motion_Event_Callback -> Void
declare: callback-fn

fn-name: set_delete_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_expose_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Expose_Event_Callback -> Void
declare: callback-fn

fn-name: set_key_press_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Key_Event_Callback -> Void
declare: callback-fn

fn-name: set_key_release_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_enter_notify_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_leave_notify_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_configure_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Configure_Event_Callback -> Void
declare: callback-fn

fn-name: set_focus_in_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_focus_out_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_map_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_unmap_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_property_notify_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_selection_clear_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_selection_request_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_selection_notify_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_proximity_in_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_proximity_out_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_client_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_no_expose_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

fn-name: set_window_state_event_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Void_Callback -> Void
declare: callback-fn

declare: mythryl-code
code   : 
code   :    # Callbacks taking a boolean argument:
code   :    #

fn-name: set_toggled_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Bool_Callback -> Void
declare: callback-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkToggleButton.html#GtkToggleButton-toggled

declare: mythryl-code
code   : 
code   :    # Callbacks taking a boolean argument:
code   :    #

fn-name: set_value_changed_callback
lowtype: G_OBJECT
fn-type: Session -> Widget -> Float_Callback -> Void
declare: callback-fn
url    : http://library.gnome.org/devel/gtk/stable/GtkAdjustment.html#GtkAdjustment-value-changed
	


# NB: Default tab-stops are every 8 chars in emacsen,
#     so by having the type-field colongs in column 7
#     in this file we ensure that tab-containing code
#     in code: and type: fields looks the same in this
#     file and in its destination file.



## Code by Jeff Prothero : Copyright (c) 2010,
## released under Gnu Public Licence version 3.
