/*
 * Fix two definitions in PolyML's OS class by overloading the 
 * class with the appropriate definitions.
 *
 * Has to be done in a separate file, so we can reload this conditionally;
 * this file is only read if the valued fixedOSforPolyMLbySmlTk doesn't exist. 
 */

package os {

  include os;

  package file_system {
    include file_system;
    fun read_directory_entry d= null_or::the_else (file_system::read_directory_entry d, "")
  };

  package path {

    include path;
    fun make_relative (p, r)= path::make_relative { path=p, relative_to=r }
  };

};

fixedOSforPolyMLbySmlTk = (); #  need idiosyncratic name here 




