#  Methods for adding items to containers and boxes 
local use Gtk GtkGadgetsBasis in
package + :
api

       #  Add a widget to a container 
   my add:   GtkWidget( Y ) ->  message( GtkContainer( X ) )
   my add_list:   List( GtkWidget( Y ) ) ->  message( GtkContainer( X ) )

       #  gtk_box_pack_start 
   my pack_start:  Bool * Bool * mlrep::unsigned::word -> 
                    GtkWidget( X ) ->  message( GtkBox( Y ) )

       #  Abbreviation as above 
   my pack:  Bool * Bool * mlrep::unsigned::word -> 
                 GtkWidget( X ) -> message( GtkBox( Y ) )

       #  gtk_box_pack_end 
   my pack_end:   Bool * Bool * mlrep::unsigned::word -> 
                    GtkWidget( X ) -> message( GtkBox( Y ) )

       #  List versions of above; apply a pack message to everything 
   my pack_list:  Bool * Bool * mlrep::unsigned::word -> 
                   List( GtkWidget( X ) ) -> message( GtkBox( Y ) )

   my pack_start_list:  Bool * Bool * mlrep::unsigned::word -> 
                       List( GtkWidget( X ) ) ->  message( GtkBox( Y ) )

   my pack_end_list:   Bool * Bool * mlrep::unsigned::word -> 
                     List( GtkWidget( X ) ) ->  message( GtkBox( Y ) )

       #  Create and call add 

   my label:   String -> List( message( GtkLabel(  base ) ) ) -> message( GtkContainer( X ) )
   my l:       String -> List( message( GtkLabel(  base ) ) ) -> message( GtkContainer( X ) )
   my button:  String -> List( message( GtkButton( base ) ) ) -> message( GtkContainer( X ) )
   my b:       String -> List( message( GtkButton( base ) ) ) -> message( GtkContainer( X ) )

   my vbox:   Bool * mlrep::signed::Int -> List( message( GtkVBox( base ) ) ) ->  message( GtkContainer( X ) ) 
   my hbox:   Bool * mlrep::signed::Int -> List( message( GtkHBox( base ) ) ) ->  message( GtkContainer( X ) )

   my hsep:   message(  GtkContainer(  X ) )
   my vsep:   message(  GtkContainer(  X ) )

   my menu_item:      String -> List( message( GtkMenuItem( base ) ) ) ->  message( GtkMenu(     X ) )
   my menu_bar_item:  String -> List( message( GtkMenuItem( base ) ) ) ->  message( GtkMenuBar ( X ) )

   my submenu:   List( message( GtkMenu( base ) ) ) ->  message( GtkMenuItem( Y ) )
end
{

   use GtkGadgets 

   #  Container messages 
   add = gtk_container_add::m
   fun add_list x = every add x

   #  Box messages 
   fun pack_start (x, y, z) child = gtk_box_pack_start::m (child, x, y, z)
   pack = pack_start
   fun pack_end (x, y, z) child = gtk_box_pack_end::m (child, x, y, z)

   fun pack_start_list x = every (pack_start x)
   pack_list = pack_start_list
   fun pack_end_list x = every (pack_end x)

   #  Create and add 
   fun vbox init messages = add (@@@.vbox init messages)
   fun hbox init messages = add (@@@.hbox init messages)
   fun hsep x = add (gtk_hseparator_new::f ()) x 
   fun vsep x = add (gtk_vseparator_new::f ()) x
   fun label l messages = add (@@@.l l messages)
   l       = label
   fun button l messages = add (@@@.b l messages)
   b       = button

   menu_item = Menu::add_item
   menu_bar_item = MenuBar::add_item
   submenu = Menu::submenu

}
end #  local 
