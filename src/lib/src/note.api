## note.api
#
#  User definable annotations.
#
#  Note: annotations will henceforth be used
#  extensively in all parts of the optimizer.
#
#  Idea is stolen from Stephen Weeks
# 
#  -- Allen Leung

# Compiled by:
#     src/lib/src/lib7.make6

api Note {
   
    Note; 
    Notes = List( Note );

    exception NO_PROPERTY;

    Property( X )
        =
        { get:       Notes -> Null_Or( X ),
          peek:      Note  -> Null_Or( X ),
          lookup:    Notes -> X,
          contains:  Notes -> Bool,
          set:       (X, Notes) -> Notes,
          rmv:       Notes -> Notes,
          create:    X -> Note
        };

    Flag = Property( Void );


    # Generate a new annotation.
    # Client should provide a pretty printing function.

    new:  Null_Or( X -> String ) -> Property( X );

    new' : { to_string: X -> String,
	     get:      Exception -> X,
	     create:   X -> Exception
	   }
           ->
           Property( X );



    to_string				# Pretty print an annotation
        :
        Note -> String;



    attach_prettyprinter		# Attach a pretty printer   
        :
        (Note -> String) -> Void;

};
