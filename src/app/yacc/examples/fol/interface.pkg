#  Externally visible aspects of the lexer and parser 

api INTERFACE =
api

type Source_Position
my line:  REF(  Source_Position )
my init_line:  Void -> Void
my next_line:  Void -> Void
my error:  String * Source_Position * Source_Position -> Void

type Arg
my nothing:  arg

end  #  Api INTERFACE 

generic package Interface () : INTERFACE
{

type Source_Position = Int
line = REF 0
fun init_line () = (line := 1)
fun next_line () = (line := *line + 1)

fun error (errmsg, line: Source_Position, _)
      =
      file::write (file::stdout, "Line " + (int::to_string line) + ": " + errmsg + "\n")

type Arg = Void

nothing = ()

};  #  generic package INTERFACE 
