## say.pkg
## author: Matthias Blume (blume@cs.princeton.edu)

# Compiled by:
#     src/lib/std/src/stdlib-core.make6

# Output of feedback and diagnostics.



###           "Examine what is said, not who speaks."
###
###                         -- Arabian proverb



api Say {

    say:  List( String ) -> Void;
    vsay: List( String ) -> Void;
    dsay: List( String ) -> Void;
    log:  List( String ) -> Void;

    set_name: String     -> Void;
};

package say: Say {

    server_name =  REF NULL: Ref( Null_Or( String ));
    log_stream  =  REF NULL: Ref( Null_Or( file::Output_Stream ) );

    verbose = TRUE;
    debug   = TRUE;

    fun set_name name
        =
        {   server_name := THE name;

            log_stream  := THE (file::open_for_write  (name + ".compile.log"));
        };


    fun log stringlist
	=
	case (*server_name, *log_stream)
	  
	     (THE name, THE outstream)
		 =>
		 {   file::write 
			 (
			   outstream, 
			   cat (name ! ": " ! stringlist)
			 );

		     file::flush  outstream;
		 };

	     _ => ();
	esac;

    fun say stringlist
        =
        {   print (cat stringlist);
	    file::flush  file::stdout;

	    log stringlist;
        };



							# make7_defaults	is from   src/app/make7/util/make7-defaults.pkg


    fun csay flag stringlist				# "csay" == "conditional say".
        =
        if flag
            say stringlist;
        fi;

    vsay =   csay  verbose;
    dsay =   csay  debug;
};


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Copyright (c) 1999 by Lucent Technologies, Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
