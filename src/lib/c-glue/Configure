#!/bin/sh
#
#
#

. config/settings
VERSION_FILE=LIB_VERSIONS
#
# Check executable
#
checkExec() {
   cmd=$1; shift
   #echo "Checking $cmd"
   fullpath=`which $cmd` 
   if [ "$fullpath" = "" ] ; then
      echo "Executable $cmd is not found in your PATH variable";
      exit 1;
   fi
   if [ ! -x "$fullpath" ] ; then 
      echo "File $fullpath is not executable"
      exit 1;
   fi
}

#
# Check config command
#
checkConfig() {
   local target=$1
   local config=$2
   checkExec $config || exit 1
   local version=`$config --version`
   echo "[Found $target version $version]"
   echo "$target	$config --version = $version" >> $VERSION_FILE 
}

echo "[Checking if you have the right executables]"

checkExec "sml" || exit 1
checkExec "c-glue-maker" || exit 1
checkExec "gcc" || exit 1
checkExec "perl" || exit 1
checkExec "sed" || exit 1
checkExec "make" || exit 1

C_GLUE_MAKER_VERSION=`c-glue-maker -version`
if [ $? != 0 ]; then
   echo "Can't get version info from c-glue-maker"
   exit 1
fi

MAJOR=`expr $C_GLUE_MAKER_VERSION : '\(.*\)\.'`
MINOR=`expr $C_GLUE_MAKER_VERSION : '.*\.\(.*\)'`
if [ `expr $MAJOR '=' '0' '&' $MINOR '<' $MIN_C_GLUE_MAKER_MINOR_VER` = 1 ]; then 
   echo "c-glue-maker version $MAJOR.$MINOR is too old"
   exit 1
else
   echo "[c-glue-maker version $MAJOR.$MINOR is okay]"
fi

mkdir -p . 
if [ $? != 0 ] ; then
   echo "mkdir -p doesn't work on your system"
   echo "It's broken!!!"
   exit 1
fi

echo "[Checking if your sml compiler has the right libraries]"
(cd config; echo 'use "sanitycheck.pkg"' | sml) || exit 1

echo "[Checking if you have ml-grinder installed]"
if [ ! -f ml-grinder/ml-grinder.cm ]; then
   echo "Please create a symbolic link to the ml-grinder package, i.e.,"
   echo "    ln -s <path to ml-grinder> ."
   exit 1
fi

#
# Find out where your sml distribution is
#
SMLDIST=`which sml`
SMLDIST=`dirname $SMLDIST`
SMLDIST=`dirname $SMLDIST`

if [ ! -d $SMLDIST/bin ]; then
   echo "Directory $SMLDIST/bin is not found"; exit 1
fi
if [ ! -d $SMLDIST/lib ]; then
   echo "Directory $SMLDIST/lib is not found"; exit 1
fi
if [ ! -x $SMLDIST/bin/.arch-n-opsys ]; then
   echo "Script $SMLDIST/bin/.arch-n-opsys is not found"; exit 1
fi

cat <<END > config/config
SMLDIST=$SMLDIST
END

#

#
#  Make sure all the targets that require config programs have them
#
. config/targets

rm -f $VERSION_FILE
for t in $TARGETS; do
    CONFIGPROG=
    eval `egrep '^CONFIGPROG=' $t/Makefile`; \
    if [ x$CONFIGPROG != x ] ; then \
       checkConfig $t $CONFIGPROG || exit 1
    fi
    if [ -d $t ]; then
       (cd $t; make testconfig) 
       if [ $? != "0" ]; then
         echo "Something is wrong with $t"
         exit 1
       fi
    else
       echo "Missing directory $t"
       exit 1 
    fi 
done

eval `.arch-n-opsys` || exit 1
echo "Your sml/nj distribution directory is in $SMLDIST"
echo "You are running on $OPSYS and your machine architecture is $ARCH"
echo "It seems you are okay"
echo "Type 'make build' to build the libraries"
