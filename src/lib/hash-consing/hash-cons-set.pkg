## hash-cons-set.pkg

# Compiled by:
#     src/lib/hash-consing/hash-cons-lib.make6

# This is an implementation of the Hash_Cons_Set api that is built
# on top of the unt_red_black_map package.  Eventually, it will be replaced
# by an implmementation that uses Patricia trees.      XXX BUGGO FIXME


package hash_cons_set:  Hash_Cons_Set		# Hash_Cons_Set	is from   src/lib/hash-consing/hash-cons-set.api
{
    package hc= hash_cons;		# hash_cons		is from   src/lib/hash-consing/hash-cons.pkg
    package map= unt_red_black_map;	# unt_red_black_map	is from   src/lib/src/unt-red-black-map.pkg

    Chunk( X ) = hc::Chunk( X );
    Set( X  )  = map::Map Chunk X;

    empty = map::empty;

    fun singleton chunk   =  map::singleton (hc::tag chunk, chunk);
    fun add  (set, chunk) =  map::set (set, hc::tag chunk, chunk);
    fun add' (chunk, set) =  map::set (set, hc::tag chunk, chunk);
    fun add_list (set, l) =  list::fold_left add' set l;

    fun delete (set:  Set( X ), chunk)
        =
        #1 (map::remove (set, hc::tag chunk));

    fun member (set, chunk)
        =
        map::contains_key (set, hc::tag chunk);

    is_empty = map::is_empty;

    fun equal (set1, set2)
        =
        case (map::collate (fn _ = EQUAL) (set1, set2))
	     EQUAL =>  TRUE;
	     _     =>  FALSE;
        esac;

    fun compare arg = map::collate (fn _ => EQUAL; end ) arg;

    fun is_subset _ = raise exception FAIL "isSubset";

    vals_count = map::vals_count;
    vals_list = map::vals_list;
    fun union arg = map::union_with (fn (a, _) => a; end ) arg;
    fun intersection arg = map::intersect_with (fn (a, _) => a; end ) arg;

    fun difference _ = raise exception FAIL "difference";

    map = map::map;
    map_maybe_null_fn = map::map_maybe_null_fn;
    apply = map::apply;
    fold_left = map::fold_left;
    fold_right = map::fold_right;

    fun partition _ = raise exception FAIL "partition";

    filter = map::filter;
    fun exists prior set = list::exists prior (vals_list set);
    fun find prior set = list::find prior (vals_list set);
};


## COPYRIGHT (c) 2001 Bell Labs, Lucent Technologies
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
