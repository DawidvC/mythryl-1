010-01-10 Cynbe:

This directory tree contains x-kit, the Mythryl port of the
eXene concurrent X widget set in SML/NJ developed in the
early 1990s by John Reppy and Emden Gansner.  See the eXene
webpage for docs and papers from that era:

    http:://mythryl.org/pub/exene/index.html

As a brief overview:

 o  x-kit is entirely coded in Mythryl;  no C support is used.

 o  x-kit consists of two major and two minor libraries.
    The major libraries are:

      * xclient/
            xclient.  This corresponds to xlib in C, and
            implements all the low-level de/serialization
            needed to talk to the X server, and similar
            low-level widget-support infrastructure.

      * widget/
            xkit-widget.  This contains all the actual widget
            implementation code: Pushbuttons, toggleswitches,
            button groups, labels, text widgets etc.

    The two minor libraries are:

      * draw/
            xkit-draw.  This contains widget-support code
            implementing high-level drawing functions to
            render shapes like splines and cartouches
            on an X window.

      * style/
            xkit-style.  This attempts to make use
            of X resource files, rdd servers etc
            in the x-kit context.
    
 o  x-kit is pervasively concurrent.  Typically each
    button, slider or other widget has its own thread
    of control, often several.  (Concurrent threads
    are cheap and fast in Mythryl, costing about 100
    bytes each, with thread switch times comparable
    to the time needed for a function call.)

 o  In general interactive input flows down the widget tree.
    Each widget receives three streams of events from its
    parent.  Two correspond to user input, the third handles
    internally generated widget communication:

     *  Keyboard event stream -- keystrokes.
     *  Mouse event stream -- clicks and motions.
     *  Commands from parent widget.

    Each widget also has a reverse stream for sending
    information and requests to its parent widget.

    The hierarchical flow of input events down the
    widget tree allows each container-style widget
    to inspect and alter the flow of events to its
    children, for example adjusting click coordinates
    to be relative to the child widget's coordinate
    system.

    The division of the downward flow into three streams
    makes it easy for widgets to ignore unwanted input
    (in particular, many widgets ignore keystrokes), and
    also to set up a separate thread to process each type
    of event, promoting good separation of concerns in the
    widget code.  Since the Mythryl 'select' command allows
    one thread to read from (or write to) multiple streams,
    it is still easy for a single widget thread to process
    all three input streams when desired.

The major source directories in this directory are:

    Code lines  Directory     Comment
    ----------  ---------     -----------------------------------------
	25,000  widget/       The x-kit widgets proper.
	20,000  xclient/      Support code handling X server socket I/O etc.
	20,000  tut/          Tutorial sample apps demonstrating use of the package
                              -- plus one large sample app, a very early version
                              of GraphViz:  http://www.graphviz.org/



