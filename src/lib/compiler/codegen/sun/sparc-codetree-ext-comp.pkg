# sparc-condetree-ext-comp.pkg

# Compiled by:
#     src/lib/compiler/backend-sparc.make6

# We are invoked from:
#
#     src/lib/compiler/codegen/sun/sparc-codegen.pkg


generic package sparc_codetree_extention_compiler_g (

    package codetree
	:
	Codetree						# Codetree			is from   src/lib/compiler/lower/codetree/codetree.api
	where extension == sparc_lib7codetree_ext;

    package instruction_set
	:
	Instruction_Set_Sparc					# Instruction_Set_Sparc		is from   src/lib/compiler/lower/sun/instruction/instruction-set-sparc.api
	where codetree == codetree;

    package codetree_stream
	:
	Codetree_Stream						# Codetree_Stream		is from   src/lib/compiler/lower/codetree/codetree-stream.api
	where codetree == instruction_set::codetree;

    package control_flow_graph
	:
	Control_Flow_Graph					# Control_Flow_Graph		is from   src/lib/compiler/lower/flowgraph/control-flow-graph.api
	where
              instruction_set == instruction_set
	also
              pseudo_op
              ==
              codetree_stream::instruction_stream::pseudo_op;
)

: (weak) Codetree_Extension_Default				# Codetree_Extension_Default	is from   src/lib/compiler/lower/codetree/codetree-extension-default.api

{
    package instruction_set    =  instruction_set;
    package codetree           =  instruction_set::codetree;
    package cells              =  instruction_set::cells;
    package control_flow_graph =  control_flow_graph;
    package codetree_stream    =  codetree_stream;

    package ts = codetree_stream;
    package i  = instruction_set;
    package t  = codetree;
    package c  = cells;

    package ext = sparc_lib7codetree_ext;			# sparc_lib7codetree_ext	is from   src/lib/compiler/codegen/sun/sparc-codetreeext.pkg


    package sparc_comp_instr_ext
	= 
	sparc_compiler_instructionset_extension_g (		# sparc_compiler_instructionset_extension_g	is from   src/lib/compiler/lower/sun/instruction/sparccomp-instruction-ext.pkg
	    package instruction_set   = i;
	    package control_flow_graph = control_flow_graph;
	    package codetree_stream  = codetree_stream;
	);

     Reducer
	= 
	ts::Reducer (i::Instruction, c::Cellset, i::Operand, i::Addressing_Mode, control_flow_graph::Control_Flow_Graph);

    fun unimplemented _
	=
	lowcode_error_message::impossible "sparc_codetree_extention_compiler_g"; 

    compile_sext  = sparc_comp_instr_ext::compile_sext;
    compile_rext  = unimplemented;
    compile_ccext = unimplemented;
    compile_fext  = unimplemented;
};
