#!/bin/sh

# Build bin/mythryld, our all-in-one "executable" (heap image).
#
# bin/mythryld combines our compiler, linker, make support and
# interactive system all in one big happy binary so at install
# time once we have it up and running we're away to the races:
#
if [ -r mythryld ]; then
    echo "             sh/make-compiler-executable:   Removing old 'mythryld' file."
    rm mythryld
fi

# export CM_DIR_ARC="tmp7"

# bin/ld7 is a small wrapper script around bin/runtime7.
# bin/runtime7, Mythryl's C-coded runtime layer, has
# special bootstrap functionality to build the initial
# compiler heap image by reading in a designated set of
# .o7 files in a designated order and then saving the
# resulting heap image to disk:
#
if bin/ld7 --runtime-heap=mythryld --runtime-o7-files-to-load=OH7_FILES_TO_LOAD --runtime-gc-gen0-bufsize=256k
then

    if [ -r mythryld ]; then

        chmod +x mythryld
	echo "             sh/make-compiler-executable:   Success: 'mythryld' executable generated."

        if [ -r bin/mythryld ]; then
	    echo "             sh/make-compiler-executable:   Saving previous  bin/mythryld  as  bin/mythryld.old."
	    mv bin/mythryld bin/mythryld.old
        fi


	echo "             sh/make-compiler-executable:   Installing new   bin/mythryld  executable (and 'my' symlink to it)."

	mv mythryld     bin/mythryld

        if [ -L bin/my ]; then
            rm bin/my
        fi
	if [ ! -e bin/my ]; then
	    ln -s bin/mythryld bin/my
	fi

	echo "             sh/make-compiler-executable:   `ls -l bin/my`"
	echo "             sh/make-compiler-executable:   `ls -l bin/mythryld`"
	echo "             sh/make-compiler-executable:   `ls -l bin/mythryld.old`"
	echo ""
	echo ""
	echo "             To run Mythryl interactively do:  bin/my"
	echo ""

    else
	echo "             sh/make-compiler-executable:   No mythryld executable generated."
    fi
else
    echo "             sh/make-compiler-executable:   Compiler link failed, no mythryld executable"
fi

