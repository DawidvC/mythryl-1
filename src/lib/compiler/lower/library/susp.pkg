#
# Force/delay
#
# -- Allen Leung



api SUSPENSION =
api
   type susp( X )
   my @@ : (Void -> X) -> susp( X )
   my !! : susp( X ) -> X
end

package Suspension :> SUSPENSION =
pkg
   enum thunk X = VALUE of X | CLOSURE of Void -> X

   type susp( X ) =  Ref( thunk(X) )

   fun @@ e = REF (CLOSURE e)
   fun !! (REF (VALUE v)) = v
     | !! (r as REF (CLOSURE e)) = 
       let v = e()
       in  r := VALUE v; v end  
end

