#!/usr/bin/perl -w
use strict;

# 2007-01-23 Quick-and-dirty hack to help rename a few hundred .sig files to be .api files,
#            including updating the relevant makefiles &tc to reflect the renaming.

my $files_to_rename = 512;

# Get a list of all known files
open IN, "find . -type f -print |" or die "Couldn't run find: $!";
my @all_files = <IN>;
close IN;

# Remove from the list those in which we definitely
# don't want to be making substitutions, such as
# the compressed library tarball and compiled object files:
my %substitutable_files = ();   my $substitutable_files_count = 0;
for my $i (@all_files) {

    my $file = $i;

    next if $file =~ m|/tmp7/|;
    next if $file =~ m|/bin/|;
    next if $file =~ m|\.bz2$|;
    next if $file =~ m|\.gz$|;
    next if $file =~ m|\.tgz$|;
    next if $file =~ m|\.o$|;
    next if $file =~ m|\.so$|;
    next if $file =~ m|\.a$|;
    next if $file =~ m|\.gif$|;
    next if $file =~ m|\.gif87$|;
    next if $file =~ m|\.jpg$|;
    next if $file =~ m|\.mp3$|;
    next if $file =~ m|\.mpeg$|;
    next if $file =~ m|\.ps$|;
    next if $file =~ m|\.pdf$|;
    next if $file =~ m|\.fig$|;
    next if $file =~ m|/heap/|;
    next if $file =~ m|seed-libraries/|;
    next if $file =~ m|OH7_FILES_TO_LOAD$|;
    next if $file =~ m|LIBRARY_CONTENTS$|;
    next if $file =~ m|tmpscript$|;
    next if $file =~ m|rename-sig-files-to-api$|;
    next if $file =~ m|~$|;
    next if $file =~ m|/ID$|;
    next if $file =~ m|/TAGS$|;

    ++$substitutable_files{$file};
    ++$substitutable_files_count;
}

# Find all .sml and .sig files:
my %sml_files = ();   my $sml_file_count = 0;
my %sig_files = ();   my $sig_file_count = 0;
for my $i (keys %substitutable_files) {
    my $file = $i;
    if ($file =~ m|\.sml$|)  { ++$sml_files{$file}; ++$sml_file_count; }
    if ($file =~ m|\.sig$|)  { ++$sig_files{$file}; ++$sig_file_count; }
}

if (!$sig_file_count) {
    print "No .sig files found!\n";
    exit 1;
}

# print "All .sig files:\n";
# for my $i (@sig_files) {
#     print $i;
# }
# print "Done!\n";

# Pick up to $files_to_rename .sig files to rename:
my %sig_files_to_rename = ();
my $count = 0;
for my $i (keys %sig_files) {
    my $file = $i;
    chomp $file;
    $file =~ s|^.*/([^/]*)\.sig$|$1|;
    print "Will rename $file.sig to $file.api.\n";
    if (defined $sig_files_to_rename{$file}) { print "$file is a duplicate\n"; }
    ++$sig_files_to_rename{$file};
    last if ++$count >= $files_to_rename;
}

# print "All .sig files:\n";
# for my $i (@sig_files) {
#     print $i;
# }
# print "Done!\n";

my $renamings = 0;
open OUT, ">tmpscript" or die "Couldn't create tmpscript: $!\n";
print OUT "#! /usr/bin/perl\n";
print OUT "\n";
for my $i (keys %sig_files_to_rename) {
    ++$renamings;
    print OUT "s|([^a-zA-Z0-9-])$i\\.sig|\\1$i.api|g;\n";
}
print OUT "\n";
close OUT;

# print "tmpscript contents:\n";
# print `cat tmpscript`;

print "Applying $renamings renamings to $substitutable_files_count files:\n";

for my $i (keys %substitutable_files) {
    my $file = $i;
    chomp $file;
    print ".";
#    print "Doing:   /usr/bin/perl -pi tmpscript $file\n";
    system "/usr/bin/perl -pi tmpscript $file\n";
}
print "Done.\n\n";

for my $i (keys %sig_files_to_rename) {
    for my $j (keys %sig_files) {
        my $file = $j;
        chomp $file;
        if ($file =~ m|/$i\.sig$|) {
            if ($file =~ m|^(.*)\.sig|) {
                print "Doing:   mv $file $1.api\n";
                system "mv $file $1.api";
            }
        }
    }
}

exit 0;
