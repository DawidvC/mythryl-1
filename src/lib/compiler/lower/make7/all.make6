control.make6:

        ../control/lowcode-error-message.pkg
        ../control/lowcode-control.pkg
        ../control/lowcode-timing.pkg

gc.make6:
/*
 * This library implements GC safety. 
 */

	control.make6
	lib.make6
	graphs.make6
	lowcode.make6
	ir.make6
	rtl.make6

	/* GC safety stuff */
	../gc-safety/gc-gen.api
	../gc-safety/gc-g.pkg
	../gc-safety/gc-liveness.api
	../gc-safety/gc-liveness.pkg
	../gc-safety/gc-typemap.api
	../gc-safety/gc-typemap.pkg
	../gc-safety/gc-dummy-type.sml
	../gc-safety/gc-type-system.api
	../gc-safety/gc-type-system.pkg
	../gc-safety/gc-invariants.sml

graphs.make6:
/*
 * This is a generic graph library. 
 */

	control.make6
	lib.make6

	../graph/acyclic-graph.pkg
	../graph/bellman-ford.pkg
	../graph/bigraph.api
	../graph/closed-semi-ring.api
        ../graph/orig-digraph.pkg
	../graph/orig-node-priqueue.pkg
	../graph/orig-udgraph.pkg
	../graph/dijkstra.pkg
	../graph/floyd-warshall.pkg
	../graph/johnson.pkg
	../graph/graph-bfs.api
	../graph/graph-bfs.pkg
	../graph/graph-bcc.api
	../graph/graph-bcc.pkg
	../graph/graph-combination.api
	../graph/graph-combination.pkg
	../graph/graph-cycles.api
	../graph/graph-cycles.pkg
	../graph/graph-dfs.api
	../graph/graph-dfs.pkg
	../graph/graph-is-cyclic.api
	../graph/graph-is-cyclic.pkg
	../graph/graph-minor.pkg
	../graph/graph-strongly-connected-components.api
	../graph/graph-scc.pkg
	../graph/graph-topological-sort.api
	../graph/graph-topological-sort.pkg
	../graph/graph.api
	../graph/graph.pkg
	../graph/graph-guts.api
	../graph/group.api
	../graph/isograph.pkg
	../graph/kruskal.pkg
	../graph/matching.api
	../graph/matching.pkg
	../graph/max-flow.api
	../graph/max-flow.pkg
	../graph/min-cut.api
	../graph/min-cut.pkg
	../graph/no-exit.pkg
	../graph/node-partition.pkg
	../graph/node-priqueue.api
	../graph/printgraph.pkg
	../graph/readonly.pkg
	../graph/renamegraph.pkg
	../graph/revgraph.pkg
	../graph/seme.pkg
	../graph/shortest-paths.api
	../graph/singleton.pkg
	../graph/snap-shot.pkg
	../graph/spanning-tree.api
	../graph/start-stop.pkg
	../graph/subgraph-p.pkg
	../graph/subgraph.pkg
	../graph/trace-graph.pkg
	../graph/trans-closure.pkg
	../graph/ugraph.pkg
	../graph/uniongraph.pkg
	../graph/wrappers.pkg
	../graph/update-graph-info.pkg

ia32.make6:

	lowcode.make6
	control.make6
	lib.make6
        graphs.make6
	codetree.make6

        /* c calls */
        ../x86/c-calls/ia32-svid.pkg

        ../x86/flowgraph/x86-gas-pseudo-ops-g.pkg

	/* omit frame pointer */
	../x86/omit-frameptr/x86omit-frameptr.pkg

	/* X86 specific backend */
	../x86/instruction/x86-cells.pkg
	../x86/instruction/x86comp-instruction-ext.pkg
	../x86/instruction/instruction-set-x86.api
	../x86/instruction/instruction-set-x86-g.pkg
	../x86/instruction/x86instr-ext.pkg
	../x86/instruction/x86-shuffle.api
	../x86/instruction/x86-shuffle.pkg
	../x86/instruction/x86-instruction-semantic-properties-g.pkg
	../x86/instruction/x86-memory-registers.api
	../x86/instruction/x86-instruction-frequency-properties-g.pkg
	../x86/emit/x86-asm-emitter-g.pkg
	../x86/x86-mc.pkg
	../x86/reg-alloc/x86-rewrite.api
	../x86/reg-alloc/x86-rewrite.pkg
	/* ../x86/reg-alloc/x86-reg-alloc.sml-unused */
	../x86/reg-alloc/x86Spill.sml
	/* This is no long needed */
	/* ../x86/reg-alloc/x86-pseudo-r.pkg */
	../x86/span/x86-jumps.pkg 
	../x86/codetree/x86.pkg

	/* Floating Point Code Generation/Optimization */
	../x86/codetree/orig-x86-fp.pkg

	/* register allocator */
	../x86/reg-alloc/x86-register-allocation-g.pkg


ia32-gc.make6:

	lowcode.make6
	gc.make6
	ia32.make6
	
	/* X86 specific backend */
ia32-peephole.make6:

	control.make6
	lowcode.make6
	peephole.make6
	ia32.make6

	/* x86 */
	../x86/instruction/x86-peephole.pkg
	/* ../x86/instruction/x86-leaf-opt.pkg */

ia32-rtl.make6:

	control.make6
	lowcode.make6
	rtl.make6
	region.make6
	ia32.make6
	
	/* x86 specific backend */
	../x86/codetree/x86RTL.sml 
	../x86/codetree/x86RTLProps.sml 

ia32-sched.make6:

	control.make6
	lib.make6
	lowcode.make6
	ia32.make6
	sched.make6
	region.make6
	
	/* X86 scheduler */ 
	../x86/scheduling/x86Arch.sig
	../x86/scheduling/x86ReservationTable.sig
	../x86/scheduling/x86PairingRT.sml
	../x86/scheduling/x86PipelineRT.sml
	../x86/scheduling/x86PentiumII.sml
	../x86/scheduling/x86PentiumPro.sml
	/* ../x86/scheduling/x86SchedulingProps.sml */

	../x86/scheduling/x86SchedProps.sml

ia32-ssa.make6:

	control.make6
	lowcode.make6
	rtl.make6
	ssa.make6
	region.make6
	ia32.make6
	ia32-rtl.make6
	
	/* X86 specific backend */
	../x86/static-single-assignment/x86SSAProps.sml
ir.m:ake7

	lowcode.make6
	control.make6
	lib.make6
	graphs.make6
	visual.make6
	ir-archive.make6
	codetree.make6

	/* These provide a graph view for clusters.  Required if you 
	 * want to perform any non-trivial analysis on the program.
	 * Also required if you want to use the visualization stuff on clusters.
	 */
	../cluster/cluster-graph.api
	../cluster/cluster-graph.pkg
	../cluster/cluster-viewer.api
	../cluster/cluster-viewer.pkg

	/* lowcode IR for optimizations. These are necessary only if you want
	 * to use various optional lowcode optimizations.
	 */
	../intermediate-representation/dataflow.api
	../intermediate-representation/dataflow.pkg
	../intermediate-representation/lowcode-branch-chaining.pkg
	../intermediate-representation/lowcode-cfg-util.api
	../intermediate-representation/lowcode-cfg-util.pkg
	../intermediate-representation/lowcode-cpr.sml
	../intermediate-representation/lowcode-format-instruction.pkg
	../intermediate-representation/idefs2.api
	../intermediate-representation/idefs2.pkg
	../intermediate-representation/lowcode-idefs.api
	../intermediate-representation/lowcode-idefs.pkg
	../intermediate-representation/lowcode-ir.api
	../intermediate-representation/lowcode-ir.pkg
	../intermediate-representation/lowcode-ir-optimization.api
	../intermediate-representation/lowcode-liveness.pkg
	../intermediate-representation/lowcode-preheaders.pkg
	../intermediate-representation/lowcode-reshape-branches.pkg
	../intermediate-representation/static-branch-prediction.pkg
	
	/* Glue modules.  These are required only if you want to 
	 * play with optimizations.
	 */
	../glue/lowcode-glue.api
	../glue/lowcode-glue.pkg
ir-archive.make6:
	control.make6
	lib.make6
	graphs.make6

	../ir-archive/apt.sig
	../ir-archive/apt.sml
	../ir-archive/cdg.api
	../ir-archive/cdg.pkg
	../ir-archive/compute-freq.api
	../ir-archive/compute-freq.pkg
	../ir-archive/compute-freq2.api
	../ir-archive/compute-freq2.pkg
	../ir-archive/comp-djgraph.sml
	../ir-archive/derived-graph.api
	../ir-archive/derived-graph.pkg
	../ir-archive/dj-dataflow.api
	../ir-archive/dj-dataflow.pkg
	../ir-archive/djgraph.api
	../ir-archive/djgraph.pkg
	../ir-archive/dominance-frontier.api
	../ir-archive/dominance-frontier.pkg
	../ir-archive/dominator.api
	../ir-archive/dominator-tree-g.pkg
	../ir-archive/reducibility.api
	../ir-archive/reducibility.pkg
	../ir-archive/loop-package.sig
	../ir-archive/loop-package.sml
	../ir-archive/ssa.api
	../ir-archive/ssa.pkg

lib.make6:
/*
 * This is the lowcode library
 */
	control.make6

	../library/note.api
	../library/note.pkg
	../library/bitset.api
	../library/bitset.pkg
	../library/cache.pkg
	../library/catlist.pkg
        ../library/orig-expanding-rw-vector.pkg
	../library/orig-sparse-rw-vector.pkg
/*
	../library/dynamic-bitset.pkg
	../library/fixed-point.api
	../library/fixed-point.pkg
 */
	../library/freq.api
	../library/freq.pkg
/*
	../library/hash-table.api
	../library/hash-table.pkg
	../library/hash-map.api
	../library/hash-map.pkg
	../library/hash-bag.api
	../library/hash-bag.pkg
	../library/hash-multimap.api
	../library/hash-multimap.pkg
	../library/hash-set.api
	../library/hash-set.pkg
	../library/int-set.pkg
 */
 /*
	../library/intmap.api
	../library/intmap.pkg
  */
	../library/heap.pkg
	../library/line-break.pkg
	../library/priority-queue.api
	../library/priority-queue.pkg
/*
	../library/probability.pkg
	../library/randlist.pkg
	../library/regset.api
	../library/regset.pkg
 */
	../library/sortedlist.pkg
	../library/string-out-stream.api
	../library/string-out-stream.pkg
/*
	../library/lazy.pkg
	../library/transaction-glue.pkg
	../library/transaction-log.api
	../library/transaction-log.pkg
	../library/transaction.api
	../library/transaction.pkg
	../library/undoable-array.pkg
	../library/undoable-ref.pkg
 */
 /*
	../library/unt64.pkg
  */

lowcode.make6:

	control.make6
 	graphs.make6
	visual.make6
	lib.make6

	/* Core definitions. These are required */
	../instruction/cells.api
	../instruction/cells-g.pkg
	../instruction/cells-basis.api
	../instruction/cells-basis.pkg
	../instruction/rewrite.api
	../instruction/instruction-properties.api
	../instruction/instruction-stream.api
	../instruction/instruction-stream-g.pkg
	../instruction/instruction-set.api
	../instruction/shuffle.api
	../instruction/shuffle-g.pkg
	../instruction/constant.api
	../instruction/label.pkg
	../instruction/label.api
	../instruction/region.api
	../instruction/freq-props.api
	../instruction/frequncy-properties-g.pkg
	../instruction/lowcode-notes.api
	../instruction/lowcode-notes.pkg
	../instruction/lowcode-optimization.api
	
	/* New ../aliasing/memory disambiguation support */
	../aliasing/lowcode-region.api
	../aliasing/lowcode-region.pkg
	../aliasing/points-to.api
	../aliasing/points-to.pkg
	
	/* Core definitions for the Codetree language. These are required. */
	../codetree/codetree.api
	../codetree/codetree-g.pkg
	../codetree/codetree-evaluate.sig
	../codetree/codetree-evaluate.sml
	../codetree/codetree-extension.api
	../codetree/codetree-basis.api
	../codetree/codetree-basis.pkg
	../codetree/translate-codetree-to-target-machine.api
	../codetree/codetree-stuff.api
	../codetree/codetree-stuff-g.pkg
	../codetree/codetree-hash.api
	../codetree/codetree-hash-g.pkg
	../codetree/codetree-size.api
	../codetree/codetree-size-g.pkg
	../codetree/codetree-stream.api
	../codetree/codetree-stream-g.pkg
	../codetree/codetree-mult.api
	../codetree/codetree-mult.pkg
	../codetree/machine-int.api
	../codetree/machine-int.pkg
	
	/* Basic cluster stuff. These are required. */
	../flowgraph/build-flowgraph.pkg
	../flowgraph/cfg-optimization.api
	../flowgraph/client-pseudo-op.api
	../flowgraph/control-flow-graph.api
	../flowgraph/control-flow-graph-g.pkg
	../flowgraph/control-flow-graph-view.api
	../flowgraph/control-flow-graph-view.pkg
	../flowgraph/cfg-count-copies-g.pkg
	../flowgraph/cfg-expand-copies-g.pkg
	../flowgraph/gnu-assembler-pseudo-ops-g.pkg
	../flowgraph/print-control-flow-graph-g.pkg
	../flowgraph/pseudo-op.api
	../flowgraph/pseudo-ops.pkg
	../flowgraph/pseudo-op-basis.api
	../flowgraph/pseudo-ops-basis-type.pkg
	../flowgraph/pseudo-ops-big.pkg
	../flowgraph/pseudo-op-endian.api
	../flowgraph/pseudo-ops-little.pkg

	
	/* Core register allocator utilities */
	../reg-alloc/getreg.api
	../reg-alloc/getreg.pkg
	../reg-alloc/getreg2.pkg
	../reg-alloc/liveness.api
	../reg-alloc/liveness-g.pkg
	
        /* Spill heuristics */
        ../reg-alloc/chaitin-spill-heuristic.pkg
        ../reg-alloc/chow-hennessy-spill-heuristic.pkg

	/* New Register_Allocator */
        ../reg-alloc/ra-graph.api
        ../reg-alloc/ra-graph.pkg
        ../reg-alloc/register-allocation-core.api
        ../reg-alloc/register-allocation-core.pkg
        ../reg-alloc/register-allocation-spill-types-g.pkg
        ../reg-alloc/register-allocation-spilling.api
        ../reg-alloc/register-allocation-spilling-g.pkg
        ../reg-alloc/ra-spill-heuristic.api
        ../reg-alloc/ra-flowgraph.api
        ../reg-alloc/ra-flowgraph-part.api
        ../reg-alloc/register-allocator.api
        ../reg-alloc/register-allocator-g.pkg
	../reg-alloc/ra-dead-code-elimination.pkg
	../reg-alloc/ra-priqueue.api
	../reg-alloc/register-allocator-memory-coalescing-g.pkg
	../reg-alloc/region-based-register-allocation-g.pkg
	../reg-alloc/risc-register-allocation-g.pkg

        /* Cluster based Register_Allocator's */
        ../reg-alloc/cluster-register-allocation-g.pkg

	/* Assembly machine code stuff */
	../emit/instruction-emitter.api
	../emit/asm-emit.api 
	../emit/asm-stream.pkg
	../emit/asm-util.pkg
	../emit/cfg-emit-g.pkg
	../emit/code-string.api
	../emit/machine-code-emitter.api
	
	/* Basic GC types stuff */
	../gc-safety/garbage-collector-cells.api
	../gc-safety/garbage-collection-cells-g.pkg
	../gc-safety/gc-type.api
	
	/* Span dependency stuff */
	../span/basic-block-scheduler2.pkg
	../span/basic-block-scheduler.api
	../span/span-dependency-resolution-g.pkg
	../span/delay-slot-props.api
	../span/no-delay-slots-g.pkg
	../span/span-dependent-jumps.api
	../span/x86-span-dependency-resolution-g.pkg

	/* block placement */
	../block-placement/block-placement.api
	../block-placement/default-block-placement-g.pkg

        /* c calls */
        ../c-calls/c-types.pkg
        ../c-calls/c-calls.api

 	/* omit frame pointer optimization */
 	../omit-frameptr/omit-frame-pointer.api

codetree.make6:
/*
 * This library contains some simple Codetree utilities 
 */
	lowcode.make6
	control.make6
	lib.make6

	../codetree/codetree-utils.api
	../codetree/codetree-utils.pkg
	../codetree/codetree-fold.api
	../codetree/codetree-fold.pkg
	../codetree/codetree-rewrite.api
	../codetree/codetree-rewrite.pkg
	../codetree/codetree-simplify.api
	../codetree/codetree-simplify.pkg
	../codetree/instruction-sequence-generator-g.api
	../codetree/instruction-sequence-generator-g.pkg

opt.make6:
/*
 * This library implemenents the lowcode SSA optimizer.
 */

	lowcode.make6
	control.make6
	lib.make6
	graphs.make6
	visual.make6
	ir-archive.make6
	ir.make6
	rtl.make6
	ssa.make6
	sched.make6
	gc.make6
	
	../glue/lowcode-optimizer.pkg

peephole.make6:
/* 
 * This library contains only the peephole optimization stuff.  
 */
	lowcode.make6
	graphs.make6

	/* Peephole optimizations */
	../instruction/peephole.api
	../flowgraph/cfg-peephole.pkg

ppc.make6:
/* 
 * PowerPC specific modules for lowcode code generation framework.
 */

	lowcode.make6
	control.make6
	lib.make6

        /* c calls */
        ../ppc/c-calls/ppc-macosx.pkg

	/* PowerPC specific backend */
	../ppc/instruction/ppc-cells.pkg
	../ppc/instruction/instruction-set-ppc.api
	../ppc/instruction/instruction-set-ppc-g.pkg
	../ppc/instruction/ppc-shuffle.api
	../ppc/instruction/ppc-shuffle-g.pkg
	../ppc/instruction/ppc-instruction-properties-g.pkg
	../ppc/instruction/ppc-freq-props.pkg
	../ppc/emit/ppc-asm.pkg
	../ppc/emit/translate-ppc-to-ppc-machine-code-g.pkg
	../ppc/span/ppc-delay-slots.pkg
	../ppc/span/ppc-jumps.pkg
	../ppc/flowgraph/ppc-gas-pseudo-ops.pkg
	../ppc/codetree/ppc-pseudo-instruction.api
	../ppc/codetree/translate-codetree-to-ppc-g.pkg 
	../ppc/reg-alloc/ppc-instructions-rewrite-g.pkg
	/* ../ppc/reg-alloc/ppc-reg-alloc.pkg */

ppc-gc.make6:

	lowcode.make6
	gc.make6
	ppc.make6
	
	/* PowerPC specific backend */

ppc-sched.make6:
/*
 * This library contains the superscalar scheduling stuff.
 */
	control.make6
	lib.make6
	lowcode.make6
	ppc.make6
	sched.make6
	region.make6
	
	/* PowerPC scheduler */ 
	../ppc/scheduling/ppcSchedProps.sml

ra.make6:

	lowcode.make6
	control.make6
	lib.make6

	/*../reg-alloc/ra-spill-gcm.sig
	../reg-alloc/ra-spill-gcm.sml
	../reg-alloc/lcm.sig
	../reg-alloc/lcm.sml
	../reg-alloc/frame-info.sig
	../reg-alloc/cluster-frame-info.sml*/
	/* ../reg-alloc/interproc-mem-ra.sml */

	../reg-alloc/chaitin-spill-heuristic2.pkg
	../reg-alloc/chow-hennessy-spill-heuristic2.pkg

	../reg-alloc/ra-spill-with-renaming.pkg

region.make6:
/*
 * This library contains the basic interface to the regions stuff 
 */

	lowcode.make6
	control.make6
	lib.make6

	../instruction/region-info.pkg
	../instruction/region-props.api

	../aliasing/pointsToInfo.sig
	../aliasing/pointsToInfo.sml
rtl.make6:
/*
 *  This library contains modules that implements the RTL and related stuff
 */

	control.make6
	lib.make6
	lowcode.make6
	codetree.make6
	
	/* RTL */
	../codetree/codetree-rtl.api
	../codetree/codetree-rtl.pkg
	../codetree/rtl-props.api
	../codetree/rtl-build.api
	../codetree/rtl-build.pkg

	/* Operand tables */
	../codetree/operand-table.api
	../codetree/operand-table.pkg

sched.make6:
/*
 * This library contains the superscalar scheduling stuff.
 */
	control.make6
	lib.make6
	graphs.make6
	visual.make6
	ir-archive.make6
	lowcode.make6
	rtl.make6
	ir.make6

	/* Rank algorithms */
	../scheduling/palem-simons.api
	../scheduling/palem-simons.pkg
	../scheduling/LeungPalemPnueli.sig
	../scheduling/leung-palem-pnueli.pkg

	/* Data dependence dag representation */
	../scheduling/scheduler-ddg.api
	../scheduling/scheduler-ddg.pkg

	/* Api of a rank function */
	../scheduling/scheduling-ranks.api

	/* Architectural Properties */
	../scheduling/scheduling-props.api

	/* Basic block scheduling */
	../scheduling/local-cp.pkg
	../scheduling/build-local-ddg.api
	../scheduling/build-local-ddg.pkg
	../scheduling/bb-scheduler.api
	../scheduling/bb-scheduler.pkg
	../scheduling/bb-ddg-viewer.api
	../scheduling/bb-ddg-viewer.pkg
	../scheduling/cluster-bb-scheduler.pkg

	/* Superscalar scheduling.  These are required if you want to
	 * play with instruction scheduling for superscalars.
	 * It requires the lowcode IR stuff. !!!
	 */
	../scheduling/list-scheduler.api
	../scheduling/list-scheduler.pkg
	../scheduling/build-ddg.api
	../scheduling/build-ddg.pkg
	../scheduling/scheduling-aliasing.api
	../scheduling/region-builder.api
	../scheduling/region-builder.pkg

	/* Various global scheduling algorithms */
	../scheduling/global-cp.pkg
	../scheduling/global-ddg-viewer.api
	../scheduling/global-ddg-viewer.pkg
	../scheduling/global-scheduling-algorithm.api
	../scheduling/dag-scheduling.pkg
	../scheduling/global-scheduler.pkg
sparc.make6:
/* 
 * SPARC specific modules for lowcode code generation framework.
 */
	lowcode.make6
	control.make6
	lib.make6

	/* Sparc specific backend */
	../sparc/instruction/sparc-cells.pkg
	../sparc/instruction/instruction-set-sparc.api
	../sparc/instruction/instruction-set-sparc-g.pkg
	../sparc/instruction/sparcinstr-ext.pkg
	../sparc/instruction/sparccomp-instruction-ext.pkg
	../sparc/instruction/sparc-shuffle.api
	../sparc/instruction/sparc-shuffle-g.pkg
	../sparc/instruction/sparc-props.pkg
	../sparc/instruction/sparc-freq-props.pkg
	../sparc/emit/sparc-asm.pkg
	../sparc/emit/translate-sparc-to-sparc-machine-code-g.pkg
	../sparc/span/sparc-jumps.pkg
	../sparc/flowgraph/sparc-gas-pseudo-ops.pkg
	../sparc/codetree/sparc-pseudo-instruction.api
	../sparc/codetree/translate-codetree-to-sparc-g.pkg 
	../sparc/reg-alloc/sparc-rewrite.pkg
	/* ../sparc/reg-alloc/sparc-reg-alloc.pkg */
	../sparc/span/sparc-delay-slots-g.pkg
	../sparc/c-calls/sparc-c-calls.pkg


sparc-gc.make6:

	lowcode.make6
	gc.make6
	sparc.make6
	
	/* Sparc specific backend */
sparc-peephole.make6:

	lowcode.make6
	peephole.make6
	sparc.make6

	/* sparc */
	../sparc/instruction/sparc-peephole.pkg

sparc-rtl.make6:

	control.make6
	lowcode.make6
	rtl.make6
	region.make6
	sparc.make6
	
	/* sparc specific backend */
	../sparc/codetree/sparcRTL.sml 
	../sparc/codetree/sparcRTLProps.sml 

sparc-sched.make6:
/*
 * This library contains the superscalar scheduling stuff.
 */

	control.make6
	lib.make6
	lowcode.make6
	sparc.make6
	sched.make6
	region.make6
	
	/* Sparc scheduler */ 
	../sparc/scheduling/sparcSchedProps.sml
sparc-ssa.make6:

	control.make6
	lowcode.make6
	rtl.make6
	ssa.make6
	region.make6
	sparc.make6
	sparc-rtl.make6
	
	/* sparc specific backend */
	../sparc/static-single-assignment/sparcSSAProps.sml

ssa.make6:
/*
 *  This library implements the SSA optimizations.
 */
	control.make6
	lib.make6
	graphs.make6
	visual.make6
	ir-archive.make6
	lowcode.make6
	ir.make6
	gc.make6
	codetree.make6
	rtl.make6
	region.make6
	
	/* The SSA representation */
	../static-single-assignment/SSA-flowgraph.sig
	../static-single-assignment/lowcode-ssa.sig
	../static-single-assignment/lowcode-ssa.sml
	../static-single-assignment/SSA-optimization.sig

	/* Machine specific properties */
	../static-single-assignment/SSA-props.sig

        /* control_flow_graph <-> SSA */
	../static-single-assignment/lowcode-ssa-construction.sig
	../static-single-assignment/lowcode-ssa-construction.sml
	../static-single-assignment/lowcode-ssa-deconstruction.sig
	../static-single-assignment/lowcode-ssa-deconstruction.sml

	../static-single-assignment/SSA-const-folding.sig
	../static-single-assignment/SSA-const-folding.sml

	../static-single-assignment/SSA-gvn-basis.sig
	../static-single-assignment/SSA-gvn-basis.sml

        /* Instruction selection */
	../static-single-assignment/SSA-instrgen.sig
	../static-single-assignment/SSA-instrgen.sml

	/* Optimization phases */
	../static-single-assignment/SSA-dead-code-elim.sml
	../static-single-assignment/SSA-cond-const-folding.sml
	../static-single-assignment/SSA-global-code-motion.sml
	../static-single-assignment/SSA-global-value-numbering.sml
	../static-single-assignment/SSA-operator-strength-reduction.sml

	../static-single-assignment/SSA-gc-invariants.sml


visual.make6:

/*
 * This library implements visualization of graphs
 */
	control.make6
	lib.make6
	graphs.make6

	../visualization/all-displays.pkg
	../visualization/da-vinci.pkg
	../visualization/dot.pkg
	../visualization/graph-display.api
	../visualization/graph-layout.pkg
	../visualization/graph-viewer.api
	../visualization/graph-viewer.pkg
	../visualization/vcg.pkg

vliw.make6:
/*
 * This library contains the VLIW based optimizations.
 */

	control.make6
	lib.make6
	graphs.make6
	visual.make6
	ir-archive.make6
	lowcode.make6
	ir.make6
	
	../emit/emitter-new.api /* dummy */
	
	/* ../VLIW/EPIC foundational stuff.
	 */
	../instruction/funits.sig
	../instruction/datapaths.sig
	../instruction/pred-instructions.sig
	../instruction/vliw-instructions.sig
	../instruction/pred-vliw-instructions.sig
	../instruction/predicationProps.sig
	../instruction/vliwProps.sig
	
	/* Hyperblock and predicate analysis. 
	 * These are necessary if you want to play with optimizations
	 * for predicated for VLIW architectures.
	 */
	../hyperblock/decision-trees.sig
	../hyperblock/decision-trees.sml
	../hyperblock/hyperblock.sig
	../hyperblock/hyperblock.sml
	../hyperblock/hyperblock-ddg.sig
	../hyperblock/hyperblock-ddg.sml
	../hyperblock/if-conversion.sig
	../hyperblock/if-conversion.sml
	../hyperblock/predicated-ddg.sig
	../hyperblock/predicated-ddg.sml
	
	/* Hyperblock Scheduling for VLIW 
	 * It requires the hyperblock, lowcode IR and VLIW modules. !!!
	 */
	../hyperblock-scheduling/critical-path.sml
	../hyperblock-scheduling/hyperblock-scheduling.sig
	../hyperblock-scheduling/hyperblock-scheduling.sml
	../hyperblock-scheduling/rank-algorithm.sig
	../hyperblock-scheduling/vliwSchedulingProps.sig
	../hyperblock-scheduling/vliwSchedulingAutomaton.sig
	
	/* Modulo Scheduling for VLIW
	 * It requires the hyperblock, lowcode IR and VLIW modules. !!!
	 */
	../modulo-scheduling/iterated-modulo-scheduling.sml
	../modulo-scheduling/modulo-scheduling-algo.sig
	../modulo-scheduling/modulo-scheduling.sig
	../modulo-scheduling/modulo-scheduling.sml
	../modulo-scheduling/mrt.sig
	../modulo-scheduling/mrt.sml
	../modulo-scheduling/pre-modulo-scheduling.sig
	../modulo-scheduling/pre-modulo-scheduling.sml
	
	/* C6 specific backend !!! */
	../C6/instruction/C6Cells.sig
	../C6/instruction/C6Cells.sml
	../C6/instruction/C6Datapaths.sig
	../C6/instruction/C6Datapaths.sml
	/*C6/instruction/C6DatapathsProps.sml*/
	../C6/instruction/C6Funits.sig
	../C6/instruction/C6Funits.sml
	../C6/instruction/C6Instr.sig
	../C6/instruction/C6Instr.sml
	../C6/instruction/C6InstrIlk.sig
	../C6/instruction/C6InstrIlk.sml
	../C6/instruction/C6Intrinsics.sig
	../C6/instruction/C6Intrinsics.sml
	../C6/instruction/C6PredicationProps.sml
	../C6/instruction/C6Props.sml
	../C6/instruction/C6PseudoOps.sig
	../C6/instruction/C6PseudoOps.sml
	../C6/instruction/C6Shuffle.sig
	../C6/instruction/C6Shuffle.sml
	../C6/instruction/C6VLIWProps.sml
	../C6/emit/C6Asm.sml
	/*C6/scheduling/C6RTDEFS.sml
	C6/scheduling/C6RTDEFS2.sml
	C6/scheduling/C6RTTables.sml
	C6/scheduling/C6RTTables2.sml*/
	../C6/scheduling/C6SchedulingProps.sml
	/* ../C6/static-single-assignment/C6SSAProps.sml */

/* lowcode.make6
 *
 * COPYRIGHT (c) 1999 Bell Labs, Lucent Technologies.
 * Subsequent changes by Jeff Prothero Copyright (c) 2010,
 * released under Gnu Public Licence version 3.
 * This library contains only the core lowcode stuff.  There are
 * architecture-specific files for the various supported machines.
 */
