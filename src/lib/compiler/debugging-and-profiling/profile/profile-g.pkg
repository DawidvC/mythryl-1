# profile-g.pkg
#
#
# User interface for controling profiling.

# Compiled by:
#     src/lib/compiler/debugging-and-profiling/debugprof.make6

generic package profiling_control_ui_g (

    package prof_dictionary: Prof_Dictionary;				# Prof_Dictionary		is from   src/lib/compiler/debugging-and-profiling/profile/prof-env.pkg

    pervasive:  { get: Void -> prof_dictionary::Dictionary,
		  set: prof_dictionary::Dictionary -> Void
                };
)
: (weak)
Profile								# Profile		is from   src/lib/compiler/debugging-and-profiling/profile/profile.api
{

    package pc  = runtime_internals::profiling_control;		# runtime_internals	is from   src/lib/std/src/nj/runtime-internals.pkg

    report	=  profile::report;
    report_all	=  profile::report_all;
    report_data	=  profile::report_data;

    my prof_mode:  Ref( Bool )
        =
        runtime_internals::profiling_control::prof_mode;

    stipulate
        pervasive_done = REF FALSE;
    herein
        fun do_pervasive ()
            =
	    if   (not *pervasive_done)
                
		 pervasive_done := TRUE;

		 control_print::say
		     "Creating profiled version of standard library\n";

		 prof_dictionary::replace  pervasive;
            fi;
    end;


    fun set_profile_mode TRUE
            =>
            {   do_pervasive ();
                prof_mode := TRUE;
            };

        set_profile_mode FALSE
            =>
            prof_mode := FALSE;
    end;


    fun get_profile_mode ()
        =
        *prof_mode;


    fun set_timing_mode TRUE  =>  pc::profile_on  ();
        set_timing_mode FALSE =>  pc::profile_off ();
    end;


    get_timing_mode
        =
        pc::get_timing_mode;


    reset =  profile::reset;
};


# COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
