## picklehash-dictionary.pkg
## (C) 2001 Lucent Technologies, Bell Labs

# Compiled by:
#     src/lib/compiler/front/basics/basics.make6



# Dictionaries that bind pickle hashes (compiled Mythryl file identifiers).
#
# These get macro expanded to linking and inlining dictionaries by the compiler.



generic package picklehash_dictionary_g ( Naming;)
: (weak)
Picklehash_Dictionary		# Picklehash_Dictionary	is from   src/lib/compiler/front/basics/mlcomp/picklehash-dictionary.api
    where  Naming == Naming
=
package {

    Naming     =   Naming;
    Dictionary =   picklehash_map::Map( Naming );

    empty   =   picklehash_map::empty;



    fun get  picklehash_map  picklehash
        =
        picklehash_map::get (picklehash_map, picklehash);


    fun bind (picklehash, value, picklehash_map)
        =
        picklehash_map::set (picklehash_map, picklehash, value);


    fun atop (picklehash_map1, picklehash_map2)
        =
        picklehash_map::union_with #1 (picklehash_map1, picklehash_map2);


    fun remove (picklehash_list, picklehash_map)
        =
	fold_right
	    remove'
	    picklehash_map
	    picklehash_list
        where

            fun remove' (picklehash, picklehash_map)
                =
		new_map
                where 

                    my  (new_map, _)
                        =
                        picklehash_map::drop ( picklehash_map, picklehash );
		end
                except
                    e = picklehash_map;
	end;


    fun consolidate  picklehash_map
        =
        picklehash_map;


    fun singleton (picklehash, value)
        =
        bind (picklehash, value, empty);


    fun keyvals_list  picklehash_map
        =
        picklehash_map::keyvals_list  picklehash_map;


    fun from_listi  keyval_pairlist
        =
        fold_left  picklehash_map::set'  empty  keyval_pairlist;


    fun make (NULL,          _         ) =>   empty;
        make (_,              NULL     ) =>   empty;
        make (THE picklehash, THE value) =>   singleton (picklehash, value);
    end;
};
