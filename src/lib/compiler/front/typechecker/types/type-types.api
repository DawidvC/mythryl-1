## type-types.api 
 
# Compiled by:
#     src/lib/compiler/front/typechecker/typecheck.make6


api Type_Types {

    arrow_stamp:  stamp::Stamp;
    arrow_tycon:  types::Type_Constructor; 

    --> : (types::Type, types::Type) -> types::Type;

    is_arrow_type:  types::Type -> Bool;
    domain:         types::Type -> types::Type;
    range:          types::Type -> types::Type;

    int_tycon:      types::Type_Constructor;     int_type:       types::Type;
    int32tycon:     types::Type_Constructor;     int32type:      types::Type;
    int64tycon:     types::Type_Constructor;     int64type:      types::Type;
    intinf_tycon:   types::Type_Constructor;     big_int_type:   types::Type;
    real_tycon:     types::Type_Constructor;     real_type:      types::Type;
    word_tycon:     types::Type_Constructor;     word_type:      types::Type;
    word8tycon:     types::Type_Constructor;     word8type:      types::Type;
    word32tycon:    types::Type_Constructor;     word32type:     types::Type;
    word64tycon:    types::Type_Constructor;     word64type:     types::Type;
    string_tycon:   types::Type_Constructor;     string_type:    types::Type;
    char_tycon:     types::Type_Constructor;     char_type:      types::Type;
    exn_tycon:      types::Type_Constructor;     exception_type: types::Type;

    fate_type:           types::Type_Constructor; 
    control_fate_type:   types::Type_Constructor; 
    array_tycon:                 types::Type_Constructor; 
    vector_tycon:                types::Type_Constructor;

    chunk_tycon:                 types::Type_Constructor;
    c_function_tycon:            types::Type_Constructor;
    word8array_tycon:            types::Type_Constructor;
    real64array_tycon:           types::Type_Constructor;
    spinlock_tycon:              types::Type_Constructor;

    void_tycon:                  types::Type_Constructor; 
    void_type:                   types::Type;

    record_type:   List ((types::Label, types::Type)) -> types::Type;
    tuple_type:    List( types::Type ) -> types::Type;

   #  get the types of a tuple-type's fields 

    get_fields:  types::Type -> Null_Or( List( types::Type ) );

    bool_signature:    var_home::Constructor_Signature;

    bool_tycon:  types::Type_Constructor; 
    bool_type:   types::Type;

    false_dcon:  types::Constructor;
    true_dcon:   types::Constructor;

   #  Unnecessary; removed by appel
   #  my optionTycon:  types::Type_Constructor 
   #  my NONEDcon:  types::Constructor
   #  my SOMEDcon:  types::Constructor


    ref_tycon:         types::Type_Constructor; 
    ref_pattern_type:  types::Type;
    ref_dcon:          types::Constructor;

    list_tycon:        types::Type_Constructor; 
    nil_dcon:          types::Constructor;
    cons_dcon:         types::Constructor;

    ulist_tycon:       types::Type_Constructor; 
    unil_dcon:         types::Constructor;
    ucons_dcon:        types::Constructor;

    frag_tycon:        types::Type_Constructor;
    antiquotedcon:     types::Constructor;
    quotedcon:         types::Constructor;

    susp_tycon:        types::Type_Constructor;       
    susp_pattern_type: types::Type;        
    dollar_dcon:       types::Constructor;    

}; #  Api Type_Types 


## Copyright 1996 by AT&T Bell Laboratories 
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
