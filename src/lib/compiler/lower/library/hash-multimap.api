
# Multimap enum that uses hashing.
#
# -- allen


api HASH_MULTIMAP =
api

   type multimap( X, Y )

   my create:  { order:  X * X -> order,
                  hash:   X -> Int,
                  exn:    exn
                } -> Int -> multimap( X,Y ) 

   my size:        multimap( X,Y ) -> Int
   my bucketSize:  multimap( X,Y ) -> Int
   my is_empty:    multimap( X,Y ) -> Bool
   my insert:      multimap( X,Y ) -> (X * Y) -> Void
   my update:      multimap( X,Y ) -> (X * List( Y )) -> Void
   my removeAll:   multimap( X,Y ) -> X -> Void
   my lookup:      multimap( X,Y ) -> X -> List( Y )
   my toList:      multimap( X,Y ) -> List( X * List( Y ) )
   my toDupList:   multimap( X,Y ) -> List( X * Y )
   my clear:       multimap( X,Y ) -> Void
   my contains:    multimap( X,Y ) -> X -> Bool
   my count:       multimap( X,Y ) -> X -> Int
   my apply:       (X * List( Y ) -> Void) -> multimap( X,Y ) -> Void
   my dupApp:      (X * Y -> Void) -> multimap( X,Y ) -> Void
   my fold:        ((X * List( Y )) * Z -> Z) -> Z 
                        -> multimap( X,Y ) -> Z
   my dupFold:     ((X * Y) * Z -> Z) -> Z -> multimap( X,Y ) -> Z
   my to_string:   ((X -> String) * (Y -> String)) -> multimap( X,Y )
                        -> String

end

