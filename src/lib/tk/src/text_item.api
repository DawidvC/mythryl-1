#  ***********************************************************************
# 
#    Project: sml/Tk: an Tk Toolkit for sml
#    Author: Stefan Westmeier, University of Bremen
#     $Date: 2001/03/30 13:38:57 $
#     $Revision: 3.0 $
#    Purpose of this file: Functions related to Text Widget Annotations
# 
#  ***********************************************************************

# Compiled by:
#     src/lib/tk/src/tk.make6

#                      "If you would destroy a man utterly
#                       make all his dreams come true: There
#                       is no hope for those bereft of dreams"



api Text_Item {

    exception TEXT_ITEM  String;

    Widget_Pack_Fun;   #  = Bool -> TclPath -> IntPath -> Widget -> String           
    Widget_Add_Fun;    #  = Widget List -> Widget -> Widget_Path -> Widget List          
    Widget_Del_Fun;    #  = Widget List -> Widget_ID  -> Widget_Path -> Widget List          
    Widget_Upd_Fun;    #  = Widget List -> Widget_ID  -> Widget_Path -> Widget-> Widget List 

    Widget_Add_Func;   #  = Window_ID -> Widget_Path -> Widget -> Void                       
    Widget_Del_Func;   #  = Widget_ID -> Void                                            


    sel_text_wid_wid_id:        basic_tk_types::Widget -> basic_tk_types::Widget_Id;
    get_text_widget_scrollbars:   basic_tk_types::Widget -> basic_tk_types::Scrollbars_At;
    get_text_widget_livetext:     basic_tk_types::Widget -> basic_tk_types::Live_Text;
    get_text_widget_text:         basic_tk_types::Widget -> String;
    get_text_widget_text_items:  basic_tk_types::Widget -> List( basic_tk_types::Text_Item );
    sel_text_wid_pack:         basic_tk_types::Widget -> List( basic_tk_types::Packing_Hint );
    sel_text_wid_configure:    basic_tk_types::Widget -> List( basic_tk_types::Trait );
    sel_text_wid_naming:      basic_tk_types::Widget -> List( basic_tk_types::Event_Callback );

#	my updTextWidWidId:        basic_tk_types::Widget -> basic_tk_types::Widget_ID -> 
#                                  basic_tk_types::Widget

    update_text_widget_scrollbars: basic_tk_types::Widget -> basic_tk_types::Scrollbars_At -> 
			       basic_tk_types::Widget;

# 	my updTextWidText:         basic_tk_types::Widget -> String -> basic_tk_types::Widget       

    update_text_widget_annotations: basic_tk_types::Widget -> List( basic_tk_types::Text_Item      ) -> basic_tk_types::Widget;
    upd_text_wid_pack:                 basic_tk_types::Widget -> List( basic_tk_types::Packing_Hint   ) -> basic_tk_types::Widget;
    upd_text_wid_configure:            basic_tk_types::Widget -> List( basic_tk_types::Trait          ) -> basic_tk_types::Widget;
    upd_text_wid_naming:              basic_tk_types::Widget -> List( basic_tk_types::Event_Callback ) -> basic_tk_types::Widget;
    get_text_wid_widgets:              basic_tk_types::Widget -> List( basic_tk_types::Widget         );

    get_text_wid_annotation_widget_ass_list:
			     basic_tk_types::Widget -> 
			      List( (basic_tk_types::Text_Item, List( basic_tk_types::Widget )) );

    add_text_wid_widget:  (Widget_Add_Fun) ->
			     basic_tk_types::Widget -> basic_tk_types::Widget -> 
			     basic_tk_types::Widget_Path -> basic_tk_types::Widget;

    delete_text_wid_widget: (Widget_Del_Fun) -> 
			     basic_tk_types::Widget -> basic_tk_types::Widget_Id -> 
			     basic_tk_types::Widget_Path -> basic_tk_types::Widget;
    upd_text_wid_widget: (Widget_Upd_Fun) -> 
			     basic_tk_types::Widget -> basic_tk_types::Widget_Id -> 
			     basic_tk_types::Widget_Path -> basic_tk_types::Widget -> 
			     basic_tk_types::Widget;


    sel_annotation_type:             basic_tk_types::Text_Item -> basic_tk_types::Text_Item_Type;
    get_text_item_id:               basic_tk_types::Text_Item -> basic_tk_types::Text_Item_Id;
    sel_annotation_configure:        basic_tk_types::Text_Item -> List( basic_tk_types::Trait );
    sel_annotation_naming:          basic_tk_types::Text_Item -> List( basic_tk_types::Event_Callback );
    get_text_item_marks:            basic_tk_types::Text_Item -> List ((basic_tk_types::Mark, basic_tk_types::Mark));
    get_text_widget_subwidgets:   basic_tk_types::Text_Item -> List( basic_tk_types::Widget );

    is_annotation_grid:  basic_tk_types::Text_Item -> Bool;

    upd_annotation_configure:  basic_tk_types::Text_Item -> List( basic_tk_types::Trait ) -> basic_tk_types::Text_Item;

    upd_annotation_naming:    basic_tk_types::Text_Item -> List( basic_tk_types::Event_Callback ) -> basic_tk_types::Text_Item;

    update_text_item_subwidgets:    basic_tk_types::Text_Item -> List( basic_tk_types::Widget ) -> basic_tk_types::Text_Item;

#	my updItemWidgetConfigure:  Canvas_Item -> List( Trait ) -> Canvas_Item
#	my update_canvas_item_canvas_items:            Canvas_Item -> List( Canvas_Item_ID )  -> Canvas_Item
#	my update_canvas_item_icon:             Canvas_Item -> IconKind       -> Canvas_Item



    get:         basic_tk_types::Widget -> basic_tk_types::Text_Item_Id -> basic_tk_types::Text_Item;
    get_naming_by_name
		  : basic_tk_types::Widget -> basic_tk_types::Text_Item_Id -> String ->
		    basic_tk_types::Callback;

    upd:         basic_tk_types::Widget -> basic_tk_types::Text_Item_Id -> basic_tk_types::Text_Item -> 
		    basic_tk_types::Widget;

    add:         Widget_Pack_Fun -> 
		    basic_tk_types::Widget -> basic_tk_types::Text_Item -> basic_tk_types::Widget;
    delete:      Widget_Del_Func -> 
		    basic_tk_types::Widget -> basic_tk_types::Text_Item_Id -> basic_tk_types::Widget;


    add_annotation_configure:  basic_tk_types::Widget -> basic_tk_types::Text_Item_Id -> List( basic_tk_types::Trait          ) -> basic_tk_types::Widget;
    add_annotation_naming:    basic_tk_types::Widget -> basic_tk_types::Text_Item_Id -> List( basic_tk_types::Event_Callback ) -> basic_tk_types::Widget;


    pack:  Widget_Pack_Fun -> basic_tk_types::Tcl_Path -> basic_tk_types::Int_Path -> basic_tk_types::Text_Item -> String;


    new_id:    Void -> basic_tk_types::Canvas_Item_Id;
    new_fr_id:  Void -> basic_tk_types::Widget_Id;


    read_selection:  basic_tk_types::Widget -> List ((basic_tk_types::Mark, basic_tk_types::Mark));

    read_marks:  basic_tk_types::Widget -> basic_tk_types::Text_Item_Id -> List ((basic_tk_types::Mark, basic_tk_types::Mark));

};
