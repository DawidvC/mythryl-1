## typecheck-data-control.pkg
## (C) 2001 Lucent Technologies, Bell Labs

# Compiled by:
#     src/lib/compiler/front/typecheck-stuff/typecheckdata.make6


package typecheck_data_control: (weak)  Typecheck_Data_Control {		# Typecheck_Data_Control	is from   src/lib/compiler/front/typecheck-stuff/main/typecheck-data-control.api

    priority = [10, 10, 7];
    obscurity = 6;
    prefix = "ed";

    registry						# More yucky thread-hostile global mutable state. :( XXX BUGGO FIXME
        =
        control_index::make { help => "typechecker datastructures" };
											my _ = 
    basic_control::note_subindex (prefix, registry, priority);

    convert_boolean
        =
        control_utilities::convert::bool;

    nextpri =  REF 0;

    fun make (name, help, initial_value)
        =
	state
        where
            state    =  REF initial_value;
	    priority =  *nextpri;

	    control
                =
                control::control
                    {
                      name,
		      help,
		      pri       => [priority],		# "pri" should probably be renamed "menu_location" or such.
		      obscurity,
		      control   => state
		    };
	
	    nextpri := priority + 1;



	    control_index::note_control

		registry

		{ control
                      =>
                      control::string_control  convert_boolean  control,

		  dictionary_name
                      =>
                      THE (control_utilities::dictionary_name::to_upper  "ED_"  name)
                };
	end;

    remember_highcode_variable_names
        =
        make ("remember_highcode_variable_names", "?", TRUE);	# XXX BUGGO FIXME This should be FALSE for production use.

    expand_generics_g_debugging    	= make ("expand_generics_g_debugging",    	"?", FALSE);
    typechecker_dictionary_debugging    = make ("typechecker_dictionary_debugging",	"?", FALSE);
    module_stuff_debugging         	= make ("module_stuff_debugging",		"?", FALSE);

    type_stuff_debugging           	= make ("type_stuff_debugging",			"?", FALSE);
    types_debugging                	= make ("types_debugging",			"?", FALSE);
    translate_to_anormal_debugging 	= make ("translate_to_anormal_debugging",	"?", FALSE);
};
