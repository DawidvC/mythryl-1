## infer-constructor-representation.pkg 

# Compiled by:
#     src/lib/compiler/front/typechecker/typecheck.make6

api Enum_Constructor_Representation {

     infer:  Bool                                              #  "isRecursive" 
             -> List( (symbol::Symbol, Bool, types::Type) )
	     -> ((List( var_home::Constructor_Form), var_home::Constructor_Signature));

};


package datatype_constructor_representation: (weak)  Enum_Constructor_Representation {		# Enum_Constructor_Representation	is from   src/lib/compiler/front/typechecker/basics/infer-constructor-representation.pkg

    stipulate

	include var_home;
	include types;

    herein 

	fun err s
            =
            error_message::impossible ("Conrep: " + s);

	fun count predicate l
            =
	    {   fun test (a ! rest, acc)   =>   test (rest, if (predicate a ) 1+acc; else acc;fi);
		   test (NIL,    acc)   =>   acc; end;

                test (l, 0);
	    };

	fun reduce type
            =
	    case (type_stuff::head_reduce_type  type)

	        TYPE_SCHEME_TYPE { type_scheme => TYPE_SCHEME { body, ... }, ... }
                    =>
                    reduce body;

	        other => other;
            esac;

	fun notconst (_, TRUE, _) => FALSE;
	/*
	  | notconst(_, _, CONSTRUCTOR_TYPE(_,[t, _])) = 
	      (case (reduce t) 
		of CONSTRUCTOR_TYPE (RECORD_TYPE NIL, _) => FALSE
		 | _ => TRUE)
	*/
	   notconst _ => TRUE;
        end;

	# fun show ((symbol, _, _) ! syms, r ! rs) = 
	#      (print (symbol::name symbol); print ":   "; 
	#      PPBasics::prettyprintDatatypeConstructorRepresentation r; print "\n"; show (syms, rs))
	#   | show _ = (print "\n")


	#  The first argument indicates whether 
        #  this is a recursive enum:        

	fun infer FALSE ([(_, FALSE, CONSTRUCTOR_TYPE(_,[type, _]))])
		=> 
		case (reduce type) 
		     # The TRANSPARENT Constructor_Form is temporarily turned off;
		     # it should be working very soon. Ask zsh. XXX BUGGO FIXME
		     #
#    	         (CONSTRUCTOR_TYPE (RECORD_TYPE NIL, _)) => ([CONSTANT 0], CSIG (0, 1))
		     _ => ([UNTAGGED], CONSTRUCTOR_SIGNATURE (1, 0));
		esac;

	    infer _ cons
		=>
		decide (0, 0, cons, [])
                where

		    multiple = (count notconst cons) > 1;

		    fun decide (ctag, vtag, (_, TRUE, _) ! rest, reps)
			    => 
			    if ( multiple
				 and
				 *typechecking_control::boxedconstconreps
			    )
				 decide (ctag,   vtag+1, rest, (TAGGED   vtag) ! reps);
			    else decide (ctag+1, vtag,   rest, (CONSTANT ctag) ! reps);
			    fi;

			decide (ctag, vtag, (_, FALSE, CONSTRUCTOR_TYPE(_,[type, _])) ! rest, reps)
			    =>
			    case (reduce type, multiple)

			         #  XXX BUGGO FIXME 
				 #
#				 (CONSTRUCTOR_TYPE (RECORD_TYPE NIL, _), _)
#                                    => 
#				     decide (ctag+1, vtag, rest, (CONSTANT ctag) ! reps)

				(_, TRUE)  => decide (ctag, vtag+1, rest, (TAGGED vtag) ! reps);
				(_, FALSE) => decide (ctag, vtag+1, rest, (UNTAGGED     ! reps));
			    esac;


		       decide (_, _, _ ! _, _) => err "unexpected Constructor_Form-decide";
		       decide (ctag, vtag, [], reps) => (reverse reps, CONSTRUCTOR_SIGNATURE (vtag, ctag));
		    end;
		end;
        end;

	# ** infer = fn l => let l' = infer l in show (l, l'); l' end **

    end; #  local 

};     #  package DatatypeConstructorRepresentation 




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Copyright 1996 by AT&T Bell Laboratories 
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
