## old-threadkit.api



# This is essentially the 0.9.8 version of the core threadkit interface.
# The only thing missing is poll and the low-level I/O synchronization.
# Also, there is an additional subpackage (new_threadkit), to allow access
# to the new features.


api Old_Threadkit =
  api

    package new_threadkit:  Threadkit

    my version:  { major:  Int, minor:  Int, reverse:  Int, date:  String }
    my versionName:  String

  # * events *
    type event( X )

    my sync:    event( X ) -> X
    my select:  List( event( X ) ) -> X

    my choose:   List( event( X ) ) -> event( X )

    my guard:  (Void -> event( X )) -> event( X )

    my wrap:         (event( X ) * (X -> Y)) -> event( Y )
    my wrapHandler:  (event( X ) * (exn -> X)) -> event( X )
    my wrapAbort:    (event( X ) * (Void -> Void)) -> event( X )

    my always:  X -> event( X )
    my ALWAYS:  event( Void ) # * for backward compatibility *

  # * threads *
    type thread_id

    my make_thread:  (Void -> Void) -> thread_id

    my yield:  Void -> Void
    my exit:  Void -> X

    my getTid:  Void -> thread_id
    my sameThread:  (thread_id * thread_id) -> Bool
    my tidLessThan:  (thread_id * thread_id) -> Bool
    my tidToString:  thread_id -> String

    my threadWait:  thread_id -> Void event

  # * condition variables *
    type cond_var( X )

    my condVariable:  Void -> $1a cond_var

    my writeVariable:  (cond_var( X ) * X) -> Void
    exception WriteTwice

    my readVariable:  cond_var( X ) -> X
    my readVarEvt:  cond_var( X ) -> event( X )

  # * channels *
    type chan( X )

/* +DEBUG **
my dumpCh:  chan( X ) -> String
** -DEBUG */
    my channel:  Void -> $1a chan

    my send:    (chan( X ) * X) -> Void
    my sendc:   chan( X ) -> X -> Void
    my accept:  chan( X ) -> X

    my sameChannel:  (chan( X ) * chan( X )) -> Bool

    my transmit:   (chan( X ) * X) -> Void event
    my transmitc:  chan( X ) -> X -> Void event
    my receive:    chan( X ) -> event( X )

  # * real-time synchronization *
    my waitUntil:  time::time -> Void event
    my timeout:    time::time -> Void event

  end #  Api CONCUR_LIB7 


## COPYRIGHT (c) 1990 by John H. Reppy.  See COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
