#!@SHELL@

if [ x${LIB7_HOME} = x ] ; then
    BIN_DIR="@BIN_DIR@"
else
    BIN_DIR=${LIB7_HOME}/bin
fi
MYTHRYLD=$BIN_DIR/mythryld

mf=""
xx=$$
tmpmf=$xx-makefile
mlscript=$xx-mlscript.pkg
thisscript=$0
archos=substitute
archstring='$(ARCH)'
osstring='$(OS)'
dulist=''

# trap 'rm -f $tmpmf $mlscript' 0 1 2 3 15

usage() {
    echo $thisscript: $*
    echo Usage: $thisscript '[-f makefile] [-n] [-a arch] [-o os]' myproject.make6 target
    exit 1
}

#
# process options
#
while [ $# != 0 ] ; do
    case $1 in
    -n)
	shift
	archos=real
	;;
    -a)
	shift
	if [ $# = 0 ] ; then
	    usage
	else
	    archstring=$1
	    shift
	fi
	;;
    -o)
	shift
	if [ $# = 0 ] ; then
	    usage
	else
	    osstring=$1
	    shift
	fi
	;;
    -f)
	shift
	if [ $# = 0 ] ; then
	    usage
	else
	    mf=$1
	    shift
	fi
	if [ -f "$mf" ] ; then
	    : ok
	else
	    echo $thisscript: $mf does not exist
	    exit 1
	fi
	;;
    -D*|-U*)
	dulist="$dulist $1"
	shift
	;;
    *)
	break
	;;
    esac
done

#
# if there was no -f option, check for makefile and then Makefile
#
if [ x$mf = x ] ; then
    if [ -f makefile ] ; then
	mf=makefile
    elif [ -f Makefile ] ; then
	mf=Makefile
    else
	echo $thisscript: no makefile, no Makefile, and no -f option
	exit 1
    fi
fi

#
# get the two mandatory arguments
#
if [ $# = 2 ] ; then
    cmfile=$1
    target=$2
else
    usage
fi

if [ $archos = substitute ] ; then
    archosarg="THE { architecture => \"${archstring}\", os => \"${osstring}\" }"
else
    archosarg=NULL
fi

#
# the delimiter strings (start and end)
#
delims="# START: makedepend7 (${cmfile}:${target}); DO NOT DELETE!"
delime="# END  : makedepend7 (${cmfile}:${target}); DO NOT DELETE!"

#
# Remove previous result of makedepend7
#  (other cmfile/target combinations are unaffected)
#
awk "BEGIN { c = 1; s = \"${delims}\"; e = \"${delime}\"; }
(\$0 == s) { c = 0; next; }
(\$0 == e) { c = 1; next; }
(c == 1) { print }" <$mf >$tmpmf
cp $tmpmf $mf
rm $tmpmf

#
# construct the ML script
#
cat >$mlscript <<stop

stipulate
    archos = ${archosarg};
    lopt = make7::sources archos "${cmfile}";
in
    case lopt
    in
         NULL
             =>
	     winix::process::exit   winix::process::failure | ignore;

         THE l
             =>
             {   s = file::open "$tmpmf";

	         fun pr { derived => TRUE, file, ilk }
                         =>
                         ();

	             pr { file, ... }
                         =>
                         file::write (s, " \\\\\\n    " ^ file);
		 end;

		 file::write (s, "${delims}\\n${target}:");
		 apply pr l;
		 file::write (s, "\\n${delime}\\n");
		 file::close s;
		 winix::process::exit winix::process::success | ignore;
	     };
    esac;
end;

stop

if $MYTHRYLD '$ROOT/src/lib/core/make7/make7.make6' $dulist $mlscript ; then
    cat $tmpmf >>$mf
else
    echo $thisscript: Make7 dependency analysis failed
    exit 1
fi

exit 0
