# ***********************************************************************
#
#   Project: sml/Tk: an Tk Toolkit for sml
#   Author: Stefan Westmeier, University of Bremen
#  $Date: 2001/03/30 13:39:07 $
#  $Revision: 3.0 $
#   Purpose of this file: Functions related to "Tk-Configurations"
#
#   ***********************************************************************

# Compiled by:
#     src/lib/tk/src/tk.make6

api Config {

     get_width:     basic_tk_types::Widget -> Int;
     get_height:    basic_tk_types::Widget -> Int;
     sel_relief:    basic_tk_types::Widget -> basic_tk_types::Relief_Kind;
     get_livetext_text:      basic_tk_types::Widget -> String;
     sel_command:   basic_tk_types::Widget -> basic_tk_types::Void_Callback;

     sel_scommand:  basic_tk_types::Widget -> basic_tk_types::Real_Callback;

     get_menu_item_width:    basic_tk_types::Menu_Item -> Int;
     get_menu_item_relief_kind:   basic_tk_types::Menu_Item -> basic_tk_types::Relief_Kind;
     get_menu_item_text:     basic_tk_types::Menu_Item -> String;
     get_menu_item_callback:  basic_tk_types::Menu_Item -> basic_tk_types::Void_Callback;

     conf_eq:  basic_tk_types::Trait -> basic_tk_types::Trait -> Bool;
     conf_name:  basic_tk_types::Trait -> String;
     no_dbl_p:  List( basic_tk_types::Trait ) -> Bool;

     add:     List( basic_tk_types::Trait ) -> List( basic_tk_types::Trait ) ->
		 List( basic_tk_types::Trait );
     new:     basic_tk_types::Widget_Type -> List( basic_tk_types::Trait ) ->
		 List( basic_tk_types::Trait ) -> List( basic_tk_types::Trait );

     pack:    basic_tk_types::Int_Path -> List( basic_tk_types::Trait ) -> String;
     pack_m:   basic_tk_types::Int_Path -> List( Int ) ->
		 List( basic_tk_types::Trait ) -> String;

     show_all_print_conf:  List( basic_tk_types::Trait ) -> String;

     read_casc_path:  String -> List( Int );

    #  ### geh÷rt hier nicht her 
     pack_info:  List( basic_tk_types::Packing_Hint ) -> String;
     grid_info:  List( basic_tk_types::Packing_Hint ) -> String;

     show_icon_kind:        basic_tk_types::Icon_Variety -> String;

     show_state:           Bool -> String;

     show_real:            Float -> String;

     window_conf_eq:           basic_tk_types::Window_Trait -> 
			     basic_tk_types::Window_Trait -> Bool;

     add_window_conf:          List( basic_tk_types::Window_Trait ) -> 
			     List( basic_tk_types::Window_Trait ) -> 
			     List( basic_tk_types::Window_Trait );

     sel_window_aspect:        basic_tk_types::Window -> 
			     null_or::Null_Or( (Int, Int, Int, Int) );

     sel_window_shape:      basic_tk_types::Window -> 
			      null_or::Null_Or(
				 ((null_or::Null_Or( (Int, Int) )) ,
				 (null_or::Null_Or( (Int, Int) )))   );

/*	my selWinIcon:          Window -> null_or::Null_Or( IconKind )
    my selWinIconMask:      Window -> null_or::Null_Or( IconKind )
    my selWinIconName:      Window -> null_or::Null_Or( String )
*/ 
     sel_window_max_size:       basic_tk_types::Window -> null_or::Null_Or( (Int, Int) );
     sel_window_min_size:       basic_tk_types::Window -> null_or::Null_Or( (Int, Int) ); 
     sel_window_position_from:  basic_tk_types::Window -> null_or::Null_Or( basic_tk_types::User_Kind );
     sel_window_size_from:      basic_tk_types::Window -> null_or::Null_Or( basic_tk_types::User_Kind );
     sel_window_title:         basic_tk_types::Window -> null_or::Null_Or( basic_tk_types::Title );
     sel_window_group:         basic_tk_types::Window -> null_or::Null_Or( basic_tk_types::Window_Id );
     sel_window_transient:     basic_tk_types::Window -> null_or::Null_Or( null_or::Null_Or( basic_tk_types::Window_Id ) );
     sel_window_override:      basic_tk_types::Window -> null_or::Null_Or( Bool );

     pack_window_conf:  String -> basic_tk_types::Window_Trait -> String;
};
