## unimplemented-c-calls.pkg

# Compiled by:
#     src/lib/compiler/lower/make7/lowcode.make6


#  A dummy (placeholder) "implementation" of the c-calls interface.

# We are nowhere invoked:

generic package unimplemented_c_calls_g (

    package codetree: Codetree;		# Codetree	is from   src/lib/compiler/lower/codetree/codetree.api

    impossible: String -> X;
)

: Ansi_C_Calls				# Ansi_C_Calls	is from   src/lib/compiler/lower/c-calls/c-calls.api
  where codetree == codetree

=
package {

    package codetree = codetree;

    package t = codetree;

    Ckit_Arg 
	= ARG   t::Int_Expression	
	| FARG  t::Float_Expression
	| ARGS  List( Ckit_Arg );

    fun gen_call _ = impossible "C-calls not implemented (genCall)";

    param_area_offset = 0;

    natural_int_size = 32;

    Arg_Location
	= REG   (t::Some_Type,  t::Reg, Null_Or( t::machine_int::Machine_Int ))
	| FREG  (t::Fty,        t::Reg, Null_Or( t::machine_int::Machine_Int ))
	| STK   (t::Some_Type,  t::machine_int::Machine_Int)
	| FSTK  (t::Fty,        t::machine_int::Machine_Int)
	| ARG_LOCS  List( Arg_Location );

    fun layout _ = impossible "C-calls not implemented (layout)";

    my callee_save_regs:   List( t::Reg ) = [];
    my callee_save_fregs:  List( t::Reg ) = [];
};


## Copyright (c) 2004 by The Fellowship of SML/NJ
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
