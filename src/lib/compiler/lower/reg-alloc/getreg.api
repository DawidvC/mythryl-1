
# Compiled by:
#     src/lib/compiler/lower/make7/lowcode.make6

# A simple round robin based register allocator.
# Now with the ability to get register pairs.
# -- Allen Leung


api Get_Register {

    exception GET_REGISTER;

    # Get a register, unconstrained but with optional preference 
    # if sub (prohibitions, r) = stamp that means the register is prohibited 
    #
    getreg:  { pref: List( Int ), stamp: Int, prohibitions: rw_vector::Rw_Vector( Int ) } -> Int; 

    # Get a register pair, must be an even/odd pair, returns the
    # even register (i.e. the smaller one)
    getpair:  { pref: List( Int ), stamp: Int, prohibitions: rw_vector::Rw_Vector( Int ) } -> Int;

    # Reset the state:
    #
    reset:  Void -> Void;
};
