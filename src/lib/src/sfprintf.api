## sfprintf.api
## AUTHOR:   John Reppy
##	    AT&T Bell Laboratories
##	    Murray Hill, NJ 07974
##	    jhr@research.att.com

# Compiled by:
#     src/lib/src/lib7.make6



# Formatted conversion to and from strings.

# Api is implemented by:
#     src/lib/src/sfprintf.pkg

api Sfprintf {

    Printf_Arg
	= QUICKSTRING   quickstring::Quickstring
	| LINT   large_int::Int
	| INT    int::Int
	| LUNT   large_unt::Unt
	| UNT    unt::Unt
	| UNT8   unt8::Unt
	| BOOL   Bool
	| CHAR   Char
	| STRING String
	| FLOAT  float::Float
	| LFLOAT large_float::Float
	| LEFT  ((Int, Printf_Arg))		#  Left  justify in field of given width.
	| RIGHT ((Int, Printf_Arg));		#  Right justify in field of given width.

    exception BAD_FORMAT String;		#  Bad format string 
    exception BAD_FORMAT_LIST;			#  raised on specifier/item type mismatch 

    sprintf':                          String -> List( Printf_Arg ) -> String;
    fnprintf': (String -> Void)     -> String -> List( Printf_Arg ) -> Void;
    fprintf':   file::Output_Stream -> String -> List( Printf_Arg ) -> Void;
    printf':                           String -> List( Printf_Arg ) -> Void;



    # Obscure stuff

    # The following few can be used to mechanically
    # synthesize an appropriate arglist from a
    # sfprintf format string like "%d %6.2f\n"

    parse_format_string_into_printf_field_list		# Digest a printf-style format string  like "This is %d %2.3f"
        :						# into a list of Printf_Field records -- see src/lib/src/printf-field.pkg
        String -> List( printf_field::Printf_Field );

    printf_field_type_to_printf_arg_list
	:
        printf_field::Printf_Field_Type
        ->
	List( Printf_Arg );

};


## COPYRIGHT (c) 1992 by AT&T Bell Laboratories.  See COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
