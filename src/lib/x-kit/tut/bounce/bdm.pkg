## bounce-dm.pkg

# Compiled by:
#     src/lib/x-kit/tut/bounce/bounce.make6

stipulate
    include  threadkit;
    #
    package xc =  xcore;			# xcore		is from   src/lib/x-kit/xclient/xcore.pkg
    package xd =  xdraw;			# xdraw		is from   src/lib/x-kit/xclient/xdraw.pkg
    package xg =  xgeometry;			# xgeometry	is from   src/lib/x-kit/xclient/xgeometry.pkg
    package xw =  xwindow;			# xwindow	is from   src/lib/x-kit/xclient/xwindow.pkg
herein

    package bounce_dm {

	Dm_Msg
	  = DRAW_BALL  (Int, xc::Ro_Pixmap, geometry::Point)
	  | ERASE_BALL (Int, xc::Ro_Pixmap, geometry::Point)
	  | REDRAW Int
	  ;

	# The bounce DM is actually responsible
	# for drawing the heads:
	#
	fun bounce_dm  window
	    =
	    {   draw_slot = make_mailslot ();

		display = display_of_window  window;

		pen = xd::make_pen [
			xd::PV_FUNCTION xd::OP_XOR,
			xd::PV_FOREGROUND color1,
			xd::PV_BACKGROUND color0
		      ]

		drawable
		    =
		    xd::drawable_of_window
			window;

		fun redraw ()
		    =
		    xd::clear_drawable
			drawable;

		fun draw (icon, pt)
		    =
		    {   (geom_of_ro_pixmap  icon)
			    =>
			    { pos  => POINT { x, y },
			      size => SIZE { wide, high },
			      ...
			    };

			xd::texture_blt  drawable  pen
			  {
			    from   =>  icon,
			    to_pos =>  pt
			  };
		    };

		mailop = take' draw_slot;

		fun loop1 seqn
		    =
		    case (poll mailop)
			#
			NULL
			    =>
			    loop2 seqn;

			THE (DRAW_BALL (n, pm, pt))
			    =>
			    {   if (n == seqn)   draw (pm, pt);   fi;
				loop1 seqn;
			    };

			THE (ERASE_BALL (n, pm, pt))
			    =>
			    {   if (n == seqn)   draw (pm, pt);  fi;
				loop1 seqn;
			    };

			THE (REDRAW n)
			    =>
			    {   redraw ();
				loop1 n;
			    };
		    esac

		also
		fun loop2 seqn
		    =
		    case (do_mailop  mailop)
			#
			DRAW_BALL (n, pm, pt)
			    =>
			    if (n == seqn)
				#
				draw (pm, pt);
				loop1 seqn;
			    else
				loop2 seqn;
			    fi;

			ERASE_BALL (n, pm, pt)
			    =>
			    if (n == seqn)
				#
				draw (pm, pt);
				loop1 seqn;
			    else
				loop2 seqn;
			    fi;

			REDRAW n
			    =>
			    {   redraw();
				loop2 n;
			    };
		    esac;

		  xtracing::xspawn("bounce_dm", fn () => loop2 0);

		  draw_slot;
	    }					# fun     bounce_dm
    };						# package bounce_dm

end;

## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
