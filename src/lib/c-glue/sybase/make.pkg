fun make file = if CM.make file then () else raise exception FAIL("Can't load "$file);
fun again () = run "make.pkg";

make "../ffi-packager/ffi-packager.cm";

/*---------------------------------------------------------------------------
 * 
 * This program drives the sml-sybase library packaging process
 *
 *---------------------------------------------------------------------------*/
package p =
gift_wrap_g
(  use ffi_packager
   use gift_wrap_defaults
   package a = Ast
  
   name     = "sybase"
   name'    = "sybase"
   version  = "0.1"
   enums    = [("sybase-enums.sml", "SybaseEnums", "")]
   defines  = [("sybase-macros.sml", "SybaseMacros",
                     [
                      ("^[A-MO-Z]|N[A-TV-Z]", FALSE)         #  filter out NULL 
                     ]
                   )
                  ]

   fun make_accessors _
       =
       TRUE

   /* dbxlate/dbtabname is a function and a struct! 
    * We'll capitalize the package names. 
    */

   fun su_files (info, prog)
       =
       {   name = Str.name prog;

	   fun capitalize n
               =
               str (char.to_upper (string.sub (n, 0))) $
			   string.extract (n, 1, NULL);

           name := capitalize *name;
       }

   /* Sybase header files are based on very very old C. 
    * They haven't heard of using const consistently yet.
    */

   local
       use ffi_transforms
       infix ||
   in
       String =
	    ForeachParam (Do [
		If (TyIs "ro uchar_obj ptr'" || TyIs "rw uchar_obj ptr'") 
		    StringArg,
		If (TyIs "ro uchar_obj ptr'" || TyIs "rw uchar_obj ptr'")
		     StringRet])
   end

   fun init info
       = 
       (   Tr.declare info "^f-" (FastString o BoolIfCtypeIs "bool")
       )
)
