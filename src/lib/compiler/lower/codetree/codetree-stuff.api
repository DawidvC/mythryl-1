## codetree-stuff.api
#
# This module provides various generic Codetree transformations.
# Basically, we want to support various non built-in enum widths.
# This module handles the translation. 
#
# -- Allen Leung

# Compiled by:
#     src/lib/compiler/lower/make7/lowcode.make6

api Codetree_Stuff {

    package codetree:	   Codetree;		# Codetree	is from   src/lib/compiler/lower/codetree/codetree.api

    package size
        :
        Codetree_Size				# Codetree_Size	is from   src/lib/compiler/lower/codetree/codetree-size.api
   	where codetree == codetree;

    cond_of:   codetree::Bool_Expression -> codetree::basis::Cond;
    fcond_of:  codetree::Bool_Expression -> codetree::basis::Fcond;


    # Perform simplification:
    #
    compile_int_expression:  codetree::Int_Expression -> codetree::Int_Expression;
    compile_float_expression:  codetree::Float_Expression -> codetree::Float_Expression;
    compile_statement:   codetree::Statement  -> List( codetree::Statement );
  

    # Simulate conditional expression:
    #
    compile_cond:  
       { expression:  (codetree::Some_Type, codetree::Bool_Expression, codetree::Int_Expression, codetree::Int_Expression),
         notes:        note::Notes,
         rd:           cells_basis::Cell
       }
       ->
       List( codetree::Statement );


    compile_fcond
       :
       { expression:  (codetree::Fty, codetree::Bool_Expression, codetree::Float_Expression, codetree::Float_Expression),
         notes:        note::Notes,
         fd:           cells_basis::Cell
       }
       ->
       List( codetree::Statement );
};
