## ieee-float.api

# Compiled by:
#     src/lib/std/src/Base-imp.make6



###                  "Mr. Jones related an incident from "some time back" when
###                   IBM Canada Ltd. of Markham, Ont., ordered some parts from
###                   a new supplier in Japan. The company noted in its order
###                   that acceptable quality allowed for 1.5 per cent defects
###                   (a fairly high standard in North America at the time).
###
###                  "The Japanese sent the order, with a few parts packaged
###                   separately in plastic. The accompanying letter said: "We
###                   don't know why you want 1.5 per cent defective parts, but
###                   for your convenience, we've packed them separately."
###
###                    -- Excerpted from an article in The (Toronto) Globe and Mail



api Ieee_Float {

    exception UNORDERED_EXCEPTION;

     Real_Order = LESS | EQUAL | GREATER | UNORDERED;

     Nan_Mode = QUIET | SIGNALLING;

     Float_Ilk
      = NAN  Nan_Mode
      | INF
      | ZERO
      | NORMAL
      | SUBNORMAL;

     Rounding_Mode
      = TO_NEAREST
      | TO_NEGINF
      | TO_POSINF
      | TO_ZERO;

     set_rounding_mode:  Rounding_Mode -> Void;
     get_rounding_mode:  Void -> Rounding_Mode;

     Decimal_Approx = {
	kind:  Float_Ilk,
	sign:  Bool,
	digits:  List( Int ),
	expression:  Int
      };

     to_string:    Decimal_Approx -> String;
     from_string:  String -> Null_Or( Decimal_Approx );
     scan:  number_string::Reader (Char, X)
                 ->
	       number_string::Reader (Decimal_Approx, X);

  };




## COPYRIGHT (c) 1996 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
