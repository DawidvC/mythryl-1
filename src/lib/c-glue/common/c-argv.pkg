
package c_argv :
api
   my c_argv:  List( String ) -> 
                  c::obj' (c::sint, C) * 
                  c::obj'( c::ptr( c::obj ( c::uchar_obj( c::ptr( c::rw ) ), c::rw)), C')
   my ml_argv:   c::obj'( c::sint, C) * 
                  c::obj'( c::ptr( c::obj( c::ptr( c::uchar_obj( c::rw ) ), c::rw)), C') ->
                 List( String )
end =
pkg

   use C mlrep


   # This initialization function takes care of initializing
   # the stupid argc, argv stuff for you.

   fun c_argv []
           =
           c_argv ["???"]       #  must be at least length one or gtk+ will choke! 

     | c_argv args
	   = 
	   {   my (arr, n)
                   =
                   c_utils::c_list' (fn (s, x) => set::ptr'(s, ZString::dupML' x), 
					  s::ptr) args;

	       argc =   c_utils::new::sint' n;
	       argv =   c_utils::new::ptr' arr;

	       (argc, argv);
	   }

   fun ml_argv (argc, argv)
       =
       {   n    =   mlrep::signed::toInt (get::sint' argc);
	   argv =   get::ptr (Heavy::obj (t::pointer (t::pointer t::uchar)) argv);

	   fun f i
               = 
	       if   i >= n
               then []
               else 
		    ZString::toML (get::ptr (ptr::deref (ptr::plus(argv, i)))) . f (i+1);
           f 0;
       }

end
