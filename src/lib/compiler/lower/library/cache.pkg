#
# This is a simple cache enum.
#
# -- Allen Leung

# Compiled by:
#     src/lib/compiler/lower/make7/lib.make6


api Cache_Ref {

    Cache( X );

    cache:  (X -> Y) -> X -> Cache( Y );
    flush:  Cache( X ) -> Void;
    (!_) :  Cache( X ) -> X;
    :=   : (Cache( X ), X) -> Void;

};

package cache_ref: Cache_Ref {			# Cache_Ref	is from   src/lib/compiler/lower/library/cache.pkg

    Cache( X )
        =
        (Ref( Null_Or(X) ) , (Void -> X));


    fun cache f x
        =
        ( REF NULL,
          fn _ =  f x
        );


    fun flush (x, _)
        =
        x := NULL;


    fun !(r as REF NULL, f)    =>   { x = f();  r := THE x; x; };
        !(r as REF (THE x), f) =>   x;
    end;


    my (:=)
        =
        fn ((r, _), x)
            =
            r :=  THE x;

}; 

