## iced-o7.pkg
## (C) 1999 Lucent Technologies, Bell Laboratories
## Author: Matthias Blume (blume@kurims.kyoto-u.ac.jp)

# Compiled by:
#     src/app/make7/Make7.make6



# An .o7 file contains the result of compiling one source file.
# It contains mainly executable code and a pickled version of
# the exported symbol table:  See src/lib/compiler/execution/o7-file/oh7-file.pkg
#
# A iced_o7 record contains a summary of an
# oh7_file for use in dependency graphs and their analysis.
#
# In essence, it records what freezefile the o7 is
# packed inside, and at what offset.
#
# We only construct such records for oh7_files
# which are packed inside a freezefile -- otherwise
# we use the
#
#     Bare_O7
#
# records defined in
#
#     src/app/make7/o7/bare-o7.pkg
#
# (See the comments there for additional discussion.)
#
# A iced_o7 record includes only information
# that does not require running the machine-dependent
# part of the compiler.



###			"My pen
###                              is my harp and my lyre;
###			 my library
###                              is my garden and my orchard."
###
###                                   -- Judah Halevi 



api Iced_O7 {

    Iced_O7;

    Key    =  Iced_O7;

    Plaint_Sink
        =
        error_message::Plaint_Sink;					# error_message		is from   src/lib/compiler/front/basics/errormsg/error-message.pkg

    Source_Code_Region
        =
        source_map::Source_Code_Region;					# source_map		is from   src/lib/compiler/front/basics/source/source-map.pkg

    Picklehash
        =
        picklehash::Picklehash;						# picklehash		is from   src/lib/compiler/front/basics/mlcomp/picklehash.pkg
									# anchor_dictionary	is from   src/app/make7/paths/anchor-dictionary.pkg

    new:  {   library:               anchor_dictionary::File,		# .make6 makefile defining the library.
	      make_freezefile_name:  Void -> String,			# Fn constructing name of binary freezefile proper.	
	      plaint_sink:           Plaint_Sink,			#  Where to send link error diagnostics &tc

	      spec:                  String,				# Contents of defining .make6 makefile.
	      offset:                Int,				# Our byte offset within the containing freezefile.
	      runtime_system_pid:    Null_Or( Picklehash ),		# Special kludge supporting C-coded runtime access.

	      sharing_mode:	     sharing_mode::Mode
	  }								# sharing_mode		is from   src/app/make7/semant/sharing.pkg
	  ->
	  Iced_O7;

    compare:            (Iced_O7, Iced_O7) -> Order;

    describe:            Iced_O7 -> String;
    offset:              Iced_O7 -> Int;
    group:               Iced_O7 -> anchor_dictionary::File;

    freezefile_name:     Iced_O7 -> String;
    runtime_system_pid:  Iced_O7 -> Null_Or( Picklehash );

    sharing_mode:        Iced_O7 -> sharing_mode::Mode;
    plaint_sink:         Iced_O7 -> Plaint_Sink;
};


package iced_o7: Iced_O7 {

    Plaint_Sink        =   error_message::Plaint_Sink;		# error_message	is from   src/lib/compiler/front/basics/errormsg/error-message.pkg
    Source_Code_Region =   source_map::Source_Code_Region;	# source_map		is from   src/lib/compiler/front/basics/source/source-map.pkg
    Picklehash         =   picklehash::Picklehash;		# picklehash		is from   src/lib/compiler/front/basics/mlcomp/picklehash.pkg
								# anchor_dictionary	is from   src/app/make7/paths/anchor-dictionary.pkg
    Iced_O7
	=
	ICED_O7  {

	  library:                anchor_dictionary::File,	# .make6 makefile defining the library.
	  make_freezefile_name:  Void -> String,		# Constructs name of binary freezefile proper.
	  spec:                   String,			# Contents of defining .make6 makefile.

	  offset:                 Int,				# Our byte offset within the containing freezefile.
	  runtime_system_pid:     Null_Or( Picklehash ),	# Special kludge supporting C-coded runtime access.
	  sharing_mode:           sharing_mode::Mode,		# sharing_mode		is from   src/app/make7/semant/sharing.pkg
	  plaint_sink:            Plaint_Sink			# Where to send link error diagnostics &tc.
	};

    Key =  Iced_O7;

    new =  ICED_O7;

    fun compare (   ICED_O7 i1,
                    ICED_O7 i2
                )
        =
	case (int::compare ( i1.offset,				# int			is from   src/lib/std/int.pkg
                            i2.offset
                          ))
	  
	     EQUAL   =>  anchor_dictionary::compare (i1.library, i2.library);
	     unequal =>  unequal;
        esac;

    fun describe (ICED_O7 { library, spec, offset, ... } )
        =
	cat [ anchor_dictionary::describe library,
                 "@",
                 int::to_string offset,
                 "(", spec, ")"
               ];

    fun group               (ICED_O7 { library,                ... } ) =  library;
    fun offset              (ICED_O7 { offset,                 ... } ) =  offset;
    fun runtime_system_pid  (ICED_O7 { runtime_system_pid    => picklehash,             ... } ) =  picklehash;
    fun sharing_mode        (ICED_O7 { sharing_mode,           ... } ) =  sharing_mode;
    fun freezefile_name    (ICED_O7 { make_freezefile_name,  ... } ) =  make_freezefile_name ();

    fun plaint_sink (ICED_O7 { plaint_sink => e, ... } )
        =
        e;
};


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################
