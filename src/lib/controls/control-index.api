## control-index.api

# Compiled by:
#     src/lib/controls/controls-lib.make6





# A registry collects together string controls.
# It supports generation of help messages and
# initialization from the dictionary.

api Control_Index {

    Control_Index;

    Control_Info
        =
        { dictionary_name:  Null_Or( String ) };


    make:
        { help:  String }	#  registry's description 
        ->
        Control_Index;



    note_control		# Register a control 
	:
        Control_Index
	->
	{ control:         control::Control( String ),
	  dictionary_name: Null_Or( String )
	}
	->
	Void;



    note_control_set		# Register a set of controls 
	:
        Control_Index
	->
	{ control_set:           control_set::Control_Set (String, X),
	  make_dictionary_name:  String -> Null_Or( String )
	}
	->
	Void;



    note_subindex		# Nest a registry inside another registry 
	:
        Control_Index
	->
	{ prefix:     Null_Or( String ),
	  pri:        control::Priority,	#  registry's priority 
	  obscurity:  Int,			#  registry's detail level; higher means 
				        	#  more obscure 
	  reg:        Control_Index
	}
	->
	Void;


 
    find_control
	:
        Control_Index
        ->
        List( String )
        ->
        Null_Or( control::Control( String ) );



    set_up_controls_from_unix_environment
        :			# Initialize the controls in the registry from the unix environment: 
        Control_Index -> Void;

    Index_Tree
        =
        INDEX_TREE  {
	  path:         List( String ),
	  help:         String,
	  subregs:      List( Index_Tree ),
	  control_set:  List { control:  control::Control( String ),
                               info:  Control_Info
                             }
        };

    controls:
        ((Control_Index,  Null_Or( Int )) )
        ->
        Index_Tree;

};


## COPYRIGHT (c) 2002 Bell Labs, Lucent Technologies
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
