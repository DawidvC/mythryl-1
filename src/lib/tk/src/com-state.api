## com-state.api
## (C) 1998, ALU Freiburg
## Author: bu & behrends

# Compiled by:
#     src/lib/tk/src/tk.make6



# **************************************************************************
# Basic Data Structures for sml_tk
# **************************************************************************



api Com_State {


    # The prelude to be sent to the wish after starting it 
    #
    prelude_tcl:  String;

    # Visible components of the com-state, and how to change them 
    #
    get_logfilename:      Void -> Null_Or( String );
    get_lib_path:         Void -> String;
    get_tcl_init:         Void -> String;
    get_wish_path:        Void -> String;
    get_tcl_answers_gui:  Void -> List( basic_tk_types::Tcl_Answer );

    upd_logfilename:     Null_Or( String ) -> Void;
    update_lib_path:     String -> Void;
    upd_tcl_init:        String -> Void;
    upd_wish_path:       String -> Void;
    upd_tcl_answers_gui: List( basic_tk_types::Tcl_Answer ) -> Void;

    #  set up the wish -- used to be called initCom 
    init_wish:          Void -> Void;

    #  get the stream of the current logfile, if open 
    get_wish_prot:      Void -> null_or::Null_Or( file::Output_Stream );

    #  TRUE as long as the eventloop is active and the wish is running 
    wish_active:       Void -> Bool;

    #  get one event from the wish, and send some string to the wish 
    get_event:  Void   -> String; 
    eval:       String -> Void;

    #  Close down the wish, and more importantly, close the in/outstreams 
    close_wish:          Void -> Void;

    #  initialize the com state 
    init_com_state:      Void -> Void;

#    Not needed any more -- I don't think --
#    my do_one_event:        Void -> Int
#    my do_one_event_without_waiting: Void -> Int


#   my reset_tcl_interp:  Void -> Void          # ditto -- now done in initComState 

};

