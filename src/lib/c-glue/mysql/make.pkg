fun make file = if cm::make file then () else raise exception FAIL("Can't load "$file);
fun again () = run "make.pkg";

make "../ffi-packager/ffi-packager.cm";

/*---------------------------------------------------------------------------
 * 
 * This program drives the sml-mysql library packaging process
 *
 *---------------------------------------------------------------------------*/
package p =
gift_wrap_g
(  use ffi_packager
   use gift_wrap_defaults
   package a = Ast
  
   name     = "mysql"
   name'    = "mysql"
   version  = "0.1"
   fun make_accessors _ = TRUE
   enums    = [("MySQL-enums.sml", "MySQLEnums", "")]
   defines  = [("MySQL-macros.sml", "MySQLMacros",
                     [("^(CLIENT|SERVER)", FALSE),
                      ("^[A-Z].*THREADS", FALSE),
                      ("^[A-Z].*FLAG", FALSE),
                      ("^[A-Z].*HOST", FALSE),
                      ("^[A-Z].*NET", FALSE)
                     ]
                    )
                  ]
   fun cleanup info = 
       (cm::add (info, "package my_sql", "../MySQL.pkg");
        cm::add (info, "api My_Sql", "../MySQL.api")
       )
   use ffi_transforms
   infix || &&
   String =
       ForeachParam (Do [
            If (TyIs "ro uchar_obj ptr'" && 
                FunCnameP (not o re::matches "mysql.*connect")
               ) FastStringArg,
            If (TyIs "ro uchar_obj ptr'" || TyIs "rw uchar_obj ptr'")
                 StringRet])
   fun init info = 
       (tr::declare info "^f-" 
          (String o BoolIfCtypeIs "my_bool")
       )
)
