#  Translated from example in mGTK 

local

use gtk_enums 

fun makeDate (y, m, d) =
    let use Date
        month = case m:  unt32::word of
                       0w0 => Jan | 0w1 => Feb | 0w2 => Mar | 0w3 => Apr
                     | 0w4 => May | 0w5 => Jun | 0w6 => Jul | 0w7 => Aug
                     | 0w8 => Sep | 0w9 => Oct | 0w10 => Nov | _ => Dec
    in  date { year=unt32::toInt y, month=month, day=unt32::toInt d,
             hour=0, minute=0, second=0,
             offset=NULL }
    end

fun print_sel cal _ =
    let date = makeDate (gtk_calendar_get_date::f cal)
    in  print (date::fmt "You requested: %B %d, %Y.  Which is a %A\n" date)
    end

fun delete_event _ = ( print "delete event occurred\n"; FALSE )

fun destroy _ = gtk_main_quit::f()

in

fun main (prog, argv) =
    let gtk_init::f (prog . argv)
        window = gtk_window_new::f GTK_WINDOW_TOPLEVEL
        cal    = gtk_calendar_new::f ()
        gtk_calendar_display_options::f (cal,
                           GTK_CALENDAR_NO_MONTH_CHANGE+
                           GTK_CALENDAR_WEEK_START_MONDAY+
                           GTK_CALENDAR_SHOW_HEADING+
                           GTK_CALENDAR_SHOW_DAY_NAMES)
    in  gtk_event_connect::f (window, "delete_event", delete_event)
      ; gtk_signal_connect::f (window, "destroy", destroy)
      ; gtk_container_set_border_width::f (window, 0w10)
      ; gtk_container_add::f (window, cal)
      ; gtk_signal_connect::f (cal, "day_selected_double_click", print_sel cal)
      ; gtk_window_set_title::f (window, "Calendar Example")
      ; gtk_widget_show::f cal
      ; gtk_widget_show::f window
      ; gtk_main::f()
      ; 0
    end

end
