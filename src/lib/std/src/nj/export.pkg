## export.pkg

# Compiled by:
#     src/lib/std/src/Base-imp.make6

package export: (weak)  Export {		# Export	is from   src/lib/std/src/nj/export.api

    package process
        =
        winix_process;

    fun runtime_fn x
        =
        c_interface::c_function "Lib7-Runtime" x;

    my export_heap:  String -> Bool
	          =  runtime_fn "exportHeap";

    # We need the pair wrapper type to make sure that the second argument will
    # be fully wrapped when it is passed to the run-time system.
    # [also see wrap-export.pkg]
    #
    Cmdt =   wrap_export::Pair( String,  List( String ) ) -> winix_types::process::Status;


    my spawn_to_disk' : ((String, Cmdt)) -> Void
                      = runtime_fn "spawn_to_disk";

    fun null_filename ()
        =
        raise exception assembly::SYSTEM_ERROR
                  ("empty heap file name", NULL);


    #  Export the current world to the given file 
    #
    fun fork_to_disk ""
            =>
            null_filename ();

	fork_to_disk file_name
	    =>
	    {   at::run_functions_scheduled_to_run  at::FORK_TO_DISK;

		if   (export_heap file_name)
		    
		     at::run_functions_scheduled_to_run  at::STARTUP;
		     TRUE;
		else
		    FALSE;
		fi;
	     };
    end;

    fun spawn_to_disk ("", f)
            =>
            null_filename ();

	spawn_to_disk (file_name, f)
            =>
            {   signals::mask_signals signals::MASKALL;
		at::run_functions_scheduled_to_run  at::SPAWN_TO_DISK;
		assembly::pstruct := inline_t::cast ();

		spawn_to_disk' (file_name, wrap_export::wrap f);		# Never returns.
            };
    end;

}; #  Export 




## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
