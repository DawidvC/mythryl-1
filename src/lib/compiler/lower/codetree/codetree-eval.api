## codetree-evaluate.sig

# Compiled by:
#     src/lib/compiler/lower/make7/lowcode.make6



# Utilites to evaluate and compare codetree expressions.



###               "You can't wait for inspiration.
###                You have to go after it with a club."
###
###                             -- Jack London



api Codetree_Eval {

    package codetree:  Codetree;		# Codetree	is from   src/lib/compiler/lower/codetree/codetree.api


    # Equality
    #
    eq_statement:      (codetree::Statement, codetree::Statement) -> Bool;
    eq_int_expression:     (codetree::Int_Expression,      codetree::Int_Expression     ) -> Bool;
    eq_float_expression:     (codetree::Float_Expression,      codetree::Float_Expression     ) -> Bool;
    eq_bool_expression:    (codetree::Bool_Expression,     codetree::Bool_Expression    ) -> Bool;
    ====      :  (codetree::Labexp,    codetree::Labexp   ) -> Bool;

    eq_lowcodes: (List( codetree::Expression ), List( codetree::Expression )) -> Bool;



    # Value

    exception NON_CONSTANT;

    evaluate:  
	{ const: codetree::constant::Const -> integer::Int,
	  label: label::Label -> Int
	} 
	-> 
	{ int_expression:  codetree::Int_Expression -> integer::Int,
	  bool_expression:  codetree::Bool_Expression -> Bool
	};

    value_of:  codetree::Labexp -> Int;
};


## COPYRIGHT (c) 2001 Lucent Technologies, Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
