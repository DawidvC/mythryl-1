## threadkit-file.api
## COPYRIGHT (c) 1991 John H. Reppy.

# Compiled by:
#     src/lib/std/stdlib.make6


# This extends the Mythryl File interface with mailop-valued operations.


api Threadkit_File {

    #  include File
    Vector = String;
    Element = Char;

    Input_Stream;
    Output_Stream;

    read:           Input_Stream -> Vector;
    read_one:       Input_Stream -> Null_Or( Element );
    read_n:       ((Input_Stream, Int)) -> Vector;
    read_all:       Input_Stream -> Vector;
    can_read:     ((Input_Stream, Int)) -> Null_Or( Int );
    lookahead:      Input_Stream -> Null_Or( Element );
    close_input:    Input_Stream -> Void;
    end_of_stream:  Input_Stream -> Bool;

    write:        ((Output_Stream, Vector)) -> Void;
    write_one:    ((Output_Stream, Element)) -> Void;
    flush:          Output_Stream -> Void;
    close_output:   Output_Stream -> Void;

    package pure_io:  Threadkit_Text_Pure_Io			# Threadkit_Text_Pure_Io	is from   src/lib/std/src/io/threadkit-text-pure-io.api
      where  Reader        == threadkit_text_primitive_io::Reader
      where  Writer        == threadkit_text_primitive_io::Writer
      where  File_Position == threadkit_text_primitive_io::File_Position
      where  Vector        == String
      where  Element       == Char;

/*
    my getPosIn:     Input_Stream -> pure_io::in_pos
    my setPosIn:     (Input_Stream * pure_io::in_pos) -> Void
*/
    make_instream:   pure_io::Input_Stream -> Input_Stream;
    get_instream:  Input_Stream -> pure_io::Input_Stream;
    set_instream:  ((Input_Stream, pure_io::Input_Stream)) -> Void;

    get_output_position:     Output_Stream -> pure_io::Out_Position;
    set_output_position:     ((Output_Stream, pure_io::Out_Position)) -> Void;
    make_outstream:   pure_io::Output_Stream -> Output_Stream;
    get_outstream:  Output_Stream -> pure_io::Output_Stream;
    set_outstream:  ((Output_Stream, pure_io::Output_Stream)) -> Void;

    read_line:     Input_Stream -> Null_Or( String );
    write_substring:  ((Output_Stream, Substring)) -> Void;

    open_for_read:   String -> Input_Stream;
    open_string:     String -> Input_Stream;
    open_for_write:  String -> Output_Stream;
    open_for_append: String -> Output_Stream;

    stdin:   Input_Stream;
    stdout:  Output_Stream;
    stderr:  Output_Stream;

    input1evt:          Input_Stream       -> threadkit::Mailop( Null_Or( Element ) );
    input_nevt:        (Input_Stream, Int) -> threadkit::Mailop( Vector );
    input_mailop:      Input_Stream       -> threadkit::Mailop( Vector );
    input_all_mailop:  Input_Stream       -> threadkit::Mailop( Vector );

    open_slot_in:   threadkit::Mailslot( String ) -> Input_Stream;
    open_slot_out:  threadkit::Mailslot( String ) -> Output_Stream;

    print:  String -> Void;

    scan_stream :
	  (    string_conversion::Reader( Element, pure_io::Input_Stream )
	    -> string_conversion::Reader( X,       pure_io::Input_Stream )
	  ) -> Input_Stream -> Null_Or( X );

  };


## COPYRIGHT (c) 1996 AT&T Research.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
