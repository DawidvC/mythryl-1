/* ***************************************************************************
   The small running example from the documentation. 
   Author: bu/cxl (Last modification by $Author: 2cxl $)
   (C) 1996, Bremen Institute for Safe Systems, Universitaet Bremen
  ************************************************************************** */

/*
 * This small example opens a window with a LABEL, a TEXT_ENTRY box and
 * a quit Button. (See the documentation in ../doc/DOC.html.)
 */


let

    use tk



    #  Get names for named objects: 

						       my 
    mainID  = make_window_id()                          my
    entID   = make_widget_id()

    #  Define the widgets: 
						       my 
    lab   = LABEL {   widget_id = make_widget_id (),
		      packing_hints = [PACK_AT Left],
		      traits = [TEXT "name:"], 
		      event_callbacks = []
		  }

						       my 
    input
	=
	let fun endInput _ = change_title mainID (make_title (get_tcl_text entID))
	in
	    TEXT_ENTRY {
		widget_id = entID,
		packing_hints = [],
		traits = [ WIDTH 20 ], 
		event_callbacks = [ EVENT_CALLBACK (KEY_PRESS "Return", endInput) ]
	    }
	end

						       my 
    quit = let fun stop _
			  =
			  close_window mainID
		  in
		      BUTTON {
			  widget_id = make_widget_id(),
			  packing_hints = [PACK_AT BOTTOM],
			  traits = [TEXT "Quit", CALLBACK stop],
			  event_callbacks = []
		      } 
		  end

    # Group together the TEXT_ENTRY and the LABEL:
                                                       my 
    top_two
	=
	FRAME {
	    widget_id = make_widget_id(),
	    subwidgets = PACKED [lab, input], 
	    packing_hints = [PACK_AT TOP],
	    traits = [],
	    event_callbacks = []
	}

    # Define the main window:
                                                       my 
    enterwin
	=
	{   window_id    = mainID,
	    traits     = [WINDOW_TITLE "Please enter name"], 
	    subwidgets = PACKED [top_two, quit],
	    event_callbacks = [],
	    init     = noAction
	}

in

    # ... and go!

    start_tcl [make_window enterwin]

end



