## pflatten.pkg 

# Compiled by:
#     src/lib/compiler/core.make6



###             "Life must be lived as play."
###
###                          -- Plato



api Pflatten {

    Llty  = polylambda::Highcode_Type;
    Ltyc  = polylambda::Highcode_Type_Constructor;

    Flty  = anormal::Highcode_Type;
    Ftyc  = anormal::Highcode_Type_Constructor;

    Anormal_Expression =  anormal::Anormal_Expression;
    Value              =  anormal::Value;
    Highcode_Variable  =  anormal::Highcode_Variable;

    # The following functions are used in
    #
    #     src/lib/compiler/upper/polylambda/translate-polylambda-to-anormal.pkg
    #
    ltc_raw:       Llty -> Flty;
    tcc_raw:       Ltyc -> Ftyc;

    t_pflatten:    Llty -> (Bool, List( Llty ), Bool);

    v_punflatten:  Llty -> ((((Bool, List( Llty ), Bool)) ,
				 (((Highcode_Variable, Anormal_Expression)) -> ((List( Highcode_Variable ), Anormal_Expression)))));

    v_pflatten:    Llty -> ((((Bool, List( Llty ), Bool)) ,
				 (Value -> ((List( Value ), (Anormal_Expression -> Anormal_Expression))))));

    # The following functions are used in
    #
    #     src/lib/compiler/upper/optimize/specialize.pkg
    #
    t_flatten:     ((List( Flty ), Bool)) -> (Bool, List( Flty ), Bool);

    v_unflatten:   ((List( Flty ), Bool)) -> 
			  ((((Bool, List( Flty ), Bool)) ,
			   (((List( Highcode_Variable ), Anormal_Expression)) -> ((List( Highcode_Variable ), Anormal_Expression)))));

    v_flatten:     ((List( Flty ), Bool)) -> 
			  ((((Bool, List( Flty ), Bool)) ,
			   (List( Value ) -> ((List( Value ), (Anormal_Expression -> Anormal_Expression))))));

    # The following function is used during
    # representation analysis in
    #
    #     src/lib/compiler/upper/reps/coerce.pkg 
    #
    v_coerce:      (Bool, List( Ftyc ), List( Ftyc )) -> 
			((List( Ftyc ), 
			  Null_Or( List( Value ) -> ((List( Value ), (Anormal_Expression -> Anormal_Expression))))));

};






## Copyright (c) 1997 YALE FLINT PROJECT 
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
