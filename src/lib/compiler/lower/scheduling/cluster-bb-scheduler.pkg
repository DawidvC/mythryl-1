
# Simple minded basic block scheduling

generic package ClusterBasicBlockScheduler
   (package flowgraph:  FLOWGRAPH
    package BBSched:    BASIC_BLOCK_SCHEDULER
       sharing flowgraph::I = BBSched::I
    my cpu:  Ref( String )
   ) : CLUSTER_OPTIMIZATION =
pkg

   package f = flowgraph
   type flowgraph = f::cluster

   name = "Basic Block Scheduling"

   fun run (cluster as f::CLUSTER { blocks, annotations, ... } ) = 
   if lowcode_notes::NO_OPTIMIZATION.contains *annotations
   then cluster
   else
   let schedule = BBSched::schedule { cpu= *cpu }
       fun sched (f::BBLOCK { annotations, instructions, ... } ) = 
            if lowcode_notes::NO_OPTIMIZATION.contains (*annotations) 
            then ()
            else instructions := schedule(*instructions)
         | sched _ = ()
   in  apply sched blocks;
       cluster
   end
end
