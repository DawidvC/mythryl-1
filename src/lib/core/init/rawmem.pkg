## author: Matthias Blume (blume@research.bell-labs.com)

# Compiled by:
#     src/lib/core/init/init.cmi

# Raw memory access primops and raw C calls.
# (This is for use by ml-nlffi.)
#



###                        "Guilt is absolutely the most useless emotion."
###
###                                                   -- Cynthia Matuszek



package raw_mem_inline_t {

    my w8l:   Unt32 -> Unt32            = inline::raww8l;
    my i8l:   Unt32 -> Int32            = inline::rawi8l;
    my w16l:  Unt32 -> Unt32            = inline::raww16l;
    my i16l:  Unt32 -> Int32            = inline::rawi16l;
    my w32l:  Unt32 -> Unt32            = inline::raww32l;
    my i32l:  Unt32 -> Int32            = inline::rawi32l;
    my f32l:  Unt32 -> Float             = inline::rawf32l;
    my f64l:  Unt32 -> Float             = inline::rawf64l;
    my w8s:   (Unt32, Unt32) -> Void     = inline::raww8s;
    my i8s:   (Unt32, Int32) -> Void     = inline::rawi8s;
    my w16s:  (Unt32, Unt32) -> Void     = inline::raww16s;
    my i16s:  (Unt32, Int32) -> Void     = inline::rawi16s;
    my w32s:  (Unt32, Unt32) -> Void     = inline::raww32s;
    my i32s:  (Unt32, Int32) -> Void     = inline::rawi32s;
    my f32s:  (Unt32, Float)  -> Void     = inline::rawf32s;
    my f64s:  (Unt32, Float)  -> Void     = inline::rawf64s;
    my rawccall:  (Unt32, X, Y) -> Z = inline::rawccall;

    #  Allen Leung's additions... 
    my rawrecord:    Int -> X = inline::rawrecord;
    my rawrecord64:  Int -> X = inline::rawrecord64;

    my subw8:   (X, Unt32) -> Unt32  = inline::rawselectw8;
    my subi8:   (X, Unt32) -> Int32  = inline::rawselecti8;
    my subw16:  (X, Unt32) -> Unt32  = inline::rawselectw16;
    my subi16:  (X, Unt32) -> Int32  = inline::rawselecti16;
    my subw32:  (X, Unt32) -> Unt32  = inline::rawselectw32;
    my subi32:  (X, Unt32) -> Int32  = inline::rawselecti32;
    my subf32:  (X, Unt32) -> Float   = inline::rawselectf32;
    my subf64:  (X, Unt32) -> Float   = inline::rawselectf64;

    my updw8:   (X, Unt32, Unt32)  -> Void = inline::rawupdatew8;
    my updi8:   (X, Unt32, Int32)  -> Void = inline::rawupdatei8;
    my updw16:  (X, Unt32, Unt32)  -> Void = inline::rawupdatew16;
    my updi16:  (X, Unt32, Int32)  -> Void = inline::rawupdatei16;
    my updw32:  (X, Unt32, Unt32)  -> Void = inline::rawupdatew32;
    my updi32:  (X, Unt32, Int32)  -> Void = inline::rawupdatei32;
    my updf32:  (X, Unt32, Float)   -> Void = inline::rawupdatef32;
    my updf64:  (X, Unt32, Float)   -> Void = inline::rawupdatef64;

};


## Copyright (c) 2001 by Lucent Technologies, Bell Labs
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
