#  This view make a graph readonly.
#  -- Allen Leung

# Compiled by:
#     src/lib/graph/graphs.make6

###               "Death is more universal than life;
###                everyone dies but not everyone lives."
###
###                                  -- A. Sachs



api Read_Only_Graph_View {
  
    readonly_view:  graph::Graph( N, E, G) -> graph::Graph( N, E, G ); 

};

package read_only_graph_view: (weak)  Read_Only_Graph_View		# Read_Only_Graph_View	is from   src/lib/graph/readonly.pkg
{
   package g= graph;	# graph	is from   src/lib/graph/graph.pkg

   fun readonly_view (g::GRAPH graph)
       =
       {   fun unimplemented _
               =
               raise exception  g::READ_ONLY;

	   g::GRAPH
	   { name            => graph.name,
	     graph_info      => graph.graph_info,
	     new_id          => unimplemented,
	     add_node        => unimplemented,
	     add_edge        => unimplemented,
	     remove_node     => unimplemented,
	     set_in_edges    => unimplemented,
	     set_out_edges   => unimplemented,
	     set_entries     => unimplemented,
	     set_exits       => unimplemented,
	     garbage_collect => unimplemented,
	     nodes           => graph.nodes,
	     edges           => graph.edges,
	     order           => graph.order,
	     size            => graph.size,
	     capacity        => graph.capacity,
	     out_edges       => graph.out_edges,
	     in_edges        => graph.in_edges,
	     next            => graph.next,
	     prior            => graph.prior,
	     has_edge        => graph.has_edge,
	     has_node        => graph.has_node,
	     node_info       => graph.node_info,
	     entries         => graph.entries,
	     exits           => graph.exits,
	     entry_edges     => graph.entry_edges,
	     exit_edges      => graph.exit_edges,
	     forall_nodes    => graph.forall_nodes,
	     forall_edges    => graph.forall_edges
#	     fold_nodes      => graph.fold_nodes,
#	     fold_edges      => graph.fold_edges
	   };
       };
};

