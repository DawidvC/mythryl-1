## time.api

# Compiled by:
#     src/lib/std/src/stdlib-core.make6

# Implemented in:
#     src/lib/std/src/time-guts.pkg


###            "Eternity is a very long time, especially towards the end."
###
###                                            -- Stephen Hawking



api Time {

    eqtype Time;

    exception TIME;

    zero_time:  Time;


    to_seconds:         Time -> large_int::Int;    from_seconds:        large_int::Int -> Time;
    to_milliseconds:    Time -> large_int::Int;    from_milliseconds:	large_int::Int -> Time;
    to_microseconds:    Time -> large_int::Int;    from_microseconds:	large_int::Int -> Time;
    to_nanoseconds:     Time -> large_int::Int;    from_nanoseconds:	large_int::Int -> Time;

    to_string:		Time -> String;
    to_float:		Time -> Float;

    from_string:	String -> Null_Or(Time);
    from_float:		Float  -> Time;

    +  : (Time, Time) -> Time;
    -  : (Time, Time) -> Time;

    compare:  (Time, Time) -> Order;

    <  : (Time, Time) -> Bool;
    <= : (Time, Time) -> Bool;
    >  : (Time, Time) -> Bool;
    >= : (Time, Time) -> Bool;

    now:  Void -> Float;
    get:  Void -> Time;

    # Format time as a string.
    # First argument is precision:
    #
    #	eval:  time::format 0 (time::get ());
    #
    #	"1258134720"
    #
    #	eval:  time::format 4 (time::get ());
    #
    #	"1258134742.5852"
    #
    #	eval:  time::format 6 (time::get ());
    #
    #	"1258134732.273621"
    #
    # For more date formatting
    # see date::strftime () in
    #
    #     src/lib/std/src/date.api
    #
    format: Int -> Time -> String;

    # Scan a time value.
    # Supported syntax is:
    #
    #    [+-~]?([0-9]+(.[0-9]+)? | .[0-9]+)
    #
    scan:         number_string::Reader (Char, X) -> number_string::Reader (Time, X);

};		# The End of Time.


## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
