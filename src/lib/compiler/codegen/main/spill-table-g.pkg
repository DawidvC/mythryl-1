# spill-table-g.pkg

# Compiled by:
#     src/lib/compiler/core.make6

# We are invoked from:
#
#     src/lib/compiler/codegen/ppc/ppc-codegen.pkg
#     src/lib/compiler/codegen/sun/sparc-codegen.pkg
#     
								# Machine_Properties	is from   src/lib/compiler/codegen/main/machine-properties.api
generic package spill_table_g (

    machine_properties:  Machine_Properties		# Typically 			  src/lib/compiler/codegen/x86/x86-machine-properties.pkg

)
: (weak) 
api {

    spill_init:   Void -> Void;
    get_reg_loc:   register_allocation_graph::Spill_Loc -> Int;
    get_freg_loc:  register_allocation_graph::Spill_Loc -> Int;

}
{

    package g= register_allocation_graph;			# register_allocation_graph	is from   src/lib/compiler/lower/reg-alloc/ra-graph.pkg

    fun error msg
	=
	lowcode_error_message::error (
	    machine_properties::architecture_name		# "ppc", "sparc" or "x86".
	    +
	    ".spill_table_g",
	    msg
	);

    itow = unt::from_int;

    exception REGISTER_SPILLS also FLOAT_REGISTER_SPILLS;

    spill_offset = REF machine_properties::initial_spill_offset;

    my  regspills:  g::spill_loc_hash_table::Hash_Table( Int )
	=
	g::spill_loc_hash_table::make_table (0, REGISTER_SPILLS);

    my  fregspills:  g::spill_loc_hash_table::Hash_Table( Int )
	=
	g::spill_loc_hash_table::make_table (0, FLOAT_REGISTER_SPILLS);

    lookup_reg  = g::spill_loc_hash_table::get regspills;
    enter_reg   = g::spill_loc_hash_table::set  regspills;

    lookup_freg = g::spill_loc_hash_table::get fregspills;
    enter_freg  = g::spill_loc_hash_table::set  fregspills;

    fun spill_init ()
	=
	{   #  Reset the regspills/fregspills map by need. 
	    if (*spill_offset != machine_properties::initial_spill_offset)

		 g::spill_loc_hash_table::clear   regspills;
		 g::spill_loc_hash_table::clear  fregspills;
	    fi;

	    spill_offset := machine_properties::initial_spill_offset;
	};

    fun new_offset offset
	=
	if (offset >= machine_properties::spill_area_size ) error "spill area too small";
	else spill_offset := offset;
	fi;

    # Get spill location for integer registers 
    #
    fun get_reg_loc loc
	=
	lookup_reg loc
	except
	    _ = {   offset = *spill_offset;
		    new_offset (offset+4);
		    enter_reg (loc, offset);
		    offset;
		};

    #  Get spill location for floating point registers 
    #
    fun get_freg_loc loc
	=
	lookup_freg loc
	except
	    _ =
		{   offset = *spill_offset;
		    aligned = unt::to_int_x (unt::bitwise_and (itow (offset+7), itow -8));

		    new_offset (aligned+8);
		    enter_freg (loc, aligned);
		    aligned;
		};

};
