##############################################################################
#                                                                            #
#             Internals documentation on what happens when you do            #
#                                                                            #
#                                  make self                                 #
#                                                                            #
#             in the install directory                                       #
#                                                                            #
##############################################################################

###    "It is a riddle, wrapped in a mystery, inside an enigma;"
###                               -- Winston Churchill

Building the compiler itself currently involves
a lot of special-case kludging totally unrelated to
what happens when you build any other program.

Our mission here is cast light on these dark mysteries. :)



#####################################################
#           Overview:  make_compiler and kin      # 
#####################################################

The root of the actual .make6 makefile hierarchy is

    src/etc/root.make6

which gets invoked via make_compile() in

    src/app/make7/bootstrap/bootstrap-compiler-g.pkg 

The root.make6 makefile is a trivial wrapper around

    src/lib/core/internal/interactive-system.make6

which is what really defines the packages available
at the mythryld interactive prompt.


The crux of the matter is the make_compiler package defining
the bootstrap compiler which builds the system, which
in a naive sense is defined in 

    src/lib/core/cmb.make6

The latter, however, is merely a stub wrapper for the
real top level makefile, which is

    src/lib/core/make-compiler/current.make6

The latter consists mainly of #ifdefs which select
the appropriate variant of the compiler for the
current host and architecture.

We actually have one variant of make_compiler (and thus of
the bootstrap compiler) for each supported
platform.

These are defined by the makefiles

    src/lib/core/make-compiler/ppc-macos.make6     # package PPCMacOSCMB
    src/lib/core/make-compiler/ppc-unix.make6      # package PPCUnixCMB
    src/lib/core/make-compiler/sparc-unix.make6    # package SparcUnixCMB
    src/lib/core/make-compiler/x86-unix.make6      # package X86UnixCMB
    src/lib/core/make-compiler/x86-win32.make6     # package X86Win32CMB

Each of these produces binary code for the indicated
operating system and hardware architecture, but each
can be built on any of the supported platforms.

Thus, when running on the x86-unix platform, we
will typically use X86UnixCMB because it is the
version which produces code which can execute
under unix (+ linux + *bsd + ...) on x86 -- but
the other versions of the bootstrap compiler
remain available, and maybe used as cross-compilers
to produce a version of the compiler for another machine.

On any given platform, the package 'make_compiler' is
essentially an alias for the platform-appropriate
version of the bootstrap compiler.

This aliasing process is implemented by the
above-mentioned current.make6 makefile, which
contains #ifdefs which define make_compiler appropriately.

This allows scripts to portably use 'make_compiler' to
mean 'the appropriate bootstrap compiler for
the current platform'.

However, all of the platform-specific package
names remain available at the interactive prompt.







#####################################################
#           the make-compiler script             # 
#####################################################


'make build' in the install directory invokes

    src/etc/make-compiler

to do all its work.

make-compiler in turn does just two things
(actually, it combines them):

1) Invokes bin/mythryld on

       src/lib/core/cmb.make6

   to compile and load the bootstrap compiler make_compiler.

2) Executes

       make_compiler.make ()

   at the interactive prompt in the resulting image, which invokes

       src/app/make7/bootstrap/bootstrap-compiler-g.pkg:make




#####################################################
#           the make_compiler makefile hierarchy  # 
#####################################################

The makefile hierarchy invoked by make-compiler looks
as follows, taking the x86-linux build case for
definiteness and suppressing some common libraries
to reduce clutter:


src/lib/core/cmb.make6
    src/lib/core/make-compiler/current.make6
        src/lib/core/make-compiler/x86-unix.make6
            src/lib/std/stdlib.make6
                src/lib/std/src/Makefile.make6
                    src/lib/core/init/init.cmi
                    src/lib/std/types-only/Makefile.make6
            src/lib/core/internal/cm-sig-lib.make6
                src/app/make7/pgraph/pgraph.make6
            src/lib/core/internal/make7-0.make6

            src/lib/core/internal/make7-lib.make6
                src/app/make7/make7-lib.make6
                    src/lib/core/lib7/lib7.make6 
                        src/lib/src/lib7.make6
		    src/lib/core/lib7/controls-lib.make6
                        src/lib/controls/controls-lib.make6
                    src/lib/core/internal/srcpath-lib.make6
                        src/app/make7/paths/srcpath-lib.make6
                    src/app/make7/util/Makefile.make6

		    (* Compiler libraries *)
		    src/lib/core/viscomp/basics.make6
                        src/compiler/basics/basics.make6
		    src/lib/core/viscomp/parser.make6
                        src/compiler/parse/parser.make6
		    src/lib/core/viscomp/typecheckdata.make6
                        src/compiler/typecheck-stuff/typecheckdata.make6
		    src/lib/core/viscomp/execute.make6
                        src/compiler/execution/execute.make6
		    src/lib/core/viscomp/core.make6
                        src/compiler/core.make6
			    src/compiler/lower/make7/lib.make6
			    src/compiler/lower/make7/control.make6
                            src/lib/graph/graphs.make6
                            src/compiler/lower/make7/lowcode.make6
			    src/compiler/lower/make7/visual.make6
                            src/lib/core/internal/lib7-version.make6

		    src/compiler/src/library/pickle-lib.make6

		    (* Auxiliary libraries *)
                    src/app/yacc/lib/mythryl-yacc-lib.make6

            src/lib/core/compiler/x86.make6
                src/lib/core/viscomp/x86.make6
                    src/compiler/backend-x86.make6
                        src/lib/graph/graphs.make6
			src/compiler/lower/make7/codetree.make6
			src/compiler/lower/make7/ia32.make6




#####################################################
#           what make_compiler.make () does       # 
#####################################################


