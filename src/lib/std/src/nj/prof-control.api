## prof-control.api

# Compiled by:
#     src/lib/std/src/stdlib-core.make6



# This package implements the interface to the run-time system's profiling
# support library.  It is not meant for general use.


api Profiling_Control {

    #  Get the timer count rw_vector 
    get_time_array:  Void -> Rw_Vector( Int );

    prof_mode:  Ref( Bool );	#  Controls profile instrumentation 
    current:  Ref(  Int );

    # Turn on/off profile signals. 
    # These functions set/clear the profMode flag.

    profile_on:   Void -> Void;
    profile_off:  Void -> Void;

    get_timing_mode:  Void -> Bool;

    # Get the time quantum in microseconds 
    get_quantum:  Void -> Int;

    Compunit = UNIT  {
	base: Int,
	size: Int,
	counts: rw_vector::Rw_Vector( Int ),
	names: String
      };
			   
    runtime_index:  Int;
    minor_gc_index:  Int;
    major_gc_index:  Int;
    other_index:  Int;
    compile_index:  Int;
    number_of_predefined_indices:  Int;

    units:  Ref(  List(  Compunit ) );

    reset:  Void -> Void;

    # Space profiling hooks 
    space_profiling:  Ref(  Bool );
    space_prof_register:   Ref ((unsafe::unsafe_chunk::Chunk, String) -> unsafe::unsafe_chunk::Chunk);

};



## COPYRIGHT (c) 1996 AT&T Research.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
