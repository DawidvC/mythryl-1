## posix-error.pkg

# Compiled by:
#     src/lib/std/src/Base-imp.make6

# Package for POSIX error codes.
# This is a subpackage of the POSIX 1003.1 based
# 'Posix' package
#
#     src/lib/std/src/posix/posix.pkg



stipulate
    package host_unt= host_unt_guts;	# host_unt_guts	is from   src/lib/std/src/bind-sysword-32.pkg
herein
package posix_error {

    System_Error = Int;			#  = PreBasis::System_Error 


    fun cfun x
        =
        c_interface::c_function "POSIX-Error" x;


    my errors:  List( c_interface::System_Const )
       =
       cfun "listerrors" ();				# listerrors	is in   src/runtime/c-libs/posix-error/listerrors.c


    fun os_val s
        =
        #1 (c_interface::bind_sys_const (s, errors));


    fun syserror s
        =
        case (c_interface::find_sys_const (s, errors))
	  
	     THE (e, _) =>  THE e;
	     NULL       =>  NULL;
        esac;


    my errmsg:    Int -> String = cfun "errmsg";
    my geterror:  Int -> c_interface::System_Const = cfun "geterror";

    fun to_word   i =  host_unt::from_int i;
    fun from_word w =  host_unt::to_int w;


    fun error_msg i
        =
        errmsg i;


    fun error_name err
        =
        #2 (geterror err);


    toobig        = os_val "toobig";
    acces         = os_val "acces";
    again         = os_val "again";
    badf          = os_val "badf";
    badmsg        = os_val "badmsg";
    busy          = os_val "busy";
    canceled      = os_val "canceled";
    child         = os_val "child";
    deadlk        = os_val "deadlk";
    dom           = os_val "dom";
    exist         = os_val "exist";
    fault         = os_val "fault";
    fbig          = os_val "fbig";
    inprogress    = os_val "inprogress";
    intr          = os_val "intr";
    inval         = os_val "inval";
    io            = os_val "io";
    isdir         = os_val "isdir";
    loop          = os_val "loop";
    mfile         = os_val "mfile";
    mlink         = os_val "mlink";
    msgsize       = os_val "msgsize";
    name_too_long = os_val "nametoolong";
    nfile         = os_val "nfile";
    nodev         = os_val "nodev";
    noent         = os_val "noent";
    noexec        = os_val "noexec";
    nolck         = os_val "nolck";
    nomem         = os_val "nomem";
    nospc         = os_val "nospc";
    nosys         = os_val "nosys";
    notdir        = os_val "notdir";
    notempty      = os_val "notempty";
    notsup        = os_val "notsup";
    notty         = os_val "notty";
    nxio          = os_val "nxio";
    perm          = os_val "perm";
    pipe          = os_val "pipe";
    range         = os_val "range";
    rofs          = os_val "rofs";
    spipe         = os_val "spipe";
    srch          = os_val "srch";
    xdev          = os_val "xdev";

}; #  package posix_error 
end;



##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
