## window-io.api
#
# Creating windows,
#  mapping windows,
# changing window attributes.

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.make6


# This api is implemented in:
#
#     src/lib/x-kit/xclient/src/wire/window-io.pkg

stipulate
    package xok = xsocket;				# xsocket		is from   src/lib/x-kit/xclient/src/wire/xsocket.pkg
    package xt  = xtypes;				# xtypes		is from   src/lib/x-kit/xclient/src/wire/xtypes.pkg
    package g   = geometry;				# geometry		is from   src/lib/x-kit/xclient/src/window/geometry.pkg
herein

    api Window_Io {

	# Window configuration values:
	#
	Xwin_Val
	  = BACKGROUND_PIXMAP_NONE
	  | BACKGROUND_PIXMAP_PARENT_RELATIVE
	  | BACKGROUND_PIXMAP      		xt::Pixmap_Id
	  | BACKGROUND_PIXEL       		xt::Pixel
	  #
	  | BORDER_PIXMAP_COPY_FROM_PARENT
	  | BORDER_PIXMAP          		xt::Pixmap_Id
	  | BORDER_PIXEL           		xt::Pixel
	  #
	  | BIT_GRAVITY            		xt::Gravity
	  | WINDOW_GRAVITY         		xt::Gravity
	  #
	  | BACKING_STORE          		xt::Backing_Store
	  | BACKING_PLANES         		xt::Plane_Mask
	  | BACKING_PIXEL          		xt::Pixel
	  | SAVE_UNDER  			Bool
	  #
	  | EVENT_MASK             		xt::Event_Mask
	  | DO_NOT_PROPAGATE_MASK  		xt::Event_Mask
	  | OVERRIDE_REDIRECT  			Bool
	  #
	  | COLOR_MAP_COPY_FROM_PARENT
	  | COLOR_MAP  	       			xt::Colormap_Id
	  #
	  | CURSOR_NONE
	  | CURSOR		       		xt::Cursor_Id
	  ;

	#  Create a new X-window with the given xid 
	#
	create_window
	    :
	    xok::Xsocket
	    ->
	     { id:          xt::Window_Id,
	       parent:      xt::Window_Id,
	       #
	       input_only:  Null_Or( Bool ),			# NULL is CopyFromParent, THE FALSE is InputOutput, THE TRUE is InputOnly
	       depth:       Int,
	       visual_id:   Null_Or( xt::Visual_Id ),		# NULL is CopyFromParent
	       #
	       geometry:    g::Window_Site,
	       attributes:  List( Xwin_Val )
	     }
	    ->
	    Void;

	map_window
	    :
	    xok::Xsocket -> xt::Window_Id -> Void;
	    #
	    # Map a window 

	change_window_attributes
	    :  xok::Xsocket
	    -> (xt::Window_Id, List(Xwin_Val))
	    -> Void;
	    #
	    # Change window attributes.

    };

end;			# stipulate


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
