SMLNJ-FFILIB
============

   Written by Allen Leung 
           (leunga@dorsai.org, leunga@cs.nyu.edu)

WHAT'S IN HERE
--------------

    This is a collection of foreign function namings for the Standard ML of 
New Jersey compiler. They are generated using Matthias Blume's c-glue-maker 
tool.  

    Type

          make 

    to see a list of targets.


DO THEY WORK?
-------------

    Probably not very well without some more work at the moment. 

REQUIREMENTS
------------

    1. Latest version of sml/nj from the CVS repository (see INSTALLATION)
    2. Matthias Blume's c-glue-maker
    3. Perl 5.0 or later
    4. gcc
    5. Plenty of disk space.  This distribution actually doesn't contain
       the actual libraries.  Rather it contains scripts and programs which
       generate the actual libraries from your system's include files.
       During the build process, thousands of new files will be generated 
       (I'm not kidding).
    6. Lots of patience.

INSTALLATION
------------

    1.  Make sure you have the latest working version of sml/nj and c-kit from
        the CVS repository (the tarballs from sml/nj's website may work
        but it is highly recommended that you use the latest and greatest.)
        See 

             http://cm.bell-labs.com/cm/cs/what/smlnj/DEV/cvs-readme.html

        for information about the CVS repository.

        Install the following libraries (you have to edit the config/targets
        file in the sml/nj installation as these are NOT installed by default):

        a.  c-kit
        b.  c-glue-maker
        c.  c-glue-lib
        d.  mlrisc-tools

    2.  Recompile the sml/nj runtime system with the following flags added:

          CFLAGS= .... -D_REENTRANT
          LD_LIBS= .... -rdynamic -lpthread

        These changes are extremely IMPORTANT!   They'll make the
        sml/nj runtime system threadsafe and make the runtime system's 
        symbols dynamically loadable by various runtime extensions.

    3.  Edit the file config/targets (in this distribution)
        to choose the libraries you want to build.    By default, everything
        that compiles on my machine (Linux/x86) is included.  

    4.  Run 
		make configure

	to set things up.  This step will perform some checking
        to see whether you have the proper header files 
        and shared libraries installed.

    5.  Run 
		make build

	to set start the build

    6.  Run 
		make install

	to move the final stabilized libraries to your sml distribution.

    You can type 'make' and see the current setup.  Follow the instructions.

THE CM FILES
------------

   After installation, the cm files for the libraries will be accessible 
   from the path:

        $smlnj-ffilib/<library>/<cmfile>.cm

   For example, the gtk library exports the two cm files:

        $smlnj-ffilib/gtk/Gtk.cm
        $smlnj-ffilib/gtk/Gadgets.cm

   while the SDL library exports only

        $smlnj-ffilib/SDL/SDL.cm

