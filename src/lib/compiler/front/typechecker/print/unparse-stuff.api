## unparse-stuff.api

# Compiled by:
#     src/lib/compiler/front/typechecker/typecheck.make6

api Unparse_Stuff {

    Break_Style
        =
        CONSISTENT | INCONSISTENT;


    open_style_box:  Break_Style
                    -> prettyprint::Stream
                    -> prettyprint::Indent
                    -> Void;

    unparse_sequence:  prettyprint::Stream
                           ->
		            {   sep:   prettyprint::Stream -> Void, 
		                pr:    prettyprint::Stream -> X -> Void,
		                style: Break_Style
                            }
		           -> List( X )
                           -> Void;

    unparse_closed_sequence:  prettyprint::Stream
			         -> {   front: prettyprint::Stream -> Void, 
			                sep:   prettyprint::Stream -> Void,
			                back:  prettyprint::Stream -> Void,
			                pr:    prettyprint::Stream -> X -> Void,
			                style: Break_Style
                                    }
			         -> List( X )
                                 -> Void;

    unparse_symbol:  prettyprint::Stream
			 -> symbol::Symbol
			 -> Void;

    heap_string:  String -> String;

    unparse_mlstring:  prettyprint::Stream
                           -> String
                           -> Void;

    unparse_mlstring':  prettyprint::Stream
                           -> String
                           -> Void;

    unparse_integer:  prettyprint::Stream
                 -> integer::Int
                 -> Void;

     ppvseq:  prettyprint::Stream
	      -> Int
              -> String
              -> (prettyprint::Stream -> X -> Void)
	      -> List( X ) -> Void;

    ppvlist:  prettyprint::Stream
	       -> (String,
                  String,
                  (prettyprint::Stream -> X -> Void),
                  List( X ))
	       -> Void;

    ppvlist' : prettyprint::Stream
		-> (String,
                   String,
                   (prettyprint::Stream -> String -> X -> Void),
		   List( X ))
	        -> Void;

    unparse_int_path:      prettyprint::Stream -> List( Int )                -> Void;
    unparse_symbol_path:   prettyprint::Stream -> symbol_path::Symbol_Path   -> Void;
    unparse_inverse_path:  prettyprint::Stream -> inverse_path::Inverse_Path -> Void;
    newline_indent:        prettyprint::Stream -> Int                        -> Void;

    #  needed in PPTypes, unparse_package_language 

    find_path:  (inverse_path::Inverse_Path,
                  (X -> Bool),
                  (symbol_path::Symbol_Path -> X))
	        -> ((List( symbol::Symbol ), Bool));

    unparse_tuple:  prettyprint::Stream
		        -> (prettyprint::Stream -> X -> Void)
                        -> List( X )
                        -> Void;

    unparse_int:           prettyprint::Stream -> Int -> Void;
    unparse_comma:         prettyprint::Stream -> Void;
    unparse_comma_newline:  prettyprint::Stream -> Void;

    newline_apply:  prettyprint::Stream
		    -> (prettyprint::Stream -> X -> Void)
		    -> List( X )
		    -> Void; 

    break_apply:  prettyprint::Stream
		  -> (prettyprint::Stream -> X -> Void)
		  -> List( X )
		  -> Void; 

    en_pp:  prettyprint::Stream
	    -> {   break:       { spaces: Int,   indent_on_wrap: Int } -> Void, 
		   newline:     Void -> Void,
		   begin_horizontal_else_vertical_box:   Int -> Void,
		   begin_wrap_box:  Int -> Void,
		   end_box:    Void -> Void, 
		   pps:         String -> Void
	       };

    unparse_array:  prettyprint::Stream
                        -> ((prettyprint::Stream -> X -> Void),
                           Rw_Vector( X ))
		        -> Void;

}; #  Api Unparse_Stuff 


## Copyright 1989 by AT&T Bell Laboratories 
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
