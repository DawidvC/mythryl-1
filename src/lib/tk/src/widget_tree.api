## widget_tree.api
## (C) 1996, Bremen Institute for Safe Systems, Universitaet Bremen
## Author: Stefan Westmeier

# Compiled by:
#     src/lib/tk/src/tk.make6



# **************************************************************************
# Functions related to Path-Management.
# **************************************************************************



api Widget_Tree {

    #  ***************************************************************** 
    #  CHECKING the INTEGRITY of WIDGETS                                 
    #  ***************************************************************** 

     check_widget_id:               String -> Bool;

     check_one_widget_configure:  basic_tk_types::Widget_Type ->
				  basic_tk_types::Trait -> Bool;
     check_widget_configure:     basic_tk_types::Widget_Type ->
				  basic_tk_types::Trait List -> Bool;
     check_one_widget_naming:    basic_tk_types::Widget_Type ->
				  basic_tk_types::Event -> Bool;
     check_widget_naming:       basic_tk_types::Widget_Type ->
				   List( basic_tk_types::Event_Callback ) -> Bool;
     check_one_mconfigure:       basic_tk_types::Menu_Item_Type ->
				  basic_tk_types::Trait -> Bool;
     check_mitem:               basic_tk_types::Menu_Item -> Bool;
     check_one_cconfigure:       basic_tk_types::Canvas_Item_Type ->
				  basic_tk_types::Trait -> Bool;
     check_citem:               basic_tk_types::Canvas_Item -> Bool;
     check_widget:              basic_tk_types::Widget -> Void;


    #  ***************************************************************** 
    #  SELECTING WIDGETS from the internal GUI state 		     
    #  ***************************************************************** 

     get_widget_gui:      basic_tk_types::Widget_Id -> basic_tk_types::Widget;
     get_widget_guipath:  basic_tk_types::Int_Path -> basic_tk_types::Widget;


    #  ***************************************************************** 
    #  ADDING WIDGETS to the internal GUI state	 		     
    #  ***************************************************************** 

     add_widget_path_ass_gui:   basic_tk_types::Window_Id -> basic_tk_types::Widget_Path -> 
			       basic_tk_types::Widget -> Void;
     add_widgets_path_ass_gui:  basic_tk_types::Window_Id -> basic_tk_types::Widget_Path -> 
			       List( basic_tk_types::Widget ) -> Void;

     add_widget_gui:   basic_tk_types::Window_Id -> basic_tk_types::Widget_Path -> 
			basic_tk_types::Widget -> Void;
     add_widgets_gui:  basic_tk_types::Window_Id -> basic_tk_types::Widget_Path -> 
			 List( basic_tk_types::Widget ) -> Void;


    #  ***************************************************************** 
    #  DELETING WIDGETS from the internal GUI state 	             
    #  ***************************************************************** 

     delete_widget_gui:      basic_tk_types::Widget_Id -> Void;
     delete_widget_guipath:  basic_tk_types::Int_Path -> Void;


    #  ***************************************************************** 
    #  UPDATING WIDGETS in the internal GUI state		             
    #  ***************************************************************** 

     upd_widget_gui:      basic_tk_types::Widget -> Void;
     upd_widget_guipath:  basic_tk_types::Int_Path -> basic_tk_types::Widget -> Void;


    #  ***************************************************************** 
    #  ADDING WIDGETS to the "real" GUI                                  
    #  ***************************************************************** 

     pack_wid0:  Bool -> String -> basic_tk_types::Tcl_Path ->
		   basic_tk_types::Int_Path -> basic_tk_types::Widget_Id ->
		   List( basic_tk_types::Packing_Hint ) -> List( basic_tk_types::Trait ) ->
		   String -> List( basic_tk_types::Event_Callback ) -> Bool -> String;

     pack_wid:  Bool -> String -> basic_tk_types::Tcl_Path ->
		  basic_tk_types::Int_Path -> basic_tk_types::Widget_Id ->
		  List( basic_tk_types::Packing_Hint ) -> List( basic_tk_types::Trait ) ->
		   List( basic_tk_types::Event_Callback ) -> Bool -> String;

     pack_text_wid:  Bool -> basic_tk_types::Tcl_Path -> basic_tk_types::Int_Path -> 
		      basic_tk_types::Widget_Id -> basic_tk_types::Scrollbars_At -> 
		      String -> List( basic_tk_types::Text_Item ) -> 
		      List( basic_tk_types::Packing_Hint ) -> List( basic_tk_types::Trait ) -> 
		      List( basic_tk_types::Event_Callback ) -> Bool -> String;

     pack_listbox:  Bool -> basic_tk_types::Tcl_Path -> basic_tk_types::Int_Path -> 
		      basic_tk_types::Widget_Id -> basic_tk_types::Scrollbars_At -> 
		      List( basic_tk_types::Packing_Hint ) -> List( basic_tk_types::Trait ) -> 
		      List( basic_tk_types::Event_Callback ) -> Bool -> String;

     pack_canvas:  Bool -> basic_tk_types::Tcl_Path -> basic_tk_types::Int_Path -> 
		     basic_tk_types::Widget_Id -> basic_tk_types::Scrollbars_At ->
		     List( basic_tk_types::Canvas_Item ) -> List( basic_tk_types::Packing_Hint ) -> 
		     List( basic_tk_types::Trait ) ->
		     List( basic_tk_types::Event_Callback ) -> Bool -> String;

     pack_menu:  Bool -> basic_tk_types::Tcl_Path -> basic_tk_types::Int_Path -> 
		   basic_tk_types::Widget_Id -> List( basic_tk_types::Menu_Item ) -> 
		   List( basic_tk_types::Packing_Hint ) -> List( basic_tk_types::Trait ) -> 
		   List( basic_tk_types::Event_Callback ) -> Bool -> String;

     pack_widget:   Bool -> basic_tk_types::Tcl_Path -> basic_tk_types::Int_Path -> 
		      Null_Or( Bool ) -> basic_tk_types::Widget -> String;
     pack_widgets:  Bool -> basic_tk_types::Tcl_Path -> basic_tk_types::Int_Path ->
		      Null_Or( Bool ) -> List( basic_tk_types::Widget ) -> String;

     pack_menu_item:   basic_tk_types::Tcl_Path -> basic_tk_types::Int_Path -> 
			basic_tk_types::Widget_Id -> basic_tk_types::Menu_Item -> List( Int ) ->
			String;
     pack_menu_items:  basic_tk_types::Tcl_Path -> basic_tk_types::Int_Path -> 
			basic_tk_types::Widget_Id -> List( basic_tk_types::Menu_Item ) -> 
			List( Int ) -> String;


    #  ***************************************************************** 
    #  UPDATING WIDGETS in the "real" GUI			             
    #  ***************************************************************** 
/*
    my updConfigurePack:   Widget_ID -> List( Trait ) -> Void
    my updNamingPack:     Widget_ID -> List( Event_Callback )   -> Void

    my updWidgetPackPath:  IntPath -> Void
    my update_widget_packing_hints:      Widget  -> Void
*/

    #  ***************************************************************** 
    #  EXPORTED FUNCTIONS				        	     
    #  ***************************************************************** 

     select_widget:      basic_tk_types::Widget_Id -> basic_tk_types::Widget;
     select_widget_path:  basic_tk_types::Int_Path -> basic_tk_types::Widget;

     add_widget:         basic_tk_types::Window_Id -> basic_tk_types::Widget_Id -> 
			   basic_tk_types::Widget -> Void;
     delete_widget:      basic_tk_types::Widget_Id -> Void;
/*
    my updateWidget:      basic_tk_types::Widget -> Void
*/

    #  ***************************************************************** 
    #  IMPLEMENTATION: WIDGET CONTENTS 			             
    #  ***************************************************************** 

     select:               basic_tk_types::Widget_Id   ->
			      List( basic_tk_types::Trait );
     select_command:        basic_tk_types::Widget_Id   -> basic_tk_types::Void_Callback;
     select_command_path:    basic_tk_types::Int_Path -> basic_tk_types::Void_Callback;
     select_scommand_path:   basic_tk_types::Int_Path -> basic_tk_types::Real_Callback;
     select_mcommand_mpath:  basic_tk_types::Int_Path -> List( Int ) ->
			      basic_tk_types::Void_Callback;
     select_mcommand:       basic_tk_types::Widget_Id   -> List( Int ) ->
			      basic_tk_types::Void_Callback;
     select_mcommand_path:   basic_tk_types::Int_Path -> List( Int ) ->
			      basic_tk_types::Void_Callback;
     select_namings:       basic_tk_types::Widget_Id   -> List( basic_tk_types::Event_Callback );
     select_bind_key:        basic_tk_types::Widget_Id   -> String ->
			      basic_tk_types::Callback;
     select_bind_key_path:    basic_tk_types::Int_Path -> String ->
			      basic_tk_types::Callback;
     select_width:          basic_tk_types::Widget_Id -> Int;
     select_height:         basic_tk_types::Widget_Id -> Int;
     select_relief:         basic_tk_types::Widget_Id -> basic_tk_types::Relief_Kind;


     configure:         basic_tk_types::Widget_Id -> List( basic_tk_types::Trait ) ->
			   Void;
     newconfigure:      basic_tk_types::Widget_Id -> List( basic_tk_types::Trait ) ->
			   Void;
     configure_command:  basic_tk_types::Widget_Id -> basic_tk_types::Void_Callback ->
			   Void;
     add_namings:       basic_tk_types::Widget_Id -> List( basic_tk_types::Event_Callback ) ->
			   Void;
     new_namings:       basic_tk_types::Widget_Id -> List( basic_tk_types::Event_Callback ) ->
			   Void;
     configure_width:    basic_tk_types::Widget_Id -> Int -> Void;
     configure_relief:   basic_tk_types::Widget_Id -> basic_tk_types::Relief_Kind -> Void;
     configure_text:     basic_tk_types::Widget_Id -> String -> Void;

     insert_text:        basic_tk_types::Widget_Id -> String -> basic_tk_types::Mark ->
			   Void;
     insert_text_end:     basic_tk_types::Widget_Id -> String -> Void;
     delete_text:        basic_tk_types::Widget_Id -> 
			   (basic_tk_types::Mark, basic_tk_types::Mark) -> Void;
     clear_text:         basic_tk_types::Widget_Id -> Void;


     focus:    basic_tk_types::Window_Id -> Void;
     de_focus:  basic_tk_types::Window_Id -> Void;

     grab:     basic_tk_types::Window_Id -> Void;
     de_grab:   basic_tk_types::Window_Id -> Void;

     pop_up_menu:  basic_tk_types::Widget_Id -> (null_or::Null_Or( Int )) -> 
		    basic_tk_types::Coordinate -> Void;
};
