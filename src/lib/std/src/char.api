## char.api

# Compiled by:
#     src/lib/std/src/stdlib-core.make6

# See also:
#     src/lib/std/src/int-chartype.api
#     src/lib/std/src/string-chartype.api

# Implemented by:
#     src/lib/std/src/char.pkg

api Char {

    eqtype Char;
    eqtype String;

    from_int:  Int -> Char;
    to_int:    Char -> Int;

    min_char:  Char;
    max_char:  Char;
    max_ord:   Int;

    prior:  Char -> Char;
    next:   Char -> Char;

    <  : ((Char, Char)) -> Bool;
    <= : ((Char, Char)) -> Bool;
    >  : ((Char, Char)) -> Bool;
    >= : ((Char, Char)) -> Bool;

    compare:  ((Char, Char)) -> Order;

    scan:          number_string::Reader (Char, X)
                   ->
                   number_string::Reader (Char, X);

    from_string:   string::String -> Null_Or( Char );
    to_string:     Char -> string::String;

    from_cstring:  string::String -> Null_Or( Char );
    to_cstring:    Char -> string::String;

    contains:  String -> Char -> Bool;
    not_contains:  String -> Char -> Bool;

    is_lower:        Char -> Bool;   #  Contains "abcdefghijklmnopqrstuvwxyz" 
    is_upper:        Char -> Bool;   #  Contains "ABCDEFGHIJKLMNOPQRSTUVWXYZ" 
    is_digit:        Char -> Bool;   #  Contains "0123456789" 
    is_alpha:        Char -> Bool;   #  is_upper or is_lower 
    is_hex_digit:    Char -> Bool;   #  is_digit or contains "abcdefABCDEF" 
    is_alphanumeric: Char -> Bool;   #  is_alpha or is_digit 
    is_print:        Char -> Bool;   #  Any printable character (incl. ' ') 
    is_space:        Char -> Bool;   #  Contains " \t\r\n\v\f" 
    is_punct:        Char -> Bool;
    is_graph:        Char -> Bool;   #  (not is_space) and is_print 
    is_cntrl:        Char -> Bool;
    is_ascii:        Char -> Bool;   #  ord c < 128 

    to_upper:  Char -> Char;
    to_lower:  Char -> Char;
};



## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
