## test-parser.pkg

# This is a simple test driver for the HTML parser.

package main:  api

    my do_it:  String -> Null_Or( html::html )
    my main:  (String * List( String ) ) -> winix::process::status

  end
{
    package err {

	type context = { file:  Null_Or( String ), line:  Int }

	package f = format

	fun prf ( { file, line }, fmt, args) = (
	      case file
	       of NULL => file::write (
		    file::stderr,
		    f::format "line %3d: " [f::INT line])
		| (THE fname) => file::write (
		    file::stderr,
		    f::format "%s[%d]: " [f::STR fname, f::INT line])
	      ;		#  end case 
	      file::write (file::stderr, f::format fmt args);
	      file::write_one (file::stderr, '\n'))

	fun badStartTag ctx tagName =
	      prf (ctx, "unrecognized start tag \"%s\"",[f::STR tagName])

	fun badEndTag ctx tagName =
	      prf (ctx, "unrecognized end tag \"%s\"",[f::STR tagName])

	fun badAttrVal ctx (attrName, attrVal) =
	      prf (ctx, "bad value \"%s\" for attribute \"%s\"",
		[f::STR attrVal, f::STR attrName])

	fun lexError ctx msg = prf (ctx, "%s", [f::STR msg])

	fun syntaxError ctx msg = prf (ctx, "%s", [f::STR msg])

	fun missingAttrVal ctx attrName =
	      prf (ctx, "missing value for \"%s\" attribute", [f::STR attrName])

	fun missingAttr ctx attrName =
	      prf (ctx, "missing \"%s\" attribute", [f::STR attrName])

	fun unknownAttr ctx attrName =
	      prf (ctx, "unknown attribute \"%s\"", [f::STR attrName])

	fun unquotedAttrVal ctx attrName =
	      prf (ctx, "attribute value for \"%s\" should be quoted",
		[f::STR attrName])

      };

    package p = html_parser_g (Err);

    fun do_it fname = THE (p::parseFile fname) 		#  except _ => NULL 

    fun main (_, files) = (list::apply (ignore o do_it) files; winix::process::success)

};


## COPYRIGHT (c) 1996 AT&T REsearch.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
