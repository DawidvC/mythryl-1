# 2007-09-27 CrT:  I've merged this into  src/lib/regex/glue/regular-expression-matcher.api,
#                  so this code is mostly historical at this point.
#                  I've left it here for now as a forwarding pointer
#                  for when I get around to studying the ml-grinder
#                  code generally. 

# A lazy man's interface to the regexp library.

api Regexp_Lib =
api
   type regexp = String
   type text   = String

   #  search 
   my grep:   regexp -> text -> Null_Or( List( String ) )

   #  find all occurrences matching regexp 
   my findAll:  regexp -> text -> List( String )

   #  find all occurrences of the ith group in the matching regexp 
   my findAllGroup:  regexp -> Int -> text -> List( String )

   #  match and extract the match; return "" otherwise 
   my extract:  regexp -> text -> String

   #  match and extract the ith group; return "" otherwise 
   my extractGroup:  regexp -> Int -> text -> String

   #  search only 
   my matches:   regexp -> text -> Bool

   # search and replace
   my subst:  regexp -> (List( String ) -> String) -> text -> text

   # search and replace all occurrences
   my substAll:  regexp -> (List( String ) -> String) -> text -> text

   # search and replace
   my replace:  regexp -> String -> text -> text

   # search and replace all occurrences
   my replaceAll:  regexp -> String -> text -> text

   #  multiway match 
   my match:  text ->
               { cases:  List( regexp * ( List( String ) -> X)),
                 default: Void -> X
               } -> X
end
