## lex-output-spec.pkg
## John Reppy (http://www.cs.uchicago.edu/~jhr)
## Aaron Turon (adrassi@gmail.com)
## All rights reserved.

# Compiled by:
#     src/app/future-lex/src/Lexgen.make6

# Specification produced by LexGen

###                 "I had forgotten how incredibly and unforgivably sloppy
###                  the average mathematician is, how inconsistent about his syntax
###                  and how vague about the scopes of definitions and quantifications.
###                  I love mathematics, but it's the mathematicians I cannot stand,
###                  for since ALGOL 60 there is no longer an excuse."
###
###                                                     -- E.J. Dijkstra



package lex_output_spec {

     Dfa_State
      = STATE  {
	  id:  Int,
	  start_state:  Bool,
	  label:  vector::Vector( regular_expression::Re ),
	  final:  List( Int ),	#  Action vector indices 
	  next:  Ref( List( (regular_expression::Symbol_Set, Dfa_State) ) )
	};

     Action = String;

     Spec = SPEC  {
	decls:  String,
	header:  String,
	arg:  String,
	actions:  Vector( Action ),
	dfa:  List( Dfa_State ),
	start_states:  List( (String, Dfa_State) )
      };

};


## COPYRIGHT (c) 2005 
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
