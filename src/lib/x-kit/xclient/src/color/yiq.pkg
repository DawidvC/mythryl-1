## yiq.pkg
#
# YIQ NTSC colorspace -- see http://en.wikipedia.org/wiki/YIQ

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.make6


stipulate
    include rw_float_vector;							# Enable   vec[i]   and   vec[i] := f   notations.
    #
    package fv  = rw_float_vector;						# float_vector		is from   src/lib/std/float-vector.pkg
herein

    package yiq:  Yiq {								# Yiq			is from   src/lib/x-kit/xclient/src/stuff/yiq.api

	# We represent a YIQ color value by a
	# packed 3-vector of 64-bit floats holding
	# red, green, blue in that order:
	# 
	Yiq = fv::Rw_Vector;							# This should really be a read-only floatvector, but currently they are not actually a packed type -- See src/lib/std/src/float64-vector.pkg XXX BUGGO FIXME.
	    #									# Since we export Rgb as an opaque type, the difference is not critical.

	fun from_floats { y, i, q }						# Should do some sort of validation (restriction to [0,1) interval). What exception should we throw? Or should we silently truncate?  XXX BUGGO FIXME.
	    =
	    {	yiq = fv::make_rw_vector (3, 0.0);

		yiq[0] := y;							# Eventually we'll probably want to suppress index checking here for speed, using unsafe:: operations or whatever. XXX BUGGO FIXME.
		yiq[1] := i;
		yiq[2] := q;

		yiq;
	    };

	fun to_floats yiq
	    =
	    {   y = yiq[0];						# Eventually we'll probably want to suppress index checking here for speed, using unsafe:: operations or whatever. XXX BUGGO FIXME.
		i = yiq[1];
		q = yiq[2];

		{ y, i, q };
	    };


	fun from_rgb  rgb
	    =
	    {   (rgb::to_floats rgb) -> (red, green, blue);

		y = 0.30*red + 0.59*green + 0.11*blue;
		i = 0.60*red - 0.28*green - 0.32*blue;
		q = 0.21*red - 0.52*green + 0.31*blue;

		from_floats { y, i, q };
	    };

        fun from_name  colorname
	    =
	    from_rgb (rgb::from_floats (rgb24::to_floats  (rgb24::from_name  colorname)));
    };

end;


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1994 by AT&T Bell Laboratories
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
