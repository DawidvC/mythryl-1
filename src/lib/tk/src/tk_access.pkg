# tk_access.pkg

###        "A musician must make music,
###         an artist must paint, a poet must write,
###         if he is to be ultimately at peace with himself.
###
###         What one can be, one must be."
###
###                    -- Abraham Maslow


package access:  Access {

       my init:  Void -> Int
           = 
	   unsafe::c_interface::c_function "TKSML" "init_tcl";

           /*  Clears EventCmd-Buffer, Creates TclInterpreter and makes the setup
	   for its communication with SML */

       my reset:  Void -> Void
           = 
	   unsafe::c_interface::c_function "TKSML" "reset_tcl";

           #   Destroy's interpreter (if any) 

       my eval:  String -> Void
           = 
	   unsafe::c_interface::c_function "TKSML" "eval_tcl";

           /*  sends string to instance of TclInterpreter and forces its evaluation 
	   via Tcl_Eval. May produce EventCmd's in EventCmd-Buffer */

       my do_one_event:  Void -> Int
           = 
	   unsafe::c_interface::c_function "TKSML" "run_tcl";

           /*  Processes one Event in Tk via calling Tk_DoOneEvent (0). This
	   may produce EventCmd's in EventCmd-Buffer. If no event occured in
	   the interface, do_one_event will wait until the first non-empty event. 
	   Postcond: EventCmd is nonempty.*/

       my do_one_event_without_waiting:  Void -> Int
           = 
	   unsafe::c_interface::c_function "TKSML" "run_tcl_nowait";

           /*  Processes one Event in Tk via calling Tk_DoOneEvent (TCL_DONT_WAIT).
	   This may produce EventCmd's in EventCmd-Buffer. If no event occured in the
	   interface, do_one_event_without_waiting will return. 
	   do_one_event_without_waiting may return because no event occured (return value 0)
	   or because an empty-event occured (return value 1, EventCmd-Buffer 
	   unchanged.*/

       my get_event:  Void -> String
           = 
	   unsafe::c_interface::c_function "TKSML" "get_event";

          #   reads one Entry from EventCmd-Buffer - produces "" if there is none. 


    };
