## freezefile-map-g.pkg
## (C) 2001 Lucent Technologies, Bell Labs
## author: Matthias Blume (blume@research.bell-lab.com)

# Compiled by:
#     src/app/make7/Make7.make6



# This module implements a central index of freezefile
# symbol tables, stored in packed module_map form.
#
# By having only one such map, sharing should be maximized.



###                   "It may be that our role on this planet
###                    is not to worship God, but to create him."
###
###                                    -- Arthur C. Clarke



stipulate
    package st    =  symbol_table;			# symbol_table			is from   src/lib/compiler/front/typecheck-stuff/symbol-table/symbol-table.pkg
    package mm    =  module_map;			# module_map			is from   src/lib/compiler/front/typecheck-stuff/modules/module-map.pkg
    package st2mm =  symbol_table_to_module_map;	# symbol_table_to_module_map	is from   src/lib/compiler/front/typecheck-stuff/symbol-table/symbol-table-to-modulemap.pkg
herein

    api Freezefile_Map {

	get:               Void -> mm::Module_Map;
	reset:             Void -> Void;
	add_symbol_table:  st::Symbol_Table -> mm::Module_Map;
    };


    generic package freezefile_map_g (): Freezefile_Map {

        mm  =
            REF  mm::empty_module_map;			# XXX BUGGO FIXME more thread-hostile mutable global storage. :-(

	fun reset ()
            =
            mm :=  mm::empty_module_map;

	fun get ()
            =
            *mm;

	fun add_symbol_table  symbol_table
            =
            {   m =  st2mm::make_map' (symbol_table, *mm);
	    
		mm :=  m;

                m;
	    };
    };
end;
