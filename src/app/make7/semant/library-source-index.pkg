## library-source-index.pkg
## (C) 1999 Lucent Technologies, Bell Laboratories
## Author: Matthias Blume (blume@kurims.kyoto-u.ac.jp)

# Compiled by:
#     src/app/make7/Make7.make6



# The "library registry".
# make7 uses this to remember which libraries
# it is currently working on and what the
# corresponding input sources are.



api Library_Source_Index {

     Library_Source_Index;

     make:  Void
           -> Library_Source_Index;
								# anchor_dictionary	is from   src/app/make7/paths/anchor-dictionary.pkg
								# source_code_source	is from   src/lib/compiler/front/basics/source/source-code-source.pkg
     register
         :  Library_Source_Index
         -> ( anchor_dictionary::File,
              source_code_source::Input_Source
            )
         -> Void;

     lookup
	:  Library_Source_Index
        -> anchor_dictionary::File
        -> source_code_source::Input_Source;

     registered
         :  Library_Source_Index
         -> anchor_dictionary::File
         -> Bool;

     error
         :  Library_Source_Index
         -> ( anchor_dictionary::File,
              source_map::Source_Code_Region
            )
         -> error_message::Plaint_Sink;

     any_errors
         :  Library_Source_Index
         -> anchor_dictionary::File
         -> Bool;
};
								# Library_Source_Index	is from   src/app/make7/semant/library-source-index.pkg
package library_source_index: Library_Source_Index {

    Library_Source_Index
         =
         Ref( source_path_map::Map( source_code_source::Input_Source ) );

    #
    fun make ()
        =
        REF source_path_map::empty:  Library_Source_Index;

    #
    fun register gr (p, s)
        =
        gr := source_path_map::set (*gr, p, s);

    #
    fun lookup gr path
        =
	case (source_path_map::get (*gr, path))
          
             THE s =>  s;
	     NULL  =>  raise exception FAIL ("library_source_index::lookup " + anchor_dictionary::describe path);
        esac;

    #
    fun registered gr g
        =
        not_null (source_path_map::get (*gr, g));

    #
    fun error gr (g, r)
        =
        error_message::error (lookup gr g) r;

    #
    fun any_errors gr g
        =
        *(.any_errors (lookup gr g:  source_code_source::Input_Source));
};


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################
