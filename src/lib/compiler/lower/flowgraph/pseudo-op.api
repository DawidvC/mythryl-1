## pseudo-op.api

# Compiled by:
#     src/lib/compiler/lower/make7/lowcode.make6



# lowcode pseudo-ops
# Ties together the assembler and client pseudo-ops

api Pseudo_Ops {

    package codetree:	Codetree;		# Codetree		is from   src/lib/compiler/lower/codetree/codetree.api

    package client
        :
	Client_Pseudo_Ops			# Client_Pseudo_Ops	is from   src/lib/compiler/lower/flowgraph/client-pseudo-op.api
	where
            asm_pseudo_ops::codetree == codetree;

    Pseudo_Op
        =
        pseudo_op_basis_type::Pseudo_Op(	# pseudo_op_basis_type	is from   src/lib/compiler/lower/flowgraph/pseudo-op-basis-type.pkg
          codetree::Labexp,
          client::Pseudo_Op
        );

    to_string:  Pseudo_Op -> String;

    emit_value
        :
        { p_op:  Pseudo_Op,
          loc:   Int,
          emit:  unt8::Unt -> Void
        }
        ->
        Void;
	#
	# Identical to that in pseudo-op-basis.api 

    size_of:  (Pseudo_Op, Int) -> Int;
        #
        # Identical to that in pseudo-op-basis.api 

    adjust_labels:  (Pseudo_Op, Int) -> Bool;
	#
        # Adjust the value of labels in the pseudo_op
        # given the current location counter.
  };



## COPYRIGHT (c) 2001 Bell Labs, Lucent Technologies
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
