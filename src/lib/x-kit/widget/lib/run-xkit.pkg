## run-xkit.pkg

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.make6



# This package provides a higher-level interface to invoking applications.
# Users may set the shell variable "DISPLAY" to specify the display connection.



###                  "There should be no such thing as boring mathematics."
###
###                                           -- E.J. Dijkstra

stipulate
    package ctl =  thread_scheduler_control;						# thread_scheduler_control	is from   src/lib/thread-kit/src/unix/thread-scheduler-control.pkg
    package xau =  xauthentication;							# xauthentication		is from   src/lib/x-kit/xclient/src/stuff/xauthentication.pkg
    package w   =  widget;								# widget			is from   src/lib/x-kit/widget/basic/widget.pkg
    package xc  =  xcore;								# xcore				is from   src/lib/x-kit/xclient/src/api/xkit-lib-external-interface.pkg
herein

    package run_xkit: (weak)  Run_Xkit {						# Run_Xkit			is from   src/lib/x-kit/widget/lib/run-xkit.api

											# thread_scheduler_control_g	is from   src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control-g.pkg

	fun make_root_window
                display_or_null								# Allow overriding of the DISPLAY environment variable setting.
	    =
	    {   my  ( xdisplay,								# Typically from $DISPLAY environment variable.
                      xauthentication:  Null_Or(xc::Xauthentication)			# Typically from ~/.Xauthority
                    )
		    =
		    xau::get_xdisplay_string_and_xauthentication  display_or_null;

		w::make_root_window (xdisplay, xauthentication)
		except
		    xcore::XSERVER_CONNECT_ERROR s
			=
			{   file::write
				( file::stderr,
				  string::cat
				    [ "run_xkit: unable to open display \"",   xdisplay,   "\"\n",
				      "  ",   s,   "\n"
				    ]
				);

			    ctl::shut_down_thread_scheduler  threadkit_winix::process::failure;
			};
	      };

	default_time_quantum
	    =
	    time::from_milliseconds 20;

	fun run_xkit  do_it
	    =
	    {   ctl::start_up_thread_scheduler'
		    default_time_quantum
		    .{  do_it (make_root_window NULL);  };

		();
	    };

	Options
	    =
	    { display:                       Null_Or( String ),		# Connect to this display.
	      time_quantum_in_milliseconds:  Null_Or( large_int::Int )	# Threadkit time quantum in ms. 
	    };

	fun run_xkit' app (options:  Options)
	    =
	    {   fun run_it ()
		    =
		    app (make_root_window options.display);

		time_quantum
		    =
		    case options.time_quantum_in_milliseconds
			#
			THE ms =>  if (ms <= 0)  default_time_quantum; 
				   else          time::from_milliseconds ms;
				   fi;

			NULL   =>  default_time_quantum;
		    esac;


		ctl::start_up_thread_scheduler'
		    time_quantum	
		    run_it;

		();
	    };

    };		#  run_xkit 

end;


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1994 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
