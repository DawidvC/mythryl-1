# ast-pp.api

# Compiled by:
#     src/lib/compiler/lower/tools/sml-ast.make6

api  Mdl_Ast_Prettyprinter {

    package raw_syntax:  Mdl_Ast;		# Mdl_Ast	is from   src/lib/compiler/lower/tools/fake-sml-ast/ast.api

    ident:      raw_syntax::Ident                       -> lowcode_prettyprinter::Prettyprint;
    literal:    raw_syntax::Literal                     -> lowcode_prettyprinter::Prettyprint;
    expression: raw_syntax::Expression                  -> lowcode_prettyprinter::Prettyprint;
    labexp:     (raw_syntax::Id, raw_syntax::Expression)  -> lowcode_prettyprinter::Prettyprint;
    sexp:       raw_syntax::Package_Exp                  -> lowcode_prettyprinter::Prettyprint;
    api_expression:     raw_syntax::Api_Exp              -> lowcode_prettyprinter::Prettyprint;
    pattern:    raw_syntax::Pattern                     -> lowcode_prettyprinter::Prettyprint;
    labpat:     (raw_syntax::Id, raw_syntax::Pattern)   -> lowcode_prettyprinter::Prettyprint;
    type:     raw_syntax::Some_Type                   -> lowcode_prettyprinter::Prettyprint;
    labty:      (raw_syntax::Id, raw_syntax::Some_Type) -> lowcode_prettyprinter::Prettyprint;
    decl:       raw_syntax::Decl                        -> lowcode_prettyprinter::Prettyprint;
    decls:      List( raw_syntax::Decl )                -> lowcode_prettyprinter::Prettyprint;
    valbind:    raw_syntax::Valbind                     -> lowcode_prettyprinter::Prettyprint;
    valbinds:   List( raw_syntax::Valbind )             -> lowcode_prettyprinter::Prettyprint;
    funbind:    raw_syntax::Funbind                     -> lowcode_prettyprinter::Prettyprint;
    funbinds:   List( raw_syntax::Funbind )             -> lowcode_prettyprinter::Prettyprint;
    clause:     raw_syntax::Clause                      -> lowcode_prettyprinter::Prettyprint;
    clauses:    List( raw_syntax::Clause )              -> lowcode_prettyprinter::Prettyprint;
    consbind:   raw_syntax::Consbind                    -> lowcode_prettyprinter::Prettyprint;
    consbinds:  List( raw_syntax::Consbind )            -> lowcode_prettyprinter::Prettyprint;
    typebind:   raw_syntax::Typebind                    -> lowcode_prettyprinter::Prettyprint;
    typebinds:  List( raw_syntax::Typebind )            -> lowcode_prettyprinter::Prettyprint;

    type_variable:  raw_syntax::Typevar_Ref             -> lowcode_prettyprinter::Prettyprint;
    datatypebind:   raw_syntax::Datatypebind            -> lowcode_prettyprinter::Prettyprint;
    datatypebinds:  List( raw_syntax::Datatypebind )    -> lowcode_prettyprinter::Prettyprint;

    encode_name: raw_syntax::Id -> raw_syntax::Id;
};
