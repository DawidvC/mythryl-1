## intra-library-dependency-graph.pkg
## (C) 1999 Lucent Technologies, Bell Laboratories
## Author: Matthias Blume (blume@kurims.kyoto-u.ac.jp)

# Compiled by:
#     src/app/make7/Make7.make6



# This file implements "intra-library" dependency graphs,
# which is to say ones at the granularity of
# individual source files and .o7 files, as opposed to
# the inter-library dependency graphs and complete-library
# granularity of inter_library_dependency_graph in
#
#     ./inter-library-dependency-graph.pkg
#
#
#
# BACKGROUND:
#
# Compiling a single sourcefile "foo.pkg" produces
# a single objectcode file "foo.o7".
#
# That .o7 file may then be combined with the other .o7
# in its library to make up a .frozen freezefile.
#
# We refer to the contents of an .o7 file as an "o7",
# whether it is actually stored in a .o7 file,
# a freezefile, or in memory.
#
# A "library" is essentially everything compiled by
# one .make6 makefile.
#
# For an explanation of REAL vs VIRTUAL and
# FROZEN vs THAWED  libraries, see the comments in
#
#     ./inter-library-dependency-graph.pkg
#
# Nomenclature:
#     A "freezefile"  is the file holding a frozen library. 
#     A "bare o7"     is an o7 living in its own .o7 file.
#     An "iced o7"    refers to an o7 packed inside a freezefile.
#     A "filter"      selects a subset of the symbols exported by a library.
#     "far"           means something in a different library.
#     "near_imports"  are those from o7s in the same library.
#     "far_imports" are those from o7s in other libraries.

# XXX BUGGO FIXME for consistency in nomenclature, shouldn't that be "near_imports" and "far_imports"?


# From the manual:
#
#     You will notice that one can never go from an iced_o7 to a bare_o7.
#     This mirrors our intention that a sub-library of a FROZEN library must
#     also be FROZEN.  From bare_o7s, on the other hand, you can either go
#     to other bare_o7s or to iced_o7s.  All the "near_imports" of a
#     bare_o7 (i.e., the imports that come from the same library) are
#     also bare_o7s.
#
#     To go to an iced_o7 in another library one must look into the list of
#     "global_import"s.  Global imports refer to "far" o7s -- o7s that are
#     within other libraries. The edge that goes to such an o7 can have an
#     export filter attached. Therefore, a far_o7_in_lib is an iced_o7 with
#     an optional filter, a far_o7 is an o7 with an  optional filter attached.



package intra_library_dependency_graph {

    # A filter is a set of symbols.
    # We use it to represent the set
    # of symbols exported from a library
    # which should be visible in a given
    # context:
    #
    Filter
        =
        Null_Or( symbol_set::Set );				# symbol_set	is from   src/app/make7/util/symbolset.pkg


    # An Iced_O7 is an .o7 packed within
    # a .frozen library freezefile.  This is
    # a lot like a unix .o file packed
    # within a .a or .so file:
    #
    Iced_O7							# A .o7 objectfile packed inside a freezefile.			
        =
        ICED_O7  {
            iced_o7:         iced_o7::Iced_O7,			# iced_o7	is from   src/app/make7/freezefile/iced-o7.pkg
	    near_imports:   List( Iced_O7 ),			#  o7s in the same library -- ie, built by same .make6 makefile.	
	    far_imports:  List( Void -> Far_Iced_O7 ) 	#  o7s in other libraries.					
        }
        withtype
            Far_Iced_O7
                =
                ( Filter,
                  Iced_O7,
                  Null_Or( Int )				# References i'th entry of lg::LIBRARY::sublibraries in (our parent?) library.
                );

    Bare_O7							# An individual .o7 file on disk.					
        =
        BARE_O7  {
            bare_o7:         bare_o7::Bare_O7,			# bare_o7	is from   src/app/make7/o7/bare-o7.pkg
	    near_imports:   List( Bare_O7 ),			#  .o7 files in the same library -- ie, built by same .make6 makefile.	
	    far_imports:  List( Far_O7 )			#  .o7 files in other libraries.					
        }

    also
    Bare_Or_Iced_O7						# A .o7 file, bare or iced in a freezefile, either way.
        = O7_IS_BARE   Bare_O7
        | O7_IS_ICED
              ( Iced_O7,
                o7_exports::Oh7_Exports,				# o7_exports	is from   src/app/make7/semant/o7-exports.pkg
                Null_Or( Int )
              )

    withtype
    Far_O7
        =
        (Filter, Bare_Or_Iced_O7);

    fun describe_o7 (O7_IS_ICED (ICED_O7 { iced_o7 => i, ... }, _, _)) =>  iced_o7::describe i;
        describe_o7 (O7_IS_BARE (BARE_O7 { bare_o7 => i, ... }      )) =>  bare_o7::describe i;
    end;

    fun describe_far_o7 (_, o7)           			#  This fun is actually never used at present.				
        =
        describe_o7 o7;

    #  Comparing various nodes for equality 
    fun beq (  ICED_O7 { iced_o7 => i,  ... },
               ICED_O7 { iced_o7 => i', ... }
            )
        =
        iced_o7::compare (i, i') == EQUAL;

    fun seq (  BARE_O7  { bare_o7 => i,  ... },
               BARE_O7  { bare_o7 => i', ... }
            )
        =
        bare_o7::eq (i, i');

    fun sbeq (O7_IS_BARE  n,
              O7_IS_BARE  n'
             )
            =>
            seq (n, n');

        sbeq (O7_IS_ICED (n,  _, _),
              O7_IS_ICED (n', _, _))
            =>
            beq (n, n');

        sbeq _ 
	    =>  FALSE;
    end;
};



##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################
