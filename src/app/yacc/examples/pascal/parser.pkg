#  parser.pkg 
#  Driver for Pascal parser 

package Parser {


package PascalLrVals = PascalLrValsFun (package token = LrParser::token)

package PascalLex = PascalLexFun (package Tokens = PascalLrVals::Tokens)

package PascalParser = join_g (package Lex= PascalLex
		              package LrParser = LrParser
		              package parser_data = PascalLrVals::parser_data)

fun parse s =
    let dev = file::open_for_read s
	stream = PascalParser::make_lexer (fn i => file::read_n (dev, i))
	fun error (e, i: Int, _) =
	    file::write (file::stdout,
               s + ", " + " line " + (int::to_string i) + ", Error: " + e + "\n")
     in PascalLex::user_declarations::lineNum := 1;
        PascalParser::parse (30, stream, error, ())
        before file::close_input dev
    end

fun keybd () =
    let stream = 
	    PascalParser::make_lexer (fn i => file::read_line file::stdin)
        fun error (e, i: Int, _) =
	    file::write (file::stdout,
              "std_in, " + " line " + (int::to_string i) + ", Error: " + e + "\n")
     in PascalLex::user_declarations::lineNum := 1;
	PascalParser::parse (0, stream, error, ())
    end

}; #  package Parser 
