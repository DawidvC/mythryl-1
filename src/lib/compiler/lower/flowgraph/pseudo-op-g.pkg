## pseudo-ops-g.pkg

# Compiled by:
#     src/lib/compiler/lower/make7/lowcode.make6



# lowcode pseudo-ops.
# Ties together the assembler and client pseudo-ops



# We are invoked by:
#
#    src/lib/compiler/codegen/x86/x86-codetree.pkg

generic package pseudo_op_g (
    package client:  Client_Pseudo_Ops;			 		# Client_Pseudo_Ops	is from   src/lib/compiler/lower/flowgraph/client-pseudo-op.api
)
: (weak) Pseudo_Ops							# Pseudo_Ops		is from   src/lib/compiler/lower/flowgraph/pseudo-op.api

{
    package client   = client; 
    package basis    = client::asm_pseudo_ops;
    package codetree = basis::codetree;

    package bt= pseudo_op_basis_type;	# pseudo_op_basis_type	is from   src/lib/compiler/lower/flowgraph/pseudo-op-basis-type.pkg

    Pseudo_Op = basis::Pseudo_Op( client::Pseudo_Op );

    fun to_string (bt::EXT ext)   =>  client::to_string ext;
        to_string p_op            =>  basis::to_string p_op;
    end;

    fun size_of (bt::EXT ext, loc) =>  client::size_of (ext, loc);
        size_of (p_op,        loc) =>  basis::size_of (p_op, loc);
    end;

    fun emit_value (arg as { p_op, loc, emit } )
	= 
	case p_op

	       bt::EXT ext => client::emit_value { p_op=>ext, loc, emit };
	       _           => basis::emit_value arg;
        esac;


    fun adjust_labels (bt::EXT ext, loc) =>  client::adjust_labels (ext, loc);
	adjust_labels _                  =>  FALSE;
    end;

};


## COPYRIGHT (c) 2001 Bell Labs, Lucent Technologies
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
