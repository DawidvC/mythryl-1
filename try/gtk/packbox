#!/usr/bin/mythryl

# This is a Mythryl version of the GTK+ tutorial
# example program 'packbox.c':
#
#     http://library.gnome.org/devel/gtk-tutorial/stable/x387.html
#

include gtk_via_pipe;

fun make_box { session, homogeneous, spacing, expand, fill, padding }
    =
    {   box = make_horizontal_box { session, homogeneous, spacing };

        button = make_button_with_label (session, "pack_box");
        pack_box { session, box, kid => button, pack => FROM_START, expand, fill, padding };
        show_widget (session, button);

        button = make_button_with_label (session, "(box,");
        pack_box { session, box, kid => button, pack => FROM_START, expand, fill, padding };
        show_widget (session, button);

        button = make_button_with_label (session, "button,");
        pack_box { session, box, kid => button, pack => FROM_START, expand, fill, padding };
        show_widget (session, button);

        button =    expand  ??  make_button_with_label (session, "TRUE")
                            ::  make_button_with_label (session, "FALSE");
        pack_box { session, box, kid => button, pack => FROM_START, expand, fill, padding };
        show_widget (session, button);

        button = make_button_with_label (session, fill ?? "TRUE" :: "FALSE");
        pack_box { session, box, kid => button, pack => FROM_START, expand, fill, padding };
        show_widget (session, button);

        button = make_button_with_label (session, sprintf "%d" padding);
        pack_box { session, box, kid => button, pack => FROM_START, expand, fill, padding };
        show_widget (session, button);

        box;
    };

session = make_session [];

if (length (argv ()) != 1)

     printf "usage: packbox num, where num is 1, 2, or 3.\n";
     exit 1;
fi;

which = atoi (head (argv ()));

window = make_window  session;

set_delete_event_callback session window .{ exit_main session; exit 0; };
set_destroy_callback      session window .{ exit_main session; exit 0; };

set_border_width (session, window, 10);

box1 = make_vertical_box { session, homogeneous => FALSE, spacing => 0 };

case which

     1 => {   label = make_label (session, "gtk_hbox_new (FALSE, 0);");
	      set_widget_alignment (session, label, 0.0, 0.0);
	      pack_box { session, box => box1, kid => label, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, label);

              box2 = make_box { session, homogeneous => FALSE, spacing => 0, expand => FALSE, fill => FALSE, padding => 0 };
	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);
              
              box2 = make_box { session, homogeneous => FALSE, spacing => 0, expand => TRUE,  fill => FALSE, padding => 0 };
	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);
              
              box2 = make_box { session, homogeneous => FALSE, spacing => 0, expand => TRUE,  fill => TRUE,  padding => 0 };
	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);
              
              separator = make_horizontal_separator session;
	      pack_box { session, box => box1, kid => separator, pack => FROM_START, expand => FALSE, fill => TRUE, padding => 5 };
	      show_widget (session, separator);

              label = make_label (session, "gtk_hbox_new (TRUE, 0);");
	      set_widget_alignment (session, label, 0.0, 0.0);
	      pack_box { session, box => box1, kid => label, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, label);

              box2 = make_box { session, homogeneous => TRUE, spacing => 0, expand => TRUE, fill => FALSE, padding => 0 };
	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);

              box2 = make_box { session, homogeneous => TRUE, spacing => 0, expand => TRUE, fill => TRUE,  padding => 0 };
	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);

              separator = make_horizontal_separator session;
	      pack_box { session, box => box1, kid => separator, pack => FROM_START, expand => FALSE, fill => TRUE, padding => 5 };
	      show_widget (session, separator);
          };

     2 => {   label = make_label (session, "gtk_hbox_new (FALSE, 10);");
	      set_widget_alignment (session, label, 0.0, 0.0);
	      pack_box { session, box => box1, kid => label, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, label);

              box2 = make_box { session, homogeneous => FALSE, spacing => 10, expand => TRUE, fill => FALSE, padding => 0 };
	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);
              
              box2 = make_box { session, homogeneous => FALSE, spacing => 10, expand => TRUE, fill => TRUE, padding => 0 };
	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);
              
              separator = make_horizontal_separator session;
	      pack_box { session, box => box1, kid => separator, pack => FROM_START, expand => FALSE, fill => TRUE, padding => 5 };
	      show_widget (session, separator);

              label = make_label (session, "gtk_hbox_new (FALSE, 0);");
	      set_widget_alignment (session, label, 0.0, 0.0);
	      pack_box { session, box => box1, kid => label, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, label);

              box2 = make_box { session, homogeneous => FALSE, spacing => 0, expand => TRUE, fill => FALSE, padding => 10 };
	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);

              box2 = make_box { session, homogeneous => FALSE, spacing => 0, expand => TRUE, fill => TRUE, padding => 10 };
	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);

              separator = make_horizontal_separator session;
	      pack_box { session, box => box1, kid => separator, pack => FROM_START, expand => FALSE, fill => TRUE, padding => 5 };
	      show_widget (session, separator);
          };
    
     _ => {   box2 = make_box { session, homogeneous => FALSE, spacing => 0, expand => FALSE, fill => FALSE, padding => 0 };

              label = make_label (session, "end");
	      pack_box { session, box => box2, kid => label, pack => FROM_END, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, label);

	      pack_box { session, box => box1, kid => box2, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };
	      show_widget (session, box2);

              separator = make_horizontal_separator session;
              set_minimum_widget_size (session, separator, (400, 5));
	      pack_box { session, box => box1, kid => separator, pack => FROM_START, expand => FALSE, fill => TRUE, padding => 5 };
	      show_widget (session, separator);
          };

esac;


quitbox = make_horizontal_box { session, homogeneous => FALSE, spacing => 0 };

button  = make_button_with_label (session, "Quit");

set_clicked_callback session button .{  destroy_widget( session, window );  };

pack_box { session, box => quitbox, kid => button,  pack => FROM_START, expand => TRUE,  fill => FALSE, padding => 0 };
pack_box { session, box => box1,    kid => quitbox, pack => FROM_START, expand => FALSE, fill => FALSE, padding => 0 };

add_kid { session, kid => box1, mom => window };

show_widget (session, button);
show_widget (session, quitbox);
show_widget (session, box1);
show_widget (session, window);

main session;

exit 0;
