# Important NOTE: we absolutely do not want to use the version of lowcode
# that is in the compiler.  Otherwise, when we change lowcode, we will not
# be able to compile/run this tool until we've bootstrapped a new compiler. 
#
# -- Allen Leung


LIBRARY_GROUP_EXPORTS 

	api Cells
	api Cells_Basis 
	api CONSTANT
	api DICTIONARY
	api Instruction_Stream
	api LABEL
	api Machine_Int
	api Mdl_Compile
	api Mdl_Dictionary
	api Mdl_Gen
	api Mdl_Gen_Module
	api Mdl_Gen_Module2
	api Mdl_Rtl_Comp
	api Mdl_Rtl_Tools
	api Mdl_Type_Utilities
	api Mdl_Typing
	api Lowcode_Defs
	api Lowcode_Types
	api Codetree
	api Codetree_Basis
	api Codetree_Extension
	api Codetree_Fold
	api Codetree_Rwrite
	api Codetree_Rtl
	api Codetree_Utilities
	api Pseudo_Ops
	api Region
	api Rtl_Build

	pkg cells_basis
	pkg Dictionary
	pkg label
	pkg mdl_abstract_syntax_utilities
	pkg mdl_compile
	pkg mdl_constant
	pkg mdl_dictionary
	pkg mdl_extension
	pkg mdl_g
	pkg mdl_codetree
	pkg mdl_codetree_fold
	pkg mdl_codetree_rtl
	pkg mdl_codetree_rewrite
	pkg mdl_codetree_utilities
	pkg mdl_pp
	pkg mdl_parser
	pkg mdl_pseudo_ops
	pkg mdl_rtl_builder
	pkg mdl_rtl_comp
	pkg mdl_rtl_tools
	pkg mdl_region
	pkg mdl_rewriter
	pkg mdl_stream
	pkg mdl_trans
	pkg mdl_type_utilities
	pkg mdl_typing
	pkg lowcode_definitions
	pkg lowcode_types
	pkg codetree_basis
	pkg machine_int

#	generic cells
	generic instruction_stream
	generic mdl_compile
	generic mdl_dummy_g
	generic mdl_dictionary
	generic mdl_g
	generic mdl_rtl_comp
	generic mdl_rtl_tools
	generic mdl_type_utilities
	generic mdl_typing
	generic lowcode_definitions
	generic lowcode_types
	generic codetree_stuff_g
	generic codetree_fold
	generic codetree_rtl
	generic codetree_rewrite
	generic codetree_utils
	generic rtl_build



LIBRARY_GROUP_COMPONENTS

	$ROOT/src/lib/std/stdlib.make6

	$ROOT/src/app/yacc/lib/mythryl-yacc-lib.make6
	$ROOT/src/lib/core/compiler.make6


        # Lowcode libraries [NEVER share the version in the compiler]
	$ROOT/src/lib/graph/graphs.make6
        $ROOT/src/lib/compiler/lower/make7/control.make6
        $ROOT/src/lib/compiler/lower/make7/lib.make6
        $ROOT/src/lib/compiler/lower/make7/lowcode.make6
        $ROOT/src/lib/compiler/lower/make7/codetree.make6
        $ROOT/src/lib/compiler/lower/make7/rtl.make6

	# Pretty printer:
	$ROOT/src/lib/compiler/lower/tools/prettyprint/Makefile.make6

	# Line number mapping utility:
	$ROOT/src/lib/compiler/lower/tools/source-map/Makefile.make6

	# Abstract syntax tree:
	$ROOT/src/lib/compiler/lower/tools/fake-sml-ast/Makefile.make6

	# Parser:
	$ROOT/src/lib/compiler/lower/tools/precedence-parser/Makefile.make6
	$ROOT/src/lib/compiler/lower/tools/parser/Makefile.make6


	# A simple dictionary abstract type:
	dictionary.sml

	# Dictionary:
	mdl-dictionary.sig
	mdl-dictionary.sml

	# Type checking:
	mdl-type-utils.api
	mdl-type-utils.pkg
	mdl-typing.api
	mdl-typing.pkg

	# Process rtl description:
	mdl-rtl.pkg 
	mdl-rtl-tools.api 
	mdl-rtl-tools.pkg 
	mdl-rtl-comp.api
	mdl-rtl-comp.pkg 

	# Semantics:
	# lambda-rtl.sig
	# lambda-rtl.sml
	# basis.sml

	# The compiler:
	mdl-compile.api
	mdl-compile.pkg

	lowcode-defs.api
	lowcode-defs.pkg
	lowcode-types.api
	lowcode-types.pkg

	# Glue:
	mdl-gen.api
	mdl-g.pkg
	mdl-dummygen.pkg
	mdl-glue0.pkg
	mdl-glue.pkg

	# Various modules for generating different packages/generics:
	mdl-gen-cells.pkg 		# Generate cells.
	mdl-gen-instruction.pkg 		# Generate the instruction set.
	mdl-gen-asm.pkg   		# Generate the assembler.
	mdl-gen-mc.pkg    		# Generate the machine code emitter.
	mdl-gen-instructionprops.pkg 		# Generate the instruction properties.
	mdl-gen-rewrite.pkg 		# Generate the rewrite module.
	mdl-gen-rtlprops.pkg 		# Generate the rtl properties.
	mdl-gen-ssaprops.pkg 		# Generate the ssa properties.
	# mdl-gen-delay.pkg 		# Generate the delay slots properties.
	# mdl-gen-schedprops.pkg 	# Generate the scheduling properties.
