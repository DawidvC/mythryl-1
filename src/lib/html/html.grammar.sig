api Html_Tokens {
    Token (X,Y);
    Semantic_Value;
    entity_ref: ((String), X, X) -> Token (Semantic_Value,X);
    char_ref: ((String), X, X) -> Token (Semantic_Value,X);
    pcdata: ((String), X, X) -> Token (Semantic_Value,X);
    end_var: (X, X) -> Token (Semantic_Value,X);
    start_var: (X, X) -> Token (Semantic_Value,X);
    end_ul: (X, X) -> Token (Semantic_Value,X);
    start_ul: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_u: (X, X) -> Token (Semantic_Value,X);
    start_u: (X, X) -> Token (Semantic_Value,X);
    end_tt: (X, X) -> Token (Semantic_Value,X);
    start_tt: (X, X) -> Token (Semantic_Value,X);
    end_tr: (X, X) -> Token (Semantic_Value,X);
    start_tr: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_title: (X, X) -> Token (Semantic_Value,X);
    start_title: (X, X) -> Token (Semantic_Value,X);
    end_th: (X, X) -> Token (Semantic_Value,X);
    start_th: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_textarea: (X, X) -> Token (Semantic_Value,X);
    start_textarea: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_td: (X, X) -> Token (Semantic_Value,X);
    start_td: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_table: (X, X) -> Token (Semantic_Value,X);
    start_table: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_sup: (X, X) -> Token (Semantic_Value,X);
    start_sup: (X, X) -> Token (Semantic_Value,X);
    end_sub: (X, X) -> Token (Semantic_Value,X);
    start_sub: (X, X) -> Token (Semantic_Value,X);
    end_style: (X, X) -> Token (Semantic_Value,X);
    start_style: (X, X) -> Token (Semantic_Value,X);
    end_strong: (X, X) -> Token (Semantic_Value,X);
    start_strong: (X, X) -> Token (Semantic_Value,X);
    end_strike: (X, X) -> Token (Semantic_Value,X);
    start_strike: (X, X) -> Token (Semantic_Value,X);
    end_small: (X, X) -> Token (Semantic_Value,X);
    start_small: (X, X) -> Token (Semantic_Value,X);
    end_select: (X, X) -> Token (Semantic_Value,X);
    start_select: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_script: (X, X) -> Token (Semantic_Value,X);
    start_script: (X, X) -> Token (Semantic_Value,X);
    end_samp: (X, X) -> Token (Semantic_Value,X);
    start_samp: (X, X) -> Token (Semantic_Value,X);
    end_pre: (X, X) -> Token (Semantic_Value,X);
    start_pre: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    tag_param: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_p: (X, X) -> Token (Semantic_Value,X);
    start_p: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_option: (X, X) -> Token (Semantic_Value,X);
    start_option: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_ol: (X, X) -> Token (Semantic_Value,X);
    start_ol: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    tag_meta: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_menu: (X, X) -> Token (Semantic_Value,X);
    start_menu: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_map: (X, X) -> Token (Semantic_Value,X);
    start_map: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    tag_link: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_li: (X, X) -> Token (Semantic_Value,X);
    start_li: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_kbd: (X, X) -> Token (Semantic_Value,X);
    start_kbd: (X, X) -> Token (Semantic_Value,X);
    tag_isindex: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    tag_input: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    tag_img: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_i: (X, X) -> Token (Semantic_Value,X);
    start_i: (X, X) -> Token (Semantic_Value,X);
    end_html: (X, X) -> Token (Semantic_Value,X);
    start_html: (X, X) -> Token (Semantic_Value,X);
    tag_hr: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_head: (X, X) -> Token (Semantic_Value,X);
    start_head: (X, X) -> Token (Semantic_Value,X);
    end_h6: (X, X) -> Token (Semantic_Value,X);
    start_h6: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_h5: (X, X) -> Token (Semantic_Value,X);
    start_h5: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_h4: (X, X) -> Token (Semantic_Value,X);
    start_h4: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_h3: (X, X) -> Token (Semantic_Value,X);
    start_h3: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_h2: (X, X) -> Token (Semantic_Value,X);
    start_h2: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_h1: (X, X) -> Token (Semantic_Value,X);
    start_h1: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_form: (X, X) -> Token (Semantic_Value,X);
    start_form: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_basefont: (X, X) -> Token (Semantic_Value,X);
    start_basefont: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_font: (X, X) -> Token (Semantic_Value,X);
    start_font: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_em: (X, X) -> Token (Semantic_Value,X);
    start_em: (X, X) -> Token (Semantic_Value,X);
    end_dt: (X, X) -> Token (Semantic_Value,X);
    start_dt: (X, X) -> Token (Semantic_Value,X);
    end_dl: (X, X) -> Token (Semantic_Value,X);
    start_dl: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_div: (X, X) -> Token (Semantic_Value,X);
    start_div: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_dir: (X, X) -> Token (Semantic_Value,X);
    start_dir: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_dfn: (X, X) -> Token (Semantic_Value,X);
    start_dfn: (X, X) -> Token (Semantic_Value,X);
    end_dd: (X, X) -> Token (Semantic_Value,X);
    start_dd: (X, X) -> Token (Semantic_Value,X);
    end_code: (X, X) -> Token (Semantic_Value,X);
    start_code: (X, X) -> Token (Semantic_Value,X);
    end_cite: (X, X) -> Token (Semantic_Value,X);
    start_cite: (X, X) -> Token (Semantic_Value,X);
    end_center: (X, X) -> Token (Semantic_Value,X);
    start_center: (X, X) -> Token (Semantic_Value,X);
    end_caption: (X, X) -> Token (Semantic_Value,X);
    start_caption: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    tag_br: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_body: (X, X) -> Token (Semantic_Value,X);
    start_body: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_blockquote: (X, X) -> Token (Semantic_Value,X);
    start_blockquote: (X, X) -> Token (Semantic_Value,X);
    end_big: (X, X) -> Token (Semantic_Value,X);
    start_big: (X, X) -> Token (Semantic_Value,X);
    tag_base: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_b: (X, X) -> Token (Semantic_Value,X);
    start_b: (X, X) -> Token (Semantic_Value,X);
    tag_area: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_applet: (X, X) -> Token (Semantic_Value,X);
    start_applet: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    end_address: (X, X) -> Token (Semantic_Value,X);
    start_address: (X, X) -> Token (Semantic_Value,X);
    end_a: (X, X) -> Token (Semantic_Value,X);
    start_a: ((htmlattr_vals::Attributes), X, X) -> Token (Semantic_Value,X);
    eof: (X, X) -> Token (Semantic_Value,X);
};
api Html_Lrvals{
    package tokens:  Html_Tokens;
    package parser_data: Parser_Data;
    sharing parser_data::token::Token == tokens::Token;
    sharing parser_data::Semantic_Value == tokens::Semantic_Value;
};
