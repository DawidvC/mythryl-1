## print-raw-syntax-tree-as-nada.api 
## Jing Cao and Lukasz Ziarek 

# Compiled by:
#     src/lib/compiler/front/typechecker/typecheck.make6



api Print_Raw_Syntax_Tree_As_Lib7 {

    print_expression_as_nada:  (symbol_table::Symbol_Table,
				    Null_Or( source_code_source::Input_Source ))
				  -> prettyprint::Stream
				  -> (raw_syntax::Raw_Expression,
				     Int)
				  -> Void; 

    print_pattern_as_nada:   (symbol_table::Symbol_Table,
				  Null_Or( source_code_source::Input_Source ))
			       -> prettyprint::Stream
			       -> (raw_syntax::Case_Pattern,
				  Int)
			       -> Void;

    print_package_expression_as_nada:   (symbol_table::Symbol_Table,
					       Null_Or( source_code_source::Input_Source ))
					    -> prettyprint::Stream
					    -> (raw_syntax::Package_Expression,
					       Int)
					    -> Void;

    print_generic_expression_as_nada:   (symbol_table::Symbol_Table,
					     Null_Or( source_code_source::Input_Source ))
					  -> prettyprint::Stream
					  -> (raw_syntax::Generic_Expression,
					     Int)
					  -> Void;

    print_where_spec_as_nada:   (symbol_table::Symbol_Table,
				     Null_Or( source_code_source::Input_Source ))
				  -> prettyprint::Stream
				  -> (raw_syntax::Where_Spec,
				     Int)
				  -> Void;

    print_api_expression_as_nada:   (symbol_table::Symbol_Table,
					       Null_Or( source_code_source::Input_Source ))
					    -> prettyprint::Stream
					    -> (raw_syntax::Api_Expression,
					       Int)
					    -> Void;

    print_generic_api_expression_as_nada:   (symbol_table::Symbol_Table,
						       Null_Or( source_code_source::Input_Source ))
						    -> prettyprint::Stream
						    -> (raw_syntax::Generic_Api_Expression,
						       Int)
						    -> Void;

    print_specification_as_nada:   (symbol_table::Symbol_Table,
					Null_Or( source_code_source::Input_Source ))
				     -> prettyprint::Stream
				     -> (raw_syntax::Api_Element,
					Int)
				     -> Void; 

    print_declaration_as_nada:   (symbol_table::Symbol_Table,
				      Null_Or( source_code_source::Input_Source ))
				   -> prettyprint::Stream
				   -> (raw_syntax::Declaration,
				      Int)
				   -> Void;

    print_named_value_as_nada:    (symbol_table::Symbol_Table,
					Null_Or( source_code_source::Input_Source )) 
				     -> prettyprint::Stream
				     -> (raw_syntax::Named_Value,
					Int)
				     -> Void;

    print_recursively_named_value_as_nada:    (symbol_table::Symbol_Table,
						  Null_Or( source_code_source::Input_Source ))
					       -> prettyprint::Stream
					       -> (raw_syntax::Named_Recursive_Value,
						  Int)
					       -> Void;

    print_sml_named_function_as_nada:    (symbol_table::Symbol_Table,
					       Null_Or( source_code_source::Input_Source ))
					    -> prettyprint::Stream
					    -> String
					    -> (raw_syntax::Named_Function,
					       Int)
					    -> Void;

    print_lib7_named_function_as_nada:    (symbol_table::Symbol_Table,
						Null_Or( source_code_source::Input_Source ))
					     -> prettyprint::Stream
					     -> String
					     -> (raw_syntax::Nada_Named_Function,
						Int)
					     -> Void;

    print_pattern_clause_as_nada:   (symbol_table::Symbol_Table,
					     Null_Or( source_code_source::Input_Source ))
					  -> prettyprint::Stream
					  -> (raw_syntax::Pattern_Clause,
					     Int)
					  -> Void;

    print_type_naming_as_nada:    (symbol_table::Symbol_Table,
				       Null_Or( source_code_source::Input_Source ))
				    -> prettyprint::Stream
				    -> (raw_syntax::Named_Type,
				       Int)
				    -> Void;

    print_datatype_naming_as_mythyrl7:    (symbol_table::Symbol_Table,
					   Null_Or( source_code_source::Input_Source ))
					-> prettyprint::Stream
					-> (raw_syntax::Named_Datatype,
					   Int)
					-> Void;  

    print_datatype_naming_right_hand_side_as_nada:    (symbol_table::Symbol_Table,
							   Null_Or( source_code_source::Input_Source ))
							-> prettyprint::Stream
							-> (raw_syntax::Named_Datatype_Right_Hand_Side,
							   Int)
							-> Void;

    print_exception_naming_as_nada:    (symbol_table::Symbol_Table,
					    Null_Or( source_code_source::Input_Source ))
					 -> prettyprint::Stream
					 -> (raw_syntax::Named_Exception,
					    Int)
					 -> Void;

    print_named_package_as_nada:    (symbol_table::Symbol_Table,
					    Null_Or( source_code_source::Input_Source ))
					 -> prettyprint::Stream
					 -> (raw_syntax::Named_Package,
					    Int)
					 -> Void;

    print_generic_naming_as_nada:    (symbol_table::Symbol_Table,
					  Null_Or( source_code_source::Input_Source ))
				       -> prettyprint::Stream
				       -> (raw_syntax::Named_Generic,
					  Int)
				       -> Void;

    print_type_variable_as_nada:   (symbol_table::Symbol_Table,
					Null_Or( source_code_source::Input_Source ))
				     -> prettyprint::Stream
				     -> (raw_syntax::Type_Variable,
					Int)
				     -> Void;

    print_type_as_nada:   (symbol_table::Symbol_Table,
			       Null_Or( source_code_source::Input_Source ))
			    -> prettyprint::Stream
			    -> (raw_syntax::Any_Type,
			       Int)
			    -> Void; 
};


## Copyright 2003 by University of Chicago 
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
